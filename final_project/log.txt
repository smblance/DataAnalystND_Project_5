LinearSVC(C=1, class_weight='balanced', dual=False, fit_intercept=True,
     intercept_scaling=1, loss='squared_hinge', max_iter=1000,
     multi_class='ovr', penalty='l2', random_state=None, tol=0.0001,
     verbose=0)

Accuracy: 0.71917
Precision: 0.14627
Recall: 0.49000
F1: 0.22529
F2: 0.33333

Total predictions: 1200
True positives:   49
False positives:  286
False negatives:   51
True negatives:  814

-------------------------

LinearSVC(C=1, class_weight='balanced', dual=False, fit_intercept=True,
     intercept_scaling=1, loss='squared_hinge', max_iter=1000,
     multi_class='ovr', penalty='l2', random_state=None, tol=0.0001,
     verbose=0)

Accuracy: 0.71833
Precision: 0.14157
Recall: 0.47000
F1: 0.21759
F2: 0.32104

Total predictions: 1200
True positives:   47
False positives:  285
False negatives:   53
True negatives:  815

-------------------------

<custom_classifiers.replicator instance at 0x1059bde18>

Accuracy: 0.80667
Precision: 0.25912
Recall: 0.71000
F1: 0.37968
F2: 0.52671

Total predictions: 1200
True positives:   71
False positives:  203
False negatives:   29
True negatives:  897

-------------------------

Balancer params:
Certainty: 0.6
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': False, 'alpha': 0.1, 'class_weight': 'balanced', 'tol': 0.0001, 'solver': 'auto'}

<custom_classifiers.balancer instance at 0x1059bedd0>

Accuracy: 0.82333
Precision: 0.26271
Recall: 0.62000
F1: 0.36905
F2: 0.48742

Total predictions: 1200
True positives:   62
False positives:  174
False negatives:   38
True negatives:  926

-------------------------

Balancer params:
Certainty: 0.6
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': False, 'alpha': 0.1, 'class_weight': 'balanced', 'tol': 0.0001, 'solver': 'auto'}

Pipeline(steps=[('clf', <custom_classifiers.balancer instance at 0x105ac2dd0>)])

Accuracy: 0.82583
Precision: 0.27197
Recall: 0.65000
F1: 0.38348
F2: 0.50861

Total predictions: 1200
True positives:   65
False positives:  174
False negatives:   35
True negatives:  926

-------------------------

Balancer params:
Certainty: 0.6
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': False, 'alpha': 0.1, 'class_weight': 'balanced', 'tol': 0.0001, 'solver': 'auto'}

Pipeline(steps=[('scaler', Normalizer(copy=True, norm='l2')), ('clf', <custom_classifiers.balancer instance at 0x105abedd0>)])

Accuracy: 0.62917
Precision: 0.13836
Recall: 0.66000
F1: 0.22877
F2: 0.37628

Total predictions: 1200
True positives:   66
False positives:  411
False negatives:   34
True negatives:  689

-------------------------

Balancer params:
Certainty: 0.6
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': False, 'alpha': 0.1, 'class_weight': 'balanced', 'tol': 0.0001, 'solver': 'auto'}

Pipeline(steps=[('kbest', SelectKBest(k=6, score_func=<function f_classif at 0x105444578>)), ('clf', <custom_classifiers.balancer instance at 0x105ac1dd0>)])

Accuracy: 0.75000
Precision: 0.19136
Recall: 0.62000
F1: 0.29245
F2: 0.42818

Total predictions: 1200
True positives:   62
False positives:  262
False negatives:   38
True negatives:  838

-------------------------

Balancer params:
Certainty: 0.6
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': False, 'alpha': 0.1, 'class_weight': 'balanced', 'tol': 0.0001, 'solver': 'auto'}

Pipeline(steps=[('pca', PCA(copy=True, n_components=4, whiten=False)), ('clf', <custom_classifiers.balancer instance at 0x105abddd0>)])

Accuracy: 0.76583
Precision: 0.19322
Recall: 0.57000
F1: 0.28861
F2: 0.41007

Total predictions: 1200
True positives:   57
False positives:  238
False negatives:   43
True negatives:  862

-------------------------

Balancer params:
Certainty: 0.6
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': False, 'alpha': 0.1, 'class_weight': 'balanced', 'tol': 0.0001, 'solver': 'auto'}

Pipeline(steps=[('clf', <custom_classifiers.balancer instance at 0x1059bddd0>)])

Accuracy: 0.82583
Precision: 0.27197
Recall: 0.65000
F1: 0.38348
F2: 0.50861

Total predictions: 1200
True positives:   65
False positives:  174
False negatives:   35
True negatives:  926

-------------------------

Balancer params:
Certainty: 0.6
max_imbalance: 2
clf_mode: 0
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': False, 'alpha': 0.1, 'class_weight': 'balanced', 'tol': 0.0001, 'solver': 'auto'}

<custom_classifiers.balancer instance at 0x1059bddd0>

Accuracy: 0.82167
Precision: 0.25217
Recall: 0.58000
F1: 0.35152
F2: 0.46032

Total predictions: 1200
True positives:   58
False positives:  172
False negatives:   42
True negatives:  928

-------------------------

Balancer params:
Certainty: 0.6
max_imbalance: 0.1
clf_mode: 0
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': False, 'alpha': 0.1, 'class_weight': 'balanced', 'tol': 0.0001, 'solver': 'auto'}

Balancer params:
Certainty: 0.6
max_imbalance: 0.5
clf_mode: 0
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': False, 'alpha': 0.1, 'class_weight': 'balanced', 'tol': 0.0001, 'solver': 'auto'}

<custom_classifiers.balancer instance at 0x105ac0dd0>

Accuracy: 0.81667
Precision: 0.21963
Recall: 0.47000
F1: 0.29936
F2: 0.38274

Total predictions: 1200
True positives:   47
False positives:  167
False negatives:   53
True negatives:  933

-------------------------

Balancer params:
Certainty: 0.6
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': False, 'alpha': 0.1, 'class_weight': 'balanced', 'tol': 0.0001, 'solver': 'auto'}

<custom_classifiers.balancer instance at 0x1059bedd0>

Accuracy: 0.82333
Precision: 0.26068
Recall: 0.61000
F1: 0.36527
F2: 0.48107

Total predictions: 1200
True positives:   61
False positives:  173
False negatives:   39
True negatives:  927

-------------------------

Balancer params:
Certainty: 0.7
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': False, 'alpha': 0.1, 'class_weight': 'balanced', 'tol': 0.0001, 'solver': 'auto'}

<custom_classifiers.balancer instance at 0x1059bddd0>

Accuracy: 0.87333
Precision: 0.32192
Recall: 0.47000
F1: 0.38211
F2: 0.43040

Total predictions: 1200
True positives:   47
False positives:   99
False negatives:   53
True negatives: 1001

-------------------------

Balancer params:
Certainty: 0.8
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': False, 'alpha': 0.1, 'class_weight': 'balanced', 'tol': 0.0001, 'solver': 'auto'}

<custom_classifiers.balancer instance at 0x1059bddd0>

Accuracy: 0.89000
Precision: 0.30952
Recall: 0.26000
F1: 0.28261
F2: 0.26860

Total predictions: 1200
True positives:   26
False positives:   58
False negatives:   74
True negatives: 1042

-------------------------

Balancer params:
Certainty: 0.7
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': False, 'alpha': 0.1, 'class_weight': 'balanced', 'tol': 0.0001, 'solver': 'auto'}

<custom_classifiers.balancer instance at 0x105ac0dd0>

Accuracy: 0.85500
Precision: 0.25333
Recall: 0.38000
F1: 0.30400
F2: 0.34545

Total predictions: 1200
True positives:   38
False positives:  112
False negatives:   62
True negatives:  988

-------------------------

Balancer params:
Certainty: 0.7
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': False, 'alpha': 0.1, 'class_weight': 'balanced', 'tol': 0.0001, 'solver': 'auto'}

<custom_classifiers.balancer instance at 0x1059bddd0>

Accuracy: 0.86583
Precision: 0.29801
Recall: 0.45000
F1: 0.35857
F2: 0.40835

Total predictions: 1200
True positives:   45
False positives:  106
False negatives:   55
True negatives:  994

-------------------------

Balancer params:
Certainty: 0.65
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': False, 'alpha': 0.1, 'class_weight': 'balanced', 'tol': 0.0001, 'solver': 'auto'}

<custom_classifiers.balancer instance at 0x105abedd0>

Accuracy: 0.81833
Precision: 0.25417
Recall: 0.61000
F1: 0.35882
F2: 0.47656

Total predictions: 1200
True positives:   61
False positives:  179
False negatives:   39
True negatives:  921

-------------------------

Balancer params:
Certainty: 0.65
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': False, 'alpha': 0.1, 'class_weight': 'balanced', 'tol': 0.0001, 'solver': 'auto'}

<custom_classifiers.balancer instance at 0x105abedd0>

Accuracy: 0.81833
Precision: 0.26210
Recall: 0.65000
F1: 0.37356
F2: 0.50154

Total predictions: 1200
True positives:   65
False positives:  183
False negatives:   35
True negatives:  917

-------------------------

Balancer params:
Certainty: 0.65
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': False, 'alpha': 0.1, 'class_weight': 'balanced', 'tol': 0.0001, 'solver': 'auto'}

<custom_classifiers.balancer instance at 0x1059bedd0>

Accuracy: 0.82083
Precision: 0.25941
Recall: 0.62000
F1: 0.36578
F2: 0.48513

Total predictions: 1200
True positives:   62
False positives:  177
False negatives:   38
True negatives:  923

-------------------------

Balancer params:
Certainty: 0.7
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': False, 'alpha': 0.1, 'class_weight': 'balanced', 'tol': 0.0001, 'solver': 'auto'}

<custom_classifiers.balancer instance at 0x1059bddd0>

Accuracy: 0.86417
Precision: 0.28571
Recall: 0.42000
F1: 0.34008
F2: 0.38391

Total predictions: 1200
True positives:   42
False positives:  105
False negatives:   58
True negatives:  995

-------------------------

Balancer params:
Certainty: 0.7
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': False, 'alpha': 0.1, 'class_weight': 'balanced', 'tol': 0.0001, 'solver': 'auto'}

<custom_classifiers.balancer instance at 0x105abddd0>

Accuracy: 0.86667
Precision: 0.29730
Recall: 0.44000
F1: 0.35484
F2: 0.40146

Total predictions: 1200
True positives:   44
False positives:  104
False negatives:   56
True negatives:  996

-------------------------

Balancer params:
Certainty: 0.7
max_imbalance: 1
clf_mode: 1
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': False, 'alpha': 0.1, 'class_weight': 'balanced', 'tol': 0.0001, 'solver': 'auto'}

<custom_classifiers.balancer instance at 0x1059bddd0>

Accuracy: 0.79000
Precision: 0.23793
Recall: 0.69000
F1: 0.35385
F2: 0.50000

Total predictions: 1200
True positives:   69
False positives:  221
False negatives:   31
True negatives:  879

-------------------------

Balancer params:
Certainty: 0.7
max_imbalance: 1
clf_mode: 1
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': False, 'alpha': 0.1, 'class_weight': 'balanced', 'tol': 0.0001, 'solver': 'auto'}

<custom_classifiers.balancer instance at 0x1059bddd0>

Accuracy: 0.79000
Precision: 0.23793
Recall: 0.69000
F1: 0.35385
F2: 0.50000

Total predictions: 1200
True positives:   69
False positives:  221
False negatives:   31
True negatives:  879

-------------------------

Balancer params:
Certainty: 0.7
max_imbalance: 1
clf_mode: 2
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': False, 'alpha': 0.1, 'class_weight': 'balanced', 'tol': 0.0001, 'solver': 'auto'}

<custom_classifiers.balancer instance at 0x1059bedd0>

Accuracy: 0.84500
Precision: 0.28922
Recall: 0.59000
F1: 0.38816
F2: 0.48841

Total predictions: 1200
True positives:   59
False positives:  145
False negatives:   41
True negatives:  955

-------------------------

Balancer params:
Certainty: 0.7
max_imbalance: 1
clf_mode: 2
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': False, 'alpha': 0.1, 'class_weight': 'balanced', 'tol': 0.0001, 'solver': 'auto'}

<custom_classifiers.balancer instance at 0x1059bfdd0>

Accuracy: 0.83750
Precision: 0.27273
Recall: 0.57000
F1: 0.36893
F2: 0.46798

Total predictions: 1200
True positives:   57
False positives:  152
False negatives:   43
True negatives:  948

-------------------------

Balancer params:
Certainty: 0.7
max_imbalance: 1
clf_mode: 2
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': False, 'alpha': 0.1, 'class_weight': 'balanced', 'tol': 0.0001, 'solver': 'auto'}

<custom_classifiers.balancer instance at 0x1059bddd0>

Accuracy: 0.83750
Precision: 0.27488
Recall: 0.58000
F1: 0.37299
F2: 0.47463

Total predictions: 1200
True positives:   58
False positives:  153
False negatives:   42
True negatives:  947

-------------------------

Balancer params:
Certainty: 0.7
max_imbalance: 1
clf_mode: 2
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': True, 'alpha': 0.1, 'class_weight': 'balanced', 'tol': 0.0001, 'solver': 'auto'}

<custom_classifiers.balancer instance at 0x1059c3dd0>

Accuracy: 0.83167
Precision: 0.27027
Recall: 0.60000
F1: 0.37267
F2: 0.48232

Total predictions: 1200
True positives:   60
False positives:  162
False negatives:   40
True negatives:  938

-------------------------

Balancer params:
Certainty: 0.7
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': True, 'alpha': 0.1, 'class_weight': 'balanced', 'tol': 0.0001, 'solver': 'auto'}

<custom_classifiers.balancer instance at 0x1059bddd0>

Accuracy: 0.83083
Precision: 0.27897
Recall: 0.65000
F1: 0.39039
F2: 0.51343

Total predictions: 1200
True positives:   65
False positives:  168
False negatives:   35
True negatives:  932

-------------------------

Balancer params:
Certainty: 0.7
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': False, 'alpha': 0.1, 'class_weight': 'balanced', 'tol': 0.0001, 'solver': 'auto'}

<custom_classifiers.balancer instance at 0x1059bedd0>

Accuracy: 0.85750
Precision: 0.27389
Recall: 0.43000
F1: 0.33463
F2: 0.38600

Total predictions: 1200
True positives:   43
False positives:  114
False negatives:   57
True negatives:  986

-------------------------

Balancer params:
Certainty: 0.7
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': False, 'alpha': 0.1, 'class_weight': 'balanced', 'tol': 0.0001, 'solver': 'auto'}

<custom_classifiers.balancer instance at 0x105abddd0>

Accuracy: 0.86667
Precision: 0.29452
Recall: 0.43000
F1: 0.34959
F2: 0.39377

Total predictions: 1200
True positives:   43
False positives:  103
False negatives:   57
True negatives:  997

-------------------------

Balancer params:
Certainty: 0.7
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': True, 'alpha': 0.1, 'class_weight': 'balanced', 'tol': 0.0001, 'solver': 'auto'}

<custom_classifiers.balancer instance at 0x1059bddd0>

Accuracy: 0.82333
Precision: 0.26271
Recall: 0.62000
F1: 0.36905
F2: 0.48742

Total predictions: 1200
True positives:   62
False positives:  174
False negatives:   38
True negatives:  926

-------------------------

Balancer params:
Certainty: 0.7
max_imbalance: 2
clf_mode: 0
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': True, 'alpha': 0.1, 'class_weight': 'balanced', 'tol': 0.0001, 'solver': 'auto'}

<custom_classifiers.balancer instance at 0x105abedd0>

Accuracy: 0.82333
Precision: 0.27236
Recall: 0.67000
F1: 0.38728
F2: 0.51858

Total predictions: 1200
True positives:   67
False positives:  179
False negatives:   33
True negatives:  921

-------------------------

Balancer params:
Certainty: 0.7
max_imbalance: 2
clf_mode: 0
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': True, 'alpha': 0.1, 'class_weight': 'balanced', 'tol': 0.0001, 'solver': 'auto'}

<custom_classifiers.balancer instance at 0x1059bddd0>

Accuracy: 0.81917
Precision: 0.26877
Recall: 0.68000
F1: 0.38527
F2: 0.52067

Total predictions: 1200
True positives:   68
False positives:  185
False negatives:   32
True negatives:  915

-------------------------

Balancer params:
Certainty: 0.7
max_imbalance: 3
clf_mode: 0
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': True, 'alpha': 0.1, 'class_weight': 'balanced', 'tol': 0.0001, 'solver': 'auto'}

<custom_classifiers.balancer instance at 0x105abfdd0>

Accuracy: 0.85250
Precision: 0.28962
Recall: 0.53000
F1: 0.37456
F2: 0.45455

Total predictions: 1200
True positives:   53
False positives:  130
False negatives:   47
True negatives:  970

-------------------------

Balancer params:
Certainty: 0.7
max_imbalance: 4
clf_mode: 0
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': True, 'alpha': 0.1, 'class_weight': 'balanced', 'tol': 0.0001, 'solver': 'auto'}

<custom_classifiers.balancer instance at 0x105abfdd0>

Accuracy: 0.83333
Precision: 0.27064
Recall: 0.59000
F1: 0.37107
F2: 0.47735

Total predictions: 1200
True positives:   59
False positives:  159
False negatives:   41
True negatives:  941

-------------------------

Balancer params:
Certainty: 0.7
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': True, 'alpha': 0.1, 'class_weight': 'balanced', 'tol': 0.0001, 'solver': 'auto'}

<custom_classifiers.balancer instance at 0x1059bedd0>

Accuracy: 0.83083
Precision: 0.27313
Recall: 0.62000
F1: 0.37920
F2: 0.49442

Total predictions: 1200
True positives:   62
False positives:  165
False negatives:   38
True negatives:  935

-------------------------

Balancer params:
Certainty: 0.7
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': True, 'alpha': 0.1, 'class_weight': 'balanced', 'tol': 0.001, 'solver': 'auto'}

<custom_classifiers.balancer instance at 0x1059bddd0>

Accuracy: 0.83250
Precision: 0.28511
Recall: 0.67000
F1: 0.40000
F2: 0.52756

Total predictions: 1200
True positives:   67
False positives:  168
False negatives:   33
True negatives:  932

-------------------------

Balancer params:
Certainty: 0.7
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': True, 'alpha': 0.1, 'class_weight': 'balanced', 'tol': 0.01, 'solver': 'auto'}

<custom_classifiers.balancer instance at 0x1059bddd0>

Accuracy: 0.82417
Precision: 0.26778
Recall: 0.64000
F1: 0.37758
F2: 0.50078

Total predictions: 1200
True positives:   64
False positives:  175
False negatives:   36
True negatives:  925

-------------------------

Balancer params:
Certainty: 0.7
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': True, 'alpha': 0.1, 'class_weight': 'balanced', 'tol': 0.1, 'solver': 'auto'}

<custom_classifiers.balancer instance at 0x105ac7dd0>

Accuracy: 0.82667
Precision: 0.26923
Recall: 0.63000
F1: 0.37725
F2: 0.49685

Total predictions: 1200
True positives:   63
False positives:  171
False negatives:   37
True negatives:  929

-------------------------

Balancer params:
Certainty: 0.7
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': True, 'alpha': 0.1, 'class_weight': 'balanced', 'tol': 1, 'solver': 'auto'}

<custom_classifiers.balancer instance at 0x105ac5dd0>

Accuracy: 0.83333
Precision: 0.28261
Recall: 0.65000
F1: 0.39394
F2: 0.51587

Total predictions: 1200
True positives:   65
False positives:  165
False negatives:   35
True negatives:  935

-------------------------

Balancer params:
Certainty: 0.7
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': True, 'alpha': 0.1, 'class_weight': 'balanced', 'tol': 1e-06, 'solver': 'auto'}

<custom_classifiers.balancer instance at 0x1059bedd0>

Accuracy: 0.82917
Precision: 0.27468
Recall: 0.64000
F1: 0.38438
F2: 0.50553

Total predictions: 1200
True positives:   64
False positives:  169
False negatives:   36
True negatives:  931

-------------------------

Balancer params:
Certainty: 0.7
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': True, 'alpha': 0.01, 'class_weight': 'balanced', 'solver': 'auto'}

<custom_classifiers.balancer instance at 0x105ac0dd0>

Accuracy: 0.85250
Precision: 0.29412
Recall: 0.55000
F1: 0.38328
F2: 0.46848

Total predictions: 1200
True positives:   55
False positives:  132
False negatives:   45
True negatives:  968

-------------------------

Balancer params:
Certainty: 0.7
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': True, 'alpha': 0.001, 'class_weight': 'balanced', 'solver': 'auto'}

<custom_classifiers.balancer instance at 0x105ac0dd0>

Accuracy: 0.85583
Precision: 0.28655
Recall: 0.49000
F1: 0.36162
F2: 0.42907

Total predictions: 1200
True positives:   49
False positives:  122
False negatives:   51
True negatives:  978

-------------------------

Balancer params:
Certainty: 0.7
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': True, 'alpha': 0.0001, 'class_weight': 'balanced', 'solver': 'auto'}

<custom_classifiers.balancer instance at 0x105abedd0>

Accuracy: 0.86583
Precision: 0.30065
Recall: 0.46000
F1: 0.36364
F2: 0.41591

Total predictions: 1200
True positives:   46
False positives:  107
False negatives:   54
True negatives:  993

-------------------------

Balancer params:
Certainty: 0.7
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': True, 'alpha': 0.01, 'class_weight': 'balanced', 'solver': 'auto'}

<custom_classifiers.balancer instance at 0x105ac0dd0>

Accuracy: 0.85167
Precision: 0.28804
Recall: 0.53000
F1: 0.37324
F2: 0.45377

Total predictions: 1200
True positives:   53
False positives:  131
False negatives:   47
True negatives:  969

-------------------------

Balancer params:
Certainty: 0.7
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': True, 'alpha': 1, 'class_weight': 'balanced', 'solver': 'auto'}

<custom_classifiers.balancer instance at 0x1059bedd0>

Accuracy: 0.78833
Precision: 0.24503
Recall: 0.74000
F1: 0.36816
F2: 0.52707

Total predictions: 1200
True positives:   74
False positives:  228
False negatives:   26
True negatives:  872

-------------------------

Balancer params:
Certainty: 0.7
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': True, 'alpha': 10, 'class_weight': 'balanced', 'solver': 'auto'}

<custom_classifiers.balancer instance at 0x105abfdd0>

Accuracy: 0.77417
Precision: 0.23853
Recall: 0.78000
F1: 0.36534
F2: 0.53645

Total predictions: 1200
True positives:   78
False positives:  249
False negatives:   22
True negatives:  851

-------------------------

Balancer params:
Certainty: 0.7
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': True, 'alpha': 100, 'class_weight': 'balanced', 'solver': 'auto'}

<custom_classifiers.balancer instance at 0x1059bddd0>

Accuracy: 0.76833
Precision: 0.23353
Recall: 0.78000
F1: 0.35945
F2: 0.53134

Total predictions: 1200
True positives:   78
False positives:  256
False negatives:   22
True negatives:  844

-------------------------

Balancer params:
Certainty: 0.7
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': True, 'alpha': 0.1, 'class_weight': 'balanced', 'solver': 'auto'}

<custom_classifiers.balancer instance at 0x1059bddd0>

Accuracy: 0.83583
Precision: 0.28054
Recall: 0.62000
F1: 0.38629
F2: 0.49919

Total predictions: 1200
True positives:   62
False positives:  159
False negatives:   38
True negatives:  941

-------------------------

Balancer params:
Certainty: 0.5
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': True, 'alpha': 0.1, 'class_weight': 'balanced', 'solver': 'auto'}

<custom_classifiers.balancer instance at 0x105ac0dd0>

Accuracy: 0.73667
Precision: 0.20968
Recall: 0.78000
F1: 0.33051
F2: 0.50518

Total predictions: 1200
True positives:   78
False positives:  294
False negatives:   22
True negatives:  806

-------------------------

Balancer params:
Certainty: 0.4
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': True, 'alpha': 0.1, 'class_weight': 'balanced', 'solver': 'auto'}

<custom_classifiers.balancer instance at 0x1059bddd0>

Accuracy: 0.69667
Precision: 0.19444
Recall: 0.84000
F1: 0.31579
F2: 0.50481

Total predictions: 1200
True positives:   84
False positives:  348
False negatives:   16
True negatives:  752

-------------------------

Balancer params:
Certainty: 0.7
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': True, 'alpha': 0.1, 'class_weight': 'balanced', 'solver': 'auto'}

<custom_classifiers.balancer instance at 0x1059bedd0>

Accuracy: 0.82667
Precision: 0.26724
Recall: 0.62000
F1: 0.37349
F2: 0.49051

Total predictions: 1200
True positives:   62
False positives:  170
False negatives:   38
True negatives:  930

-------------------------

<custom_classifiers.replicator instance at 0x1059bde18>

Accuracy: 0.80667
Precision: 0.25912
Recall: 0.71000
F1: 0.37968
F2: 0.52671

Total predictions: 1200
True positives:   71
False positives:  203
False negatives:   29
True negatives:  897

-------------------------

<custom_classifiers.replicator instance at 0x105ac0e18>

Accuracy: 0.79500
Precision: 0.24113
Recall: 0.68000
F1: 0.35602
F2: 0.49853

Total predictions: 1200
True positives:   68
False positives:  214
False negatives:   32
True negatives:  886

-------------------------

<custom_classifiers.replicator instance at 0x105ac1e18>

Accuracy: 0.79250
Precision: 0.23860
Recall: 0.68000
F1: 0.35325
F2: 0.49635

Total predictions: 1200
True positives:   68
False positives:  217
False negatives:   32
True negatives:  883

-------------------------

<custom_classifiers.replicator instance at 0x1059bde18>

Accuracy: 0.79333
Precision: 0.23944
Recall: 0.68000
F1: 0.35417
F2: 0.49708

Total predictions: 1200
True positives:   68
False positives:  216
False negatives:   32
True negatives:  884

-------------------------

<custom_classifiers.replicator instance at 0x1059bde18>

Accuracy: 0.79333
Precision: 0.23944
Recall: 0.68000
F1: 0.35417
F2: 0.49708

Total predictions: 1200
True positives:   68
False positives:  216
False negatives:   32
True negatives:  884

-------------------------

Balancer params:
Certainty: 0.7
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': True, 'alpha': 0.1, 'class_weight': 'balanced', 'solver': 'auto'}

<custom_classifiers.balancer instance at 0x105ac2dd0>

Accuracy: 0.82333
Precision: 0.26860
Recall: 0.65000
F1: 0.38012
F2: 0.50623

Total predictions: 1200
True positives:   65
False positives:  177
False negatives:   35
True negatives:  923

-------------------------

Balancer params:
Certainty: 0.7
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': True, 'alpha': 0.1, 'class_weight': 'balanced', 'solver': 'auto'}

<custom_classifiers.balancer instance at 0x105abddd0>

Accuracy: 0.82000
Precision: 0.25833
Recall: 0.62000
F1: 0.36471
F2: 0.48438

Total predictions: 1200
True positives:   62
False positives:  178
False negatives:   38
True negatives:  922

-------------------------

Balancer params:
Certainty: 0.7
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': True, 'alpha': 0.1, 'class_weight': 'balanced', 'solver': 'auto'}

<custom_classifiers.balancer instance at 0x1059c2d88>

Accuracy: 0.85231
Precision: 0.27451
Recall: 0.56000
F1: 0.36842
F2: 0.46358

Total predictions: 1300
True positives:   56
False positives:  148
False negatives:   44
True negatives: 1052

-------------------------

Balancer params:
Certainty: 0.7
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': True, 'alpha': 0.1, 'class_weight': 'balanced', 'solver': 'auto'}

<custom_classifiers.balancer instance at 0x1059c3dd0>

Accuracy: 0.82417
Precision: 0.26582
Recall: 0.63000
F1: 0.37389
F2: 0.49451

Total predictions: 1200
True positives:   63
False positives:  174
False negatives:   37
True negatives:  926

-------------------------

Balancer params:
Certainty: 0.7
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': True, 'alpha': 0.1, 'class_weight': 'balanced', 'solver': 'auto'}

<custom_classifiers.balancer instance at 0x1059bdd88>

Accuracy: 0.85846
Precision: 0.28571
Recall: 0.56000
F1: 0.37838
F2: 0.46980

Total predictions: 1300
True positives:   56
False positives:  140
False negatives:   44
True negatives: 1060

-------------------------

Balancer params:
Certainty: 0.7
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': True, 'alpha': 0.1, 'class_weight': 'balanced', 'solver': 'auto'}

<custom_classifiers.balancer instance at 0x1059cad40>

Accuracy: 0.85385
Precision: 0.29358
Recall: 0.64000
F1: 0.40252
F2: 0.51780

Total predictions: 1300
True positives:   64
False positives:  154
False negatives:   36
True negatives: 1046

-------------------------

Balancer params:
Certainty: 0.7
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': True, 'alpha': 0.1, 'class_weight': 'balanced', 'solver': 'auto'}

<custom_classifiers.balancer instance at 0x1059bddd0>

Accuracy: 0.83167
Precision: 0.27632
Recall: 0.63000
F1: 0.38415
F2: 0.50159

Total predictions: 1200
True positives:   63
False positives:  165
False negatives:   37
True negatives:  935

-------------------------

Balancer params:
Certainty: 0.7
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': True, 'alpha': 0.1, 'class_weight': 'balanced', 'solver': 'auto'}

<custom_classifiers.balancer instance at 0x105abedd0>

Accuracy: 0.76750
Precision: 0.20847
Recall: 0.64000
F1: 0.31450
F2: 0.45262

Total predictions: 1200
True positives:   64
False positives:  243
False negatives:   36
True negatives:  857

-------------------------

Balancer params:
Certainty: 0.7
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': True, 'alpha': 0.1, 'class_weight': 'balanced', 'solver': 'auto'}

<custom_classifiers.balancer instance at 0x1059bedd0>

Accuracy: 0.80250
Precision: 0.24908
Recall: 0.68000
F1: 0.36461
F2: 0.50520

Total predictions: 1200
True positives:   68
False positives:  205
False negatives:   32
True negatives:  895

-------------------------

Balancer params:
Certainty: 0.7
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': True, 'alpha': 0.1, 'class_weight': 'balanced', 'solver': 'auto'}

<custom_classifiers.balancer instance at 0x1059bdd88>

Accuracy: 0.78583
Precision: 0.22261
Recall: 0.63000
F1: 0.32898
F2: 0.46120

Total predictions: 1200
True positives:   63
False positives:  220
False negatives:   37
True negatives:  880

-------------------------

Balancer params:
Certainty: 0.7
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': True, 'alpha': 0.1, 'class_weight': 'balanced', 'solver': 'auto'}

<custom_classifiers.balancer instance at 0x1059bdcf8>

Accuracy: 0.77000
Precision: 0.20068
Recall: 0.59000
F1: 0.29949
F2: 0.42507

Total predictions: 1200
True positives:   59
False positives:  235
False negatives:   41
True negatives:  865

-------------------------

Balancer params:
Certainty: 0.7
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': True, 'alpha': 0.1, 'class_weight': 'balanced', 'solver': 'auto'}

<custom_classifiers.balancer instance at 0x105ac0cf8>

Accuracy: 0.77250
Precision: 0.18315
Recall: 0.50000
F1: 0.26810
F2: 0.37147

Total predictions: 1200
True positives:   50
False positives:  223
False negatives:   50
True negatives:  877

-------------------------

Balancer params:
Certainty: 0.7
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': True, 'alpha': 0.1, 'class_weight': 'balanced', 'solver': 'auto'}

<custom_classifiers.balancer instance at 0x1059bedd0>

Accuracy: 0.83167
Precision: 0.28017
Recall: 0.65000
F1: 0.39157
F2: 0.51424

Total predictions: 1200
True positives:   65
False positives:  167
False negatives:   35
True negatives:  933

-------------------------

Balancer params:
Certainty: 0.7
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': True, 'alpha': 0.1, 'class_weight': 'balanced', 'solver': 'auto'}

Pipeline(steps=[('pca', PCA(copy=True, n_components=4, whiten=False)), ('clf', <custom_classifiers.balancer instance at 0x1059bedd0>)])

Accuracy: 0.80917
Precision: 0.22785
Recall: 0.54000
F1: 0.32047
F2: 0.42386

Total predictions: 1200
True positives:   54
False positives:  183
False negatives:   46
True negatives:  917

-------------------------

Balancer params:
Certainty: 0.7
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': True, 'alpha': 0.1, 'class_weight': 'balanced', 'solver': 'auto'}

Pipeline(steps=[('pca', PCA(copy=True, n_components=6, whiten=False)), ('clf', <custom_classifiers.balancer instance at 0x1059bddd0>)])

Accuracy: 0.79500
Precision: 0.17699
Recall: 0.40000
F1: 0.24540
F2: 0.31949

Total predictions: 1200
True positives:   40
False positives:  186
False negatives:   60
True negatives:  914

-------------------------

Balancer params:
Certainty: 0.7
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': True, 'alpha': 0.1, 'class_weight': 'balanced', 'solver': 'auto'}

Pipeline(steps=[('pca', PCA(copy=True, n_components=8, whiten=False)), ('clf', <custom_classifiers.balancer instance at 0x1059bedd0>)])

Accuracy: 0.78417
Precision: 0.14350
Recall: 0.32000
F1: 0.19814
F2: 0.25682

Total predictions: 1200
True positives:   32
False positives:  191
False negatives:   68
True negatives:  909

-------------------------

Balancer params:
Certainty: 0.7
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': True, 'alpha': 0.1, 'class_weight': 'balanced', 'solver': 'auto'}

Pipeline(steps=[('pca', PCA(copy=True, n_components=2, whiten=False)), ('clf', <custom_classifiers.balancer instance at 0x1059c0dd0>)])

Accuracy: 0.78167
Precision: 0.21875
Recall: 0.63000
F1: 0.32474
F2: 0.45785

Total predictions: 1200
True positives:   63
False positives:  225
False negatives:   37
True negatives:  875

-------------------------

Balancer params:
Certainty: 0.7
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': True, 'alpha': 0.1, 'class_weight': 'balanced', 'solver': 'auto'}

Pipeline(steps=[('pca', PCA(copy=True, n_components=1, whiten=False)), ('clf', <custom_classifiers.balancer instance at 0x1059bddd0>)])

Accuracy: 0.70333
Precision: 0.07047
Recall: 0.21000
F1: 0.10553
F2: 0.15043

Total predictions: 1200
True positives:   21
False positives:  277
False negatives:   79
True negatives:  823

-------------------------

Balancer params:
Certainty: 0.7
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': True, 'alpha': 0.1, 'class_weight': 'balanced', 'solver': 'auto'}

Pipeline(steps=[('pca', PCA(copy=True, n_components=3, whiten=False)), ('clf', <custom_classifiers.balancer instance at 0x1059c0dd0>)])

Accuracy: 0.80833
Precision: 0.22222
Recall: 0.52000
F1: 0.31138
F2: 0.41009

Total predictions: 1200
True positives:   52
False positives:  182
False negatives:   48
True negatives:  918

-------------------------

Balancer params:
Certainty: 0.7
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': True, 'alpha': 0.1, 'class_weight': 'balanced', 'solver': 'auto'}

Pipeline(steps=[('kbest', SelectKBest(k=6, score_func=<function f_classif at 0x10532e578>)), ('clf', <custom_classifiers.balancer instance at 0x1059bedd0>)])

Accuracy: 0.77917
Precision: 0.20000
Recall: 0.55000
F1: 0.29333
F2: 0.40741

Total predictions: 1200
True positives:   55
False positives:  220
False negatives:   45
True negatives:  880

-------------------------

Balancer params:
Certainty: 0.7
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': True, 'alpha': 0.1, 'class_weight': 'balanced', 'solver': 'auto'}

Pipeline(steps=[('kbest', SelectKBest(k=10, score_func=<function f_classif at 0x10532d578>)), ('clf', <custom_classifiers.balancer instance at 0x1059bddd0>)])

Accuracy: 0.80000
Precision: 0.23881
Recall: 0.64000
F1: 0.34783
F2: 0.47904

Total predictions: 1200
True positives:   64
False positives:  204
False negatives:   36
True negatives:  896

-------------------------

Balancer params:
Certainty: 0.7
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': True, 'alpha': 0.1, 'class_weight': 'balanced', 'solver': 'auto'}

Pipeline(steps=[('kbest', SelectKBest(k=14, score_func=<function f_classif at 0x105333578>)), ('clf', <custom_classifiers.balancer instance at 0x1059bedd0>)])

Accuracy: 0.81000
Precision: 0.25940
Recall: 0.69000
F1: 0.37705
F2: 0.51802

Total predictions: 1200
True positives:   69
False positives:  197
False negatives:   31
True negatives:  903

-------------------------

Balancer params:
Certainty: 0.7
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': True, 'alpha': 0.1, 'class_weight': 'balanced', 'solver': 'auto'}

Pipeline(steps=[('kbest', SelectKBest(k='all', score_func=<function f_classif at 0x105336578>)), ('clf', <custom_classifiers.balancer instance at 0x1059bddd0>)])

Accuracy: 0.82583
Precision: 0.27004
Recall: 0.64000
F1: 0.37982
F2: 0.50235

Total predictions: 1200
True positives:   64
False positives:  173
False negatives:   36
True negatives:  927

-------------------------

Balancer params:
Certainty: 0.7
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': True, 'alpha': 0.1, 'class_weight': 'balanced', 'solver': 'auto'}

Pipeline(steps=[('kbest', SelectKBest(k=5, score_func=<function f_classif at 0x10532d578>)), ('clf', <custom_classifiers.balancer instance at 0x1059bddd0>)])

Accuracy: 0.78417
Precision: 0.20446
Recall: 0.55000
F1: 0.29810
F2: 0.41106

Total predictions: 1200
True positives:   55
False positives:  214
False negatives:   45
True negatives:  886

-------------------------

Balancer params:
Certainty: 0.7
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': True, 'alpha': 0.1, 'class_weight': 'balanced', 'solver': 'auto'}

Pipeline(steps=[('kbest', SelectKBest(k=2, score_func=<function f_classif at 0x10532e578>)), ('clf', <custom_classifiers.balancer instance at 0x1059bedd0>)])

Accuracy: 0.71833
Precision: 0.16573
Recall: 0.59000
F1: 0.25877
F2: 0.39021

Total predictions: 1200
True positives:   59
False positives:  297
False negatives:   41
True negatives:  803

-------------------------

Balancer params:
Certainty: 0.7
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': True, 'alpha': 0.1, 'class_weight': 'balanced', 'solver': 'auto'}

Pipeline(steps=[('clf', <custom_classifiers.balancer instance at 0x1059bddd0>)])

Accuracy: 0.82917
Precision: 0.27660
Recall: 0.65000
F1: 0.38806
F2: 0.51181

Total predictions: 1200
True positives:   65
False positives:  170
False negatives:   35
True negatives:  930

-------------------------

<custom_classifiers.replicator instance at 0x105b323b0>

Accuracy: 0.80333
Precision: 0.22358
Recall: 0.55000
F1: 0.31792
F2: 0.42570

Total predictions: 1200
True positives:   55
False positives:  191
False negatives:   45
True negatives:  909

-------------------------

<custom_classifiers.replicator instance at 0x105b343b0>

Accuracy: 0.79250
Precision: 0.23860
Recall: 0.68000
F1: 0.35325
F2: 0.49635

Total predictions: 1200
True positives:   68
False positives:  217
False negatives:   32
True negatives:  883

-------------------------

<custom_classifiers.replicator instance at 0x105b323b0>

Accuracy: 0.80333
Precision: 0.21429
Recall: 0.51000
F1: 0.30178
F2: 0.39969

Total predictions: 1200
True positives:   51
False positives:  187
False negatives:   49
True negatives:  913

-------------------------

<custom_classifiers.replicator instance at 0x105b343b0>

Accuracy: 0.79250
Precision: 0.23860
Recall: 0.68000
F1: 0.35325
F2: 0.49635

Total predictions: 1200
True positives:   68
False positives:  217
False negatives:   32
True negatives:  883

-------------------------

Balancer params:
certainty: 0.7
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': True, 'alpha': 0.1, 'class_weight': 'balanced', 'solver': 'auto'}

<custom_classifiers.balancer instance at 0x1059bddd0>

Accuracy: 0.83083
Precision: 0.28085
Recall: 0.66000
F1: 0.39403
F2: 0.51969

Total predictions: 1200
True positives:   66
False positives:  169
False negatives:   34
True negatives:  931

-------------------------

Balancer params:
certainty: 0.7
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': False, 'alpha': 0.1, 'class_weight': 'balanced', 'solver': 'auto'}

<custom_classifiers.balancer instance at 0x105ac0dd0>

Accuracy: 0.86750
Precision: 0.29371
Recall: 0.42000
F1: 0.34568
F2: 0.38674

Total predictions: 1200
True positives:   42
False positives:  101
False negatives:   58
True negatives:  999

-------------------------

Balancer params:
certainty: 0.7
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': False, 'alpha': 0.1, 'class_weight': 'balanced', 'solver': 'auto'}

<custom_classifiers.balancer instance at 0x105abedd0>

Accuracy: 0.86667
Precision: 0.30000
Recall: 0.45000
F1: 0.36000
F2: 0.40909

Total predictions: 1200
True positives:   45
False positives:  105
False negatives:   55
True negatives:  995

-------------------------

Balancer params:
certainty: 0.7
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': False, 'alpha': 0.1, 'class_weight': 'balanced', 'solver': 'auto'}

<custom_classifiers.balancer instance at 0x105ac1dd0>

Accuracy: 0.87917
Precision: 0.33577
Recall: 0.46000
F1: 0.38819
F2: 0.42831

Total predictions: 1200
True positives:   46
False positives:   91
False negatives:   54
True negatives: 1009

-------------------------

Balancer params:
certainty: 0.7
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': False, 'alpha': 0.1, 'class_weight': 'balanced', 'solver': 'auto'}

<custom_classifiers.balancer instance at 0x105abedd0>

Accuracy: 0.86583
Precision: 0.28671
Recall: 0.41000
F1: 0.33745
F2: 0.37753

Total predictions: 1200
True positives:   41
False positives:  102
False negatives:   59
True negatives:  998

-------------------------

Balancer params:
certainty: 0.6
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': False, 'alpha': 0.1, 'class_weight': 'balanced', 'solver': 'auto'}

<custom_classifiers.balancer instance at 0x105abddd0>

Accuracy: 0.83167
Precision: 0.26818
Recall: 0.59000
F1: 0.36875
F2: 0.47581

Total predictions: 1200
True positives:   59
False positives:  161
False negatives:   41
True negatives:  939

-------------------------

Balancer params:
certainty: 0.8
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': False, 'alpha': 0.1, 'class_weight': 'balanced', 'solver': 'auto'}

<custom_classifiers.balancer instance at 0x105abedd0>

Accuracy: 0.88667
Precision: 0.27500
Recall: 0.22000
F1: 0.24444
F2: 0.22917

Total predictions: 1200
True positives:   22
False positives:   58
False negatives:   78
True negatives: 1042

-------------------------

Balancer params:
certainty: 0.65
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': False, 'alpha': 0.1, 'class_weight': 'balanced', 'solver': 'auto'}

<custom_classifiers.balancer instance at 0x105ac0dd0>

Accuracy: 0.83500
Precision: 0.28509
Recall: 0.65000
F1: 0.39634
F2: 0.51752

Total predictions: 1200
True positives:   65
False positives:  163
False negatives:   35
True negatives:  937

-------------------------

Balancer params:
certainty: 0.75
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': False, 'alpha': 0.1, 'class_weight': 'balanced', 'solver': 'auto'}

<custom_classifiers.balancer instance at 0x1059bddd0>

Accuracy: 0.87167
Precision: 0.32468
Recall: 0.50000
F1: 0.39370
F2: 0.45126

Total predictions: 1200
True positives:   50
False positives:  104
False negatives:   50
True negatives:  996

-------------------------

Balancer params:
certainty: 0.75
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': False, 'alpha': 0.1, 'class_weight': 'balanced', 'solver': 'auto'}

<custom_classifiers.balancer instance at 0x105abedd0>

Accuracy: 0.87500
Precision: 0.32143
Recall: 0.45000
F1: 0.37500
F2: 0.41667

Total predictions: 1200
True positives:   45
False positives:   95
False negatives:   55
True negatives: 1005

-------------------------

Balancer params:
certainty: 0.75
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': False, 'alpha': 0.1, 'class_weight': 'balanced', 'solver': 'auto'}

<custom_classifiers.balancer instance at 0x1059bddd0>

Accuracy: 0.85500
Precision: 0.26282
Recall: 0.41000
F1: 0.32031
F2: 0.36871

Total predictions: 1200
True positives:   41
False positives:  115
False negatives:   59
True negatives:  985

-------------------------

Balancer params:
certainty: 0.75
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': False, 'alpha': 0.1, 'class_weight': 'balanced', 'solver': 'auto'}

<custom_classifiers.balancer instance at 0x1059bedd0>

Accuracy: 0.86667
Precision: 0.28571
Recall: 0.40000
F1: 0.33333
F2: 0.37037

Total predictions: 1200
True positives:   40
False positives:  100
False negatives:   60
True negatives: 1000

-------------------------

Balancer params:
certainty: 0.75
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': False, 'alpha': 0.1, 'class_weight': 'balanced', 'solver': 'auto'}

<custom_classifiers.balancer instance at 0x105abfdd0>

Accuracy: 0.87342
Precision: 0.31371
Recall: 0.43700
F1: 0.36523
F2: 0.40515

Total predictions: 12000
True positives:  437
False positives:  956
False negatives:  563
True negatives: 10044

-------------------------

Balancer params:
certainty: 0.75
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': False, 'alpha': 0.1, 'class_weight': 'balanced', 'solver': 'auto'}

<custom_classifiers.balancer instance at 0x105b34320>

Accuracy: 0.86417
Precision: 0.29936
Recall: 0.47000
F1: 0.36576
F2: 0.42190

Total predictions: 1200
True positives:   47
False positives:  110
False negatives:   53
True negatives:  990

-------------------------

Balancer params:
certainty: 0.75
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': False, 'alpha': 0.1, 'class_weight': 'balanced', 'solver': 'auto'}

<custom_classifiers.balancer instance at 0x1059bddd0>

Accuracy: 0.86417
Precision: 0.29936
Recall: 0.47000
F1: 0.36576
F2: 0.42190

Total predictions: 1200
True positives:   47
False positives:  110
False negatives:   53
True negatives:  990

-------------------------

Balancer params:
certainty: 0.75
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': False, 'alpha': 0.1, 'class_weight': 'balanced', 'solver': 'auto'}

<custom_classifiers.balancer instance at 0x105b36368>

Accuracy: 0.86833
Precision: 0.28676
Recall: 0.39000
F1: 0.33051
F2: 0.36381

Total predictions: 1200
True positives:   39
False positives:   97
False negatives:   61
True negatives: 1003

-------------------------

Balancer params:
certainty: 0.75
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': False, 'alpha': 0.1, 'class_weight': 'balanced', 'solver': 'auto'}

<custom_classifiers.balancer instance at 0x105ac9dd0>

Accuracy: 0.86833
Precision: 0.28676
Recall: 0.39000
F1: 0.33051
F2: 0.36381

Total predictions: 1200
True positives:   39
False positives:   97
False negatives:   61
True negatives: 1003

-------------------------

Balancer params:
certainty: 0.75
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': True, 'alpha': 0.1, 'class_weight': 'balanced', 'solver': 'auto'}

<custom_classifiers.balancer instance at 0x1059bddd0>

Accuracy: 0.82583
Precision: 0.26609
Recall: 0.62000
F1: 0.37237
F2: 0.48973

Total predictions: 1200
True positives:   62
False positives:  171
False negatives:   38
True negatives:  929

-------------------------

Balancer params:
certainty: 0.75
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': True, 'alpha': 0.01, 'class_weight': 'balanced', 'solver': 'auto'}

<custom_classifiers.balancer instance at 0x105abedd0>

Accuracy: 0.85250
Precision: 0.28729
Recall: 0.52000
F1: 0.37011
F2: 0.44750

Total predictions: 1200
True positives:   52
False positives:  129
False negatives:   48
True negatives:  971

-------------------------

Balancer params:
certainty: 0.7
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': True, 'alpha': 0.01, 'class_weight': 'balanced', 'solver': 'auto'}

<custom_classifiers.balancer instance at 0x105ac0dd0>

Accuracy: 0.85250
Precision: 0.28729
Recall: 0.52000
F1: 0.37011
F2: 0.44750

Total predictions: 1200
True positives:   52
False positives:  129
False negatives:   48
True negatives:  971

-------------------------

Balancer params:
certainty: 0.7
max_imbalance: 1.5
clf_mode: 0
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': True, 'alpha': 0.01, 'class_weight': 'balanced', 'solver': 'auto'}

<custom_classifiers.balancer instance at 0x105ac0dd0>

Accuracy: 0.85833
Precision: 0.30337
Recall: 0.54000
F1: 0.38849
F2: 0.46713

Total predictions: 1200
True positives:   54
False positives:  124
False negatives:   46
True negatives:  976

-------------------------

Balancer params:
certainty: 0.7
max_imbalance: 1.5
clf_mode: 0
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': True, 'alpha': 0.01, 'class_weight': 'balanced', 'solver': 'auto'}

<custom_classifiers.balancer instance at 0x105abedd0>

Accuracy: 0.85833
Precision: 0.30337
Recall: 0.54000
F1: 0.38849
F2: 0.46713

Total predictions: 1200
True positives:   54
False positives:  124
False negatives:   46
True negatives:  976

-------------------------

Balancer params:
certainty: 0.7
max_imbalance: 2
clf_mode: 0
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': True, 'alpha': 0.01, 'class_weight': 'balanced', 'solver': 'auto'}

<custom_classifiers.balancer instance at 0x105abedd0>

Accuracy: 0.82750
Precision: 0.27234
Recall: 0.64000
F1: 0.38209
F2: 0.50394

Total predictions: 1200
True positives:   64
False positives:  171
False negatives:   36
True negatives:  929

-------------------------

Balancer params:
certainty: 0.7
max_imbalance: 3
clf_mode: 0
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': True, 'alpha': 0.01, 'class_weight': 'balanced', 'solver': 'auto'}

<custom_classifiers.balancer instance at 0x1059c0dd0>

Accuracy: 0.86083
Precision: 0.28662
Recall: 0.45000
F1: 0.35019
F2: 0.40395

Total predictions: 1200
True positives:   45
False positives:  112
False negatives:   55
True negatives:  988

-------------------------

Balancer params:
certainty: 0.7
max_imbalance: 2
clf_mode: 0
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': True, 'alpha': 0.01, 'class_weight': 'balanced', 'solver': 'auto'}

<custom_classifiers.balancer instance at 0x105ac0dd0>

Accuracy: 0.82750
Precision: 0.27234
Recall: 0.64000
F1: 0.38209
F2: 0.50394

Total predictions: 1200
True positives:   64
False positives:  171
False negatives:   36
True negatives:  929

-------------------------

Balancer params:
certainty: 0.7
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': True, 'alpha': 0.01, 'class_weight': 'balanced', 'solver': 'auto'}

<custom_classifiers.balancer instance at 0x105ac0dd0>

Accuracy: 0.85250
Precision: 0.28729
Recall: 0.52000
F1: 0.37011
F2: 0.44750

Total predictions: 1200
True positives:   52
False positives:  129
False negatives:   48
True negatives:  971

-------------------------

Balancer params:
certainty: 0.7
max_imbalance: 1
clf_mode: 7
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': True, 'alpha': 0.01, 'class_weight': 'balanced', 'solver': 'auto'}

<custom_classifiers.balancer instance at 0x105ac0dd0>

Accuracy: 0.83500
Precision: 0.28125
Recall: 0.63000
F1: 0.38889
F2: 0.50481

Total predictions: 1200
True positives:   63
False positives:  161
False negatives:   37
True negatives:  939

-------------------------

Balancer params:
certainty: 0.7
max_imbalance: 1
clf_mode: 9
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': True, 'alpha': 0.01, 'class_weight': 'balanced', 'solver': 'auto'}

<custom_classifiers.balancer instance at 0x105ac9dd0>

Accuracy: 0.85250
Precision: 0.28729
Recall: 0.52000
F1: 0.37011
F2: 0.44750

Total predictions: 1200
True positives:   52
False positives:  129
False negatives:   48
True negatives:  971

-------------------------

Balancer params:
certainty: 0.7
max_imbalance: 1
clf_mode: 11
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': True, 'alpha': 0.01, 'class_weight': 'balanced', 'solver': 'auto'}

<custom_classifiers.balancer instance at 0x105abedd0>

Accuracy: 0.83667
Precision: 0.27778
Recall: 0.60000
F1: 0.37975
F2: 0.48701

Total predictions: 1200
True positives:   60
False positives:  156
False negatives:   40
True negatives:  944

-------------------------

Balancer params:
certainty: 0.7
max_imbalance: 1
clf_mode: 4
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': True, 'alpha': 0.01, 'class_weight': 'balanced', 'solver': 'auto'}

<custom_classifiers.balancer instance at 0x105ac0dd0>

Accuracy: 0.82750
Precision: 0.27234
Recall: 0.64000
F1: 0.38209
F2: 0.50394

Total predictions: 1200
True positives:   64
False positives:  171
False negatives:   36
True negatives:  929

-------------------------

Balancer params:
certainty: 0.7
max_imbalance: 1
clf_mode: 1
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': True, 'alpha': 0.01, 'class_weight': 'balanced', 'solver': 'auto'}

<custom_classifiers.balancer instance at 0x105abedd0>

Accuracy: 0.79500
Precision: 0.24113
Recall: 0.68000
F1: 0.35602
F2: 0.49853

Total predictions: 1200
True positives:   68
False positives:  214
False negatives:   32
True negatives:  886

-------------------------

Balancer params:
certainty: 0.7
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': True, 'alpha': 0.01, 'class_weight': 'balanced', 'solver': 'auto'}

<custom_classifiers.balancer instance at 0x1059bddd0>

Accuracy: 0.85250
Precision: 0.28729
Recall: 0.52000
F1: 0.37011
F2: 0.44750

Total predictions: 1200
True positives:   52
False positives:  129
False negatives:   48
True negatives:  971

-------------------------

Balancer params:
certainty: 0.7
max_imbalance: 0.5
clf_mode: 0
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': True, 'alpha': 0.01, 'class_weight': 'balanced', 'solver': 'auto'}

<custom_classifiers.balancer instance at 0x105abedd0>

Accuracy: 0.83083
Precision: 0.27111
Recall: 0.61000
F1: 0.37538
F2: 0.48800

Total predictions: 1200
True positives:   61
False positives:  164
False negatives:   39
True negatives:  936

-------------------------

Balancer params:
certainty: 0.7
max_imbalance: 0.1
clf_mode: 0
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': True, 'alpha': 0.01, 'class_weight': 'balanced', 'solver': 'auto'}

<custom_classifiers.balancer instance at 0x105ac0dd0>

Accuracy: 0.60667
Precision: 0.15683
Recall: 0.85000
F1: 0.26480
F2: 0.45117

Total predictions: 1200
True positives:   85
False positives:  457
False negatives:   15
True negatives:  643

-------------------------

Balancer params:
certainty: 0.7
max_imbalance: 0.3
clf_mode: 0
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': True, 'alpha': 0.01, 'class_weight': 'balanced', 'solver': 'auto'}

<custom_classifiers.balancer instance at 0x105abddd0>

Accuracy: 0.78333
Precision: 0.24194
Recall: 0.75000
F1: 0.36585
F2: 0.52817

Total predictions: 1200
True positives:   75
False positives:  235
False negatives:   25
True negatives:  865

-------------------------

Balancer params:
certainty: 0.7
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': True, 'alpha': 0.01, 'class_weight': 'balanced', 'solver': 'auto'}

<custom_classifiers.balancer instance at 0x105abfdd0>

Accuracy: 0.85250
Precision: 0.28729
Recall: 0.52000
F1: 0.37011
F2: 0.44750

Total predictions: 1200
True positives:   52
False positives:  129
False negatives:   48
True negatives:  971

-------------------------

VotingClassifier(estimators=[('svc', LinearSVC(C=1, class_weight='balanced', dual=False, fit_intercept=True,
     intercept_scaling=1, loss='squared_hinge', max_iter=1000,
     multi_class='ovr', penalty='l2', random_state=None, tol=0.0001,
     verbose=0)), ('balanced_ridge', RidgeClassifier(alpha=1.0, class_weight='balanced', copy_X=True,
        fit_intercept=True, max_iter=None, normalize=False,
        random_state=None, solver='auto', tol=0.001))],
         voting='hard', weights=None)

Accuracy: 0.81667
Precision: 0.21963
Recall: 0.47000
F1: 0.29936
F2: 0.38274

Total predictions: 1200
True positives:   47
False positives:  167
False negatives:   53
True negatives:  933

-------------------------

VotingClassifier(estimators=[('svc', LinearSVC(C=1, class_weight='balanced', dual=False, fit_intercept=True,
     intercept_scaling=1, loss='squared_hinge', max_iter=1000,
     multi_class='ovr', penalty='l2', random_state=None, tol=0.0001,
     verbose=0)), ('ridge', RidgeClassifier(alpha=1.0, class_weight='balance...it=2, min_weight_fraction_leaf=0.0,
            presort=False, random_state=None, splitter='best'))],
         voting='hard', weights=None)

Accuracy: 0.89250
Precision: 0.31169
Recall: 0.24000
F1: 0.27119
F2: 0.25157

Total predictions: 1200
True positives:   24
False positives:   53
False negatives:   76
True negatives: 1047

-------------------------

VotingClassifier(estimators=[('svc', LinearSVC(C=1, class_weight='balanced', dual=False, fit_intercept=True,
     intercept_scaling=1, loss='squared_hinge', max_iter=1000,
     multi_class='ovr', penalty='l2', random_state=None, tol=0.0001,
     verbose=0)), ('ridge', RidgeClassifier(alpha=1.0, class_weight='balance...it=2, min_weight_fraction_leaf=0.0,
            presort=False, random_state=None, splitter='best'))],
         voting='hard', weights=[2, 2, 1, 1])

Accuracy: 0.81083
Precision: 0.21005
Recall: 0.46000
F1: 0.28840
F2: 0.37157

Total predictions: 1200
True positives:   46
False positives:  173
False negatives:   54
True negatives:  927

-------------------------

VotingClassifier(estimators=[('svc', LinearSVC(C=1, class_weight='balanced', dual=False, fit_intercept=True,
     intercept_scaling=1, loss='squared_hinge', max_iter=1000,
     multi_class='ovr', penalty='l2', random_state=None, tol=0.0001,
     verbose=0)), ('ridge', RidgeClassifier(alpha=1.0, class_weight='balance...it=2, min_weight_fraction_leaf=0.0,
            presort=False, random_state=None, splitter='best'))],
         voting='hard', weights=[2, 4, 1, 1])

Accuracy: 0.80417
Precision: 0.21992
Recall: 0.53000
F1: 0.31085
F2: 0.41342

Total predictions: 1200
True positives:   53
False positives:  188
False negatives:   47
True negatives:  912

-------------------------

VotingClassifier(estimators=[('svc', LinearSVC(C=1, class_weight='balanced', dual=False, fit_intercept=True,
     intercept_scaling=1, loss='squared_hinge', max_iter=1000,
     multi_class='ovr', penalty='l2', random_state=None, tol=0.0001,
     verbose=0)), ('ridge', RidgeClassifier(alpha=1.0, class_weight='balance...it=2, min_weight_fraction_leaf=0.0,
            presort=False, random_state=None, splitter='best'))],
         voting='hard', weights=[2, 10, 1, 1])

Accuracy: 0.79000
Precision: 0.23793
Recall: 0.69000
F1: 0.35385
F2: 0.50000

Total predictions: 1200
True positives:   69
False positives:  221
False negatives:   31
True negatives:  879

-------------------------

VotingClassifier(estimators=[('svc', LinearSVC(C=1, class_weight='balanced', dual=False, fit_intercept=True,
     intercept_scaling=1, loss='squared_hinge', max_iter=1000,
     multi_class='ovr', penalty='l2', random_state=None, tol=0.0001,
     verbose=0)), ('ridge', RidgeClassifier(alpha=1.0, class_weight='balanced', copy_X=True,
        fit_intercept=True, max_iter=None, normalize=False,
        random_state=None, solver='auto', tol=0.001))],
         voting='hard', weights=[1, 1])

Accuracy: 0.81750
Precision: 0.22066
Recall: 0.47000
F1: 0.30032
F2: 0.38336

Total predictions: 1200
True positives:   47
False positives:  166
False negatives:   53
True negatives:  934

-------------------------

RidgeClassifier(alpha=1.0, class_weight='balanced', copy_X=True,
        fit_intercept=True, max_iter=None, normalize=False,
        random_state=None, solver='auto', tol=0.001)

Accuracy: 0.79000
Precision: 0.23793
Recall: 0.69000
F1: 0.35385
F2: 0.50000

Total predictions: 1200
True positives:   69
False positives:  221
False negatives:   31
True negatives:  879

-------------------------

Balancer params:
certainty: 0.7
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': True, 'alpha': 0.01, 'class_weight': 'balanced', 'solver': 'auto'}

<custom_classifiers.balancer instance at 0x1059bddd0>

Accuracy: 0.85250
Precision: 0.28729
Recall: 0.52000
F1: 0.37011
F2: 0.44750

Total predictions: 1200
True positives:   52
False positives:  129
False negatives:   48
True negatives:  971

-------------------------

LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)

Accuracy: 0.83500
Precision: 0.01961
Recall: 0.02000
F1: 0.01980
F2: 0.01992

Total predictions: 1200
True positives:    2
False positives:  100
False negatives:   98
True negatives: 1000

-------------------------

LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)

Accuracy: 0.83667
Precision: 0.02000
Recall: 0.02000
F1: 0.02000
F2: 0.02000

Total predictions: 1200
True positives:    2
False positives:   98
False negatives:   98
True negatives: 1002

-------------------------

LogisticRegression(C=1.0, class_weight=None, dual=True, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)

Accuracy: 0.65333
Precision: 0.09487
Recall: 0.37000
F1: 0.15102
F2: 0.23418

Total predictions: 1200
True positives:   37
False positives:  353
False negatives:   63
True negatives:  747

-------------------------

LogisticRegression(C=1.0, class_weight='balanced', dual=False,
          fit_intercept=True, intercept_scaling=1, max_iter=100,
          multi_class='ovr', n_jobs=1, penalty='l2', random_state=None,
          solver='liblinear', tol=0.0001, verbose=0, warm_start=False)

Accuracy: 0.73000
Precision: 0.14557
Recall: 0.46000
F1: 0.22115
F2: 0.32123

Total predictions: 1200
True positives:   46
False positives:  270
False negatives:   54
True negatives:  830

-------------------------

LogisticRegression(C=1.0, class_weight='balanced', dual=False,
          fit_intercept=True, intercept_scaling=1, max_iter=100,
          multi_class='ovr', n_jobs=1, penalty='l2', random_state=None,
          solver='liblinear', tol=0.1, verbose=0, warm_start=False)

Accuracy: 0.54417
Precision: 0.11664
Recall: 0.68000
F1: 0.19912
F2: 0.34588

Total predictions: 1200
True positives:   68
False positives:  515
False negatives:   32
True negatives:  585

-------------------------

LogisticRegression(C=1.0, class_weight='balanced', dual=False,
          fit_intercept=True, intercept_scaling=1, max_iter=100,
          multi_class='ovr', n_jobs=1, penalty='l2', random_state=None,
          solver='liblinear', tol=1e-05, verbose=0, warm_start=False)

Accuracy: 0.76500
Precision: 0.18182
Recall: 0.52000
F1: 0.26943
F2: 0.37901

Total predictions: 1200
True positives:   52
False positives:  234
False negatives:   48
True negatives:  866

-------------------------

LogisticRegression(C=1.0, class_weight='balanced', dual=False,
          fit_intercept=True, intercept_scaling=1, max_iter=100,
          multi_class='ovr', n_jobs=1, penalty='l2', random_state=None,
          solver='liblinear', tol=0.9, verbose=0, warm_start=False)

Accuracy: 0.50167
Precision: 0.09968
Recall: 0.62000
F1: 0.17175
F2: 0.30333

Total predictions: 1200
True positives:   62
False positives:  560
False negatives:   38
True negatives:  540

-------------------------

LogisticRegression(C=1.0, class_weight='balanced', dual=False,
          fit_intercept=True, intercept_scaling=1, max_iter=100,
          multi_class='ovr', n_jobs=1, penalty='l2', random_state=None,
          solver='liblinear', tol=0.0001, verbose=0, warm_start=False)

Accuracy: 0.72833
Precision: 0.14688
Recall: 0.47000
F1: 0.22381
F2: 0.32639

Total predictions: 1200
True positives:   47
False positives:  273
False negatives:   53
True negatives:  827

-------------------------

SGDClassifier(alpha=0.0001, average=1, class_weight='balanced', epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', n_iter=5, n_jobs=1,
       penalty='l2', power_t=0.5, random_state=None, shuffle=True,
       verbose=0, warm_start=False)

Accuracy: 0.18583
Precision: 0.07715
Recall: 0.80000
F1: 0.14072
F2: 0.27836

Total predictions: 1200
True positives:   80
False positives:  957
False negatives:   20
True negatives:  143

-------------------------

KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='uniform')

Accuracy: 0.91667
Precision: 0.50000
Recall: 0.10000
F1: 0.16667
F2: 0.11905

Total predictions: 1200
True positives:   10
False positives:   10
False negatives:   90
True negatives: 1090

-------------------------

KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='uniform')

Accuracy: 0.91667
Precision: 0.50000
Recall: 0.10000
F1: 0.16667
F2: 0.11905

Total predictions: 1200
True positives:   10
False positives:   10
False negatives:   90
True negatives: 1090

-------------------------

KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=3, p=2,
           weights='uniform')

Accuracy: 0.91667
Precision: 0.50000
Recall: 0.11000
F1: 0.18033
F2: 0.13033

Total predictions: 1200
True positives:   11
False positives:   11
False negatives:   89
True negatives: 1089

-------------------------

KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=1, p=2,
           weights='uniform')

Accuracy: 0.87583
Precision: 0.19753
Recall: 0.16000
F1: 0.17680
F2: 0.16632

Total predictions: 1200
True positives:   16
False positives:   65
False negatives:   84
True negatives: 1035

-------------------------

KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=3, p=2,
           weights='uniform')

Accuracy: 0.91667
Precision: 0.50000
Recall: 0.11000
F1: 0.18033
F2: 0.13033

Total predictions: 1200
True positives:   11
False positives:   11
False negatives:   89
True negatives: 1089

-------------------------

KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='uniform')

Accuracy: 0.91667
Precision: 0.50000
Recall: 0.10000
F1: 0.16667
F2: 0.11905

Total predictions: 1200
True positives:   10
False positives:   10
False negatives:   90
True negatives: 1090

-------------------------

Balancer params:
certainty: 0.7
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {}

<custom_classifiers.balancer instance at 0x1059bde18>

Accuracy: 0.77250
Precision: 0.21262
Recall: 0.64000
F1: 0.31920
F2: 0.45649

Total predictions: 1200
True positives:   64
False positives:  237
False negatives:   36
True negatives:  863

-------------------------

Balancer params:
certainty: 0.7
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 5}

<custom_classifiers.balancer instance at 0x105abee18>

Accuracy: 0.77250
Precision: 0.21262
Recall: 0.64000
F1: 0.31920
F2: 0.45649

Total predictions: 1200
True positives:   64
False positives:  237
False negatives:   36
True negatives:  863

-------------------------

Balancer params:
certainty: 0.7
max_imbalance: 5
clf_mode: 0
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 10}

Balancer params:
certainty: 0.7
max_imbalance: 10
clf_mode: 0
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 10}

Balancer params:
certainty: 0.7
max_imbalance: 2
clf_mode: 0
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 10}

<custom_classifiers.balancer instance at 0x1059bde18>

Accuracy: 0.89667
Precision: 0.27778
Recall: 0.15000
F1: 0.19481
F2: 0.16520

Total predictions: 1200
True positives:   15
False positives:   39
False negatives:   85
True negatives: 1061

-------------------------

Balancer params:
certainty: 0.7
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 10}

<custom_classifiers.balancer instance at 0x1059c2e18>

Accuracy: 0.81250
Precision: 0.21461
Recall: 0.47000
F1: 0.29467
F2: 0.37964

Total predictions: 1200
True positives:   47
False positives:  172
False negatives:   53
True negatives:  928

-------------------------

Balancer params:
certainty: 0.5
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 10}

<custom_classifiers.balancer instance at 0x1059c0e18>

Accuracy: 0.75250
Precision: 0.17276
Recall: 0.52000
F1: 0.25935
F2: 0.37090

Total predictions: 1200
True positives:   52
False positives:  249
False negatives:   48
True negatives:  851

-------------------------

Balancer params:
certainty: 0.6
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 10}

<custom_classifiers.balancer instance at 0x1059bee18>

Accuracy: 0.79417
Precision: 0.20717
Recall: 0.52000
F1: 0.29630
F2: 0.39939

Total predictions: 1200
True positives:   52
False positives:  199
False negatives:   48
True negatives:  901

-------------------------

Balancer params:
certainty: 0.6
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 10}

<custom_classifiers.balancer instance at 0x105ac0e18>

Accuracy: 0.79417
Precision: 0.20717
Recall: 0.52000
F1: 0.29630
F2: 0.39939

Total predictions: 1200
True positives:   52
False positives:  199
False negatives:   48
True negatives:  901

-------------------------

<custom_classifiers.replicator instance at 0x105ac6e60>

Accuracy: 0.81167
Precision: 0.17526
Recall: 0.34000
F1: 0.23129
F2: 0.28620

Total predictions: 1200
True positives:   34
False positives:  160
False negatives:   66
True negatives:  940

-------------------------

<custom_classifiers.replicator instance at 0x105abee60>

Accuracy: 0.81167
Precision: 0.17526
Recall: 0.34000
F1: 0.23129
F2: 0.28620

Total predictions: 1200
True positives:   34
False positives:  160
False negatives:   66
True negatives:  940

-------------------------

<custom_classifiers.replicator instance at 0x1059bde60>

Accuracy: 0.77333
Precision: 0.22078
Recall: 0.68000
F1: 0.33333
F2: 0.48023

Total predictions: 1200
True positives:   68
False positives:  240
False negatives:   32
True negatives:  860

-------------------------

<custom_classifiers.replicator instance at 0x105abee60>

Accuracy: 0.90333
Precision: 0.40244
Recall: 0.33000
F1: 0.36264
F2: 0.34232

Total predictions: 1200
True positives:   33
False positives:   49
False negatives:   67
True negatives: 1051

-------------------------

<custom_classifiers.replicator instance at 0x105ac0e60>

Accuracy: 0.87750
Precision: 0.33094
Recall: 0.46000
F1: 0.38494
F2: 0.42672

Total predictions: 1200
True positives:   46
False positives:   93
False negatives:   54
True negatives: 1007

-------------------------

<custom_classifiers.replicator instance at 0x1059bfe60>

Accuracy: 0.87750
Precision: 0.33094
Recall: 0.46000
F1: 0.38494
F2: 0.42672

Total predictions: 1200
True positives:   46
False positives:   93
False negatives:   54
True negatives: 1007

-------------------------

VotingClassifier(estimators=[('svc', KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='uniform')), ('ridge', RidgeClassifier(alpha=1.0, class_weight='balanced', copy_X=True,
        fit_intercept=True, max_iter=None, normalize=False,
        random_state=None, solver='auto', tol=0.001))],
         voting='hard', weights=None)

Accuracy: 0.91833
Precision: 0.75000
Recall: 0.03000
F1: 0.05769
F2: 0.03713

Total predictions: 1200
True positives:    3
False positives:    1
False negatives:   97
True negatives: 1099

-------------------------

VotingClassifier(estimators=[('svc', KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='uniform')), ('ridge', RidgeClassifier(alpha=1.0, class_weight='balanced', copy_X=True,
        fit_intercept=True, max_iter=None, normalize=False,
        random_state=None, solver='auto', tol=0.001))],
         voting='hard', weights=[1, 2])

Accuracy: 0.79000
Precision: 0.23793
Recall: 0.69000
F1: 0.35385
F2: 0.50000

Total predictions: 1200
True positives:   69
False positives:  221
False negatives:   31
True negatives:  879

-------------------------

VotingClassifier(estimators=[('svc', KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='uniform')), ('ridge', RidgeClassifier(alpha=1.0, class_weight='balanced', copy_X=True,
        fit_intercept=True, max_iter=None, normalize=False,
        random_state=None, solver='auto', tol=0.001))],
         voting='hard', weights=[1, 1])

Accuracy: 0.91833
Precision: 0.75000
Recall: 0.03000
F1: 0.05769
F2: 0.03713

Total predictions: 1200
True positives:    3
False positives:    1
False negatives:   97
True negatives: 1099

-------------------------

KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='uniform')

Accuracy: 0.91667
Precision: 0.50000
Recall: 0.10000
F1: 0.16667
F2: 0.11905

Total predictions: 1200
True positives:   10
False positives:   10
False negatives:   90
True negatives: 1090

-------------------------

RidgeClassifier(alpha=1.0, class_weight='balanced', copy_X=True,
        fit_intercept=True, max_iter=None, normalize=False,
        random_state=None, solver='auto', tol=0.001)

Accuracy: 0.79000
Precision: 0.23793
Recall: 0.69000
F1: 0.35385
F2: 0.50000

Total predictions: 1200
True positives:   69
False positives:  221
False negatives:   31
True negatives:  879

-------------------------

<custom_classifiers.replicator instance at 0x105abee60>

Accuracy: 0.87750
Precision: 0.33094
Recall: 0.46000
F1: 0.38494
F2: 0.42672

Total predictions: 1200
True positives:   46
False positives:   93
False negatives:   54
True negatives: 1007

-------------------------

<custom_classifiers.replicator instance at 0x1059c4e60>

Accuracy: 0.85417
Precision: 0.26994
Recall: 0.44000
F1: 0.33460
F2: 0.39076

Total predictions: 1200
True positives:   44
False positives:  119
False negatives:   56
True negatives:  981

-------------------------

<custom_classifiers.replicator instance at 0x105abee60>

Accuracy: 0.86500
Precision: 0.29605
Recall: 0.45000
F1: 0.35714
F2: 0.40761

Total predictions: 1200
True positives:   45
False positives:  107
False negatives:   55
True negatives:  993

-------------------------

<custom_classifiers.replicator instance at 0x105ac7e60>

Accuracy: 0.81167
Precision: 0.17526
Recall: 0.34000
F1: 0.23129
F2: 0.28620

Total predictions: 1200
True positives:   34
False positives:  160
False negatives:   66
True negatives:  940

-------------------------

<custom_classifiers.replicator instance at 0x1059bde60>

Accuracy: 0.87750
Precision: 0.33094
Recall: 0.46000
F1: 0.38494
F2: 0.42672

Total predictions: 1200
True positives:   46
False positives:   93
False negatives:   54
True negatives: 1007

-------------------------

<custom_classifiers.replicator instance at 0x105ac0e60>

Accuracy: 0.69167
Precision: 0.13710
Recall: 0.51000
F1: 0.21610
F2: 0.33031

Total predictions: 1200
True positives:   51
False positives:  321
False negatives:   49
True negatives:  779

-------------------------

<custom_classifiers.replicator instance at 0x105ac0e60>

Accuracy: 0.87750
Precision: 0.33094
Recall: 0.46000
F1: 0.38494
F2: 0.42672

Total predictions: 1200
True positives:   46
False positives:   93
False negatives:   54
True negatives: 1007

-------------------------

<custom_classifiers.replicator instance at 0x1059bfe60>

Accuracy: 0.90583
Precision: 0.36170
Recall: 0.17000
F1: 0.23129
F2: 0.19016

Total predictions: 1200
True positives:   17
False positives:   30
False negatives:   83
True negatives: 1070

-------------------------

<custom_classifiers.replicator instance at 0x1059bde60>

Accuracy: 0.87750
Precision: 0.33094
Recall: 0.46000
F1: 0.38494
F2: 0.42672

Total predictions: 1200
True positives:   46
False positives:   93
False negatives:   54
True negatives: 1007

-------------------------

<custom_classifiers.replicator instance at 0x1059bde60>

Accuracy: 0.87083
Precision: 0.31293
Recall: 0.46000
F1: 0.37247
F2: 0.42048

Total predictions: 1200
True positives:   46
False positives:  101
False negatives:   54
True negatives:  999

-------------------------

<custom_classifiers.replicator instance at 0x105ac6e60>

Accuracy: 0.84833
Precision: 0.25882
Recall: 0.44000
F1: 0.32593
F2: 0.38596

Total predictions: 1200
True positives:   44
False positives:  126
False negatives:   56
True negatives:  974

-------------------------

<custom_classifiers.replicator instance at 0x1059bde60>

Accuracy: 0.87083
Precision: 0.31293
Recall: 0.46000
F1: 0.37247
F2: 0.42048

Total predictions: 1200
True positives:   46
False positives:  101
False negatives:   54
True negatives:  999

-------------------------

<custom_classifiers.replicator instance at 0x1059bde60>

Accuracy: 0.85500
Precision: 0.18103
Recall: 0.21000
F1: 0.19444
F2: 0.20349

Total predictions: 1200
True positives:   21
False positives:   95
False negatives:   79
True negatives: 1005

-------------------------

<custom_classifiers.replicator instance at 0x105abee60>

Accuracy: 0.86917
Precision: 0.26446
Recall: 0.32000
F1: 0.28959
F2: 0.30710

Total predictions: 1200
True positives:   32
False positives:   89
False negatives:   68
True negatives: 1011

-------------------------

<custom_classifiers.replicator instance at 0x1059bde60>

Accuracy: 0.87083
Precision: 0.31293
Recall: 0.46000
F1: 0.37247
F2: 0.42048

Total predictions: 1200
True positives:   46
False positives:  101
False negatives:   54
True negatives:  999

-------------------------

<custom_classifiers.replicator instance at 0x105abfe60>

Accuracy: 0.87083
Precision: 0.31293
Recall: 0.46000
F1: 0.37247
F2: 0.42048

Total predictions: 1200
True positives:   46
False positives:  101
False negatives:   54
True negatives:  999

-------------------------

<custom_classifiers.replicator instance at 0x105abfea8>

Accuracy: 0.87083
Precision: 0.31293
Recall: 0.46000
F1: 0.37247
F2: 0.42048

Total predictions: 1200
True positives:   46
False positives:  101
False negatives:   54
True negatives:  999

-------------------------

<custom_classifiers.replicator instance at 0x105abfea8>

Accuracy: 0.87083
Precision: 0.31293
Recall: 0.46000
F1: 0.37247
F2: 0.42048

Total predictions: 1200
True positives:   46
False positives:  101
False negatives:   54
True negatives:  999

-------------------------

<custom_classifiers.replicator instance at 0x1059beea8>

Accuracy: 0.87083
Precision: 0.31293
Recall: 0.46000
F1: 0.37247
F2: 0.42048

Total predictions: 1200
True positives:   46
False positives:  101
False negatives:   54
True negatives:  999

-------------------------

<custom_classifiers.replicator instance at 0x105abfea8>

Accuracy: 0.84833
Precision: 0.25882
Recall: 0.44000
F1: 0.32593
F2: 0.38596

Total predictions: 1200
True positives:   44
False positives:  126
False negatives:   56
True negatives:  974

-------------------------

<custom_classifiers.replicator instance at 0x1059beea8>

Accuracy: 0.82167
Precision: 0.20619
Recall: 0.40000
F1: 0.27211
F2: 0.33670

Total predictions: 1200
True positives:   40
False positives:  154
False negatives:   60
True negatives:  946

-------------------------

<custom_classifiers.replicator instance at 0x1059bfea8>

Accuracy: 0.87083
Precision: 0.31293
Recall: 0.46000
F1: 0.37247
F2: 0.42048

Total predictions: 1200
True positives:   46
False positives:  101
False negatives:   54
True negatives:  999

-------------------------

<custom_classifiers.replicator instance at 0x1059bfea8>

Accuracy: 0.82250
Precision: 0.14013
Recall: 0.22000
F1: 0.17121
F2: 0.19749

Total predictions: 1200
True positives:   22
False positives:  135
False negatives:   78
True negatives:  965

-------------------------

<custom_classifiers.replicator instance at 0x1059bdea8>

Accuracy: 0.86750
Precision: 0.27132
Recall: 0.35000
F1: 0.30568
F2: 0.33081

Total predictions: 1200
True positives:   35
False positives:   94
False negatives:   65
True negatives: 1006

-------------------------

<custom_classifiers.replicator instance at 0x1059beea8>

Accuracy: 0.87083
Precision: 0.31293
Recall: 0.46000
F1: 0.37247
F2: 0.42048

Total predictions: 1200
True positives:   46
False positives:  101
False negatives:   54
True negatives:  999

-------------------------

<custom_classifiers.replicator instance at 0x1059beea8>

Accuracy: 0.85250
Precision: 0.28729
Recall: 0.52000
F1: 0.37011
F2: 0.44750

Total predictions: 1200
True positives:   52
False positives:  129
False negatives:   48
True negatives:  971

-------------------------

<custom_classifiers.replicator instance at 0x1059bdea8>

Accuracy: 0.85667
Precision: 0.28049
Recall: 0.46000
F1: 0.34848
F2: 0.40780

Total predictions: 1200
True positives:   46
False positives:  118
False negatives:   54
True negatives:  982

-------------------------

<custom_classifiers.replicator instance at 0x105ac0ea8>

Accuracy: 0.87083
Precision: 0.31293
Recall: 0.46000
F1: 0.37247
F2: 0.42048

Total predictions: 1200
True positives:   46
False positives:  101
False negatives:   54
True negatives:  999

-------------------------

<custom_classifiers.replicator instance at 0x105abfea8>

Accuracy: 0.69167
Precision: 0.13710
Recall: 0.51000
F1: 0.21610
F2: 0.33031

Total predictions: 1200
True positives:   51
False positives:  321
False negatives:   49
True negatives:  779

-------------------------

<custom_classifiers.replicator instance at 0x105ac2ea8>

Accuracy: 0.69167
Precision: 0.13710
Recall: 0.51000
F1: 0.21610
F2: 0.33031

Total predictions: 1200
True positives:   51
False positives:  321
False negatives:   49
True negatives:  779

-------------------------

<custom_classifiers.replicator instance at 0x105abeea8>

Accuracy: 0.69167
Precision: 0.13710
Recall: 0.51000
F1: 0.21610
F2: 0.33031

Total predictions: 1200
True positives:   51
False positives:  321
False negatives:   49
True negatives:  779

-------------------------

<custom_classifiers.replicator instance at 0x105b143f8>

Accuracy: 0.80833
Precision: 0.20721
Recall: 0.46000
F1: 0.28571
F2: 0.36977

Total predictions: 1200
True positives:   46
False positives:  176
False negatives:   54
True negatives:  924

-------------------------

<custom_classifiers.replicator instance at 0x1059bfea8>

Accuracy: 0.80833
Precision: 0.20721
Recall: 0.46000
F1: 0.28571
F2: 0.36977

Total predictions: 1200
True positives:   46
False positives:  176
False negatives:   54
True negatives:  924

-------------------------

<custom_classifiers.replicator instance at 0x105ac6ea8>

Accuracy: 0.87083
Precision: 0.31293
Recall: 0.46000
F1: 0.37247
F2: 0.42048

Total predictions: 1200
True positives:   46
False positives:  101
False negatives:   54
True negatives:  999

-------------------------

<custom_classifiers.replicator instance at 0x1059bdea8>

Accuracy: 0.87083
Precision: 0.31293
Recall: 0.46000
F1: 0.37247
F2: 0.42048

Total predictions: 1200
True positives:   46
False positives:  101
False negatives:   54
True negatives:  999

-------------------------

<custom_classifiers.replicator instance at 0x105ac7ea8>

Accuracy: 0.87083
Precision: 0.31293
Recall: 0.46000
F1: 0.37247
F2: 0.42048

Total predictions: 1200
True positives:   46
False positives:  101
False negatives:   54
True negatives:  999

-------------------------

<custom_classifiers.replicator instance at 0x1059bdea8>

Accuracy: 0.87250
Precision: 0.31724
Recall: 0.46000
F1: 0.37551
F2: 0.42202

Total predictions: 1200
True positives:   46
False positives:   99
False negatives:   54
True negatives: 1001

-------------------------

<custom_classifiers.replicator instance at 0x105ac0ea8>

Accuracy: 0.87250
Precision: 0.31724
Recall: 0.46000
F1: 0.37551
F2: 0.42202

Total predictions: 1200
True positives:   46
False positives:   99
False negatives:   54
True negatives: 1001

-------------------------

<custom_classifiers.replicator instance at 0x1059bdea8>

Accuracy: 0.87250
Precision: 0.31724
Recall: 0.46000
F1: 0.37551
F2: 0.42202

Total predictions: 1200
True positives:   46
False positives:   99
False negatives:   54
True negatives: 1001

-------------------------

<custom_classifiers.replicator instance at 0x1059bdea8>

Accuracy: 0.90000
Precision: 0.31481
Recall: 0.17000
F1: 0.22078
F2: 0.18722

Total predictions: 1200
True positives:   17
False positives:   37
False negatives:   83
True negatives: 1063

-------------------------

<custom_classifiers.replicator instance at 0x1059bdea8>

Accuracy: 0.87250
Precision: 0.31724
Recall: 0.46000
F1: 0.37551
F2: 0.42202

Total predictions: 1200
True positives:   46
False positives:   99
False negatives:   54
True negatives: 1001

-------------------------

<custom_classifiers.replicator instance at 0x105ac0ea8>

Accuracy: 0.87417
Precision: 0.28926
Recall: 0.35000
F1: 0.31674
F2: 0.33589

Total predictions: 1200
True positives:   35
False positives:   86
False negatives:   65
True negatives: 1014

-------------------------

<custom_classifiers.replicator instance at 0x1059bdea8>

Accuracy: 0.85250
Precision: 0.23448
Recall: 0.34000
F1: 0.27755
F2: 0.31193

Total predictions: 1200
True positives:   34
False positives:  111
False negatives:   66
True negatives:  989

-------------------------

<custom_classifiers.replicator instance at 0x1059beea8>

Accuracy: 0.87250
Precision: 0.31724
Recall: 0.46000
F1: 0.37551
F2: 0.42202

Total predictions: 1200
True positives:   46
False positives:   99
False negatives:   54
True negatives: 1001

-------------------------

<custom_classifiers.replicator instance at 0x1059bdea8>

Accuracy: 0.87250
Precision: 0.31724
Recall: 0.46000
F1: 0.37551
F2: 0.42202

Total predictions: 1200
True positives:   46
False positives:   99
False negatives:   54
True negatives: 1001

-------------------------

<custom_classifiers.replicator instance at 0x1059bdea8>

Accuracy: 0.87250
Precision: 0.30657
Recall: 0.42000
F1: 0.35443
F2: 0.39106

Total predictions: 1200
True positives:   42
False positives:   95
False negatives:   58
True negatives: 1005

-------------------------

<custom_classifiers.replicator instance at 0x1059bdea8>

Accuracy: 0.87333
Precision: 0.31944
Recall: 0.46000
F1: 0.37705
F2: 0.42279

Total predictions: 1200
True positives:   46
False positives:   98
False negatives:   54
True negatives: 1002

-------------------------

<custom_classifiers.replicator instance at 0x105ac0ea8>

Accuracy: 0.82083
Precision: 0.12903
Recall: 0.20000
F1: 0.15686
F2: 0.18018

Total predictions: 1200
True positives:   20
False positives:  135
False negatives:   80
True negatives:  965

-------------------------

<custom_classifiers.replicator instance at 0x1059beea8>

Accuracy: 0.87250
Precision: 0.31724
Recall: 0.46000
F1: 0.37551
F2: 0.42202

Total predictions: 1200
True positives:   46
False positives:   99
False negatives:   54
True negatives: 1001

-------------------------

Pipeline(steps=[('clf', <custom_classifiers.replicator instance at 0x105ac0ea8>)])

Accuracy: 0.87250
Precision: 0.31724
Recall: 0.46000
F1: 0.37551
F2: 0.42202

Total predictions: 1200
True positives:   46
False positives:   99
False negatives:   54
True negatives: 1001

-------------------------

Pipeline(steps=[('pca', PCA(copy=True, n_components=3, whiten=False)), ('clf', <custom_classifiers.replicator instance at 0x1059beea8>)])

Accuracy: 0.86000
Precision: 0.21667
Recall: 0.26000
F1: 0.23636
F2: 0.25000

Total predictions: 1200
True positives:   26
False positives:   94
False negatives:   74
True negatives: 1006

-------------------------

Pipeline(steps=[('pca', PCA(copy=True, n_components=5, whiten=False)), ('clf', <custom_classifiers.replicator instance at 0x1059bdea8>)])

Accuracy: 0.86750
Precision: 0.25620
Recall: 0.31000
F1: 0.28054
F2: 0.29750

Total predictions: 1200
True positives:   31
False positives:   90
False negatives:   69
True negatives: 1010

-------------------------

Pipeline(steps=[('pca', PCA(copy=True, n_components=10, whiten=False)), ('clf', <custom_classifiers.replicator instance at 0x1059bdea8>)])

Accuracy: 0.87250
Precision: 0.31724
Recall: 0.46000
F1: 0.37551
F2: 0.42202

Total predictions: 1200
True positives:   46
False positives:   99
False negatives:   54
True negatives: 1001

-------------------------

Pipeline(steps=[('pca', PCA(copy=True, n_components=15, whiten=False)), ('clf', <custom_classifiers.replicator instance at 0x105ac6ea8>)])

Accuracy: 0.87250
Precision: 0.31724
Recall: 0.46000
F1: 0.37551
F2: 0.42202

Total predictions: 1200
True positives:   46
False positives:   99
False negatives:   54
True negatives: 1001

-------------------------

Pipeline(steps=[('pca', PCA(copy=True, n_components=9, whiten=False)), ('clf', <custom_classifiers.replicator instance at 0x105ac0ea8>)])

Accuracy: 0.87250
Precision: 0.31724
Recall: 0.46000
F1: 0.37551
F2: 0.42202

Total predictions: 1200
True positives:   46
False positives:   99
False negatives:   54
True negatives: 1001

-------------------------

Pipeline(steps=[('kbest', SelectKBest(k='all', score_func=<function f_classif at 0x10532b578>)), ('pca', PCA(copy=True, n_components=9, whiten=False)), ('clf', <custom_classifiers.replicator instance at 0x1059bdea8>)])

Accuracy: 0.87250
Precision: 0.31724
Recall: 0.46000
F1: 0.37551
F2: 0.42202

Total predictions: 1200
True positives:   46
False positives:   99
False negatives:   54
True negatives: 1001

-------------------------

Pipeline(steps=[('kbest', SelectKBest(k=9, score_func=<function f_classif at 0x10532b578>)), ('pca', PCA(copy=True, n_components=9, whiten=False)), ('clf', <custom_classifiers.replicator instance at 0x1059bdea8>)])

Accuracy: 0.82500
Precision: 0.11806
Recall: 0.17000
F1: 0.13934
F2: 0.15625

Total predictions: 1200
True positives:   17
False positives:  127
False negatives:   83
True negatives:  973

-------------------------

Pipeline(steps=[('kbest', SelectKBest(k=15, score_func=<function f_classif at 0x10532b578>)), ('pca', PCA(copy=True, n_components=9, whiten=False)), ('clf', <custom_classifiers.replicator instance at 0x1059bdea8>)])

Accuracy: 0.84083
Precision: 0.17266
Recall: 0.24000
F1: 0.20084
F2: 0.22263

Total predictions: 1200
True positives:   24
False positives:  115
False negatives:   76
True negatives:  985

-------------------------

Pipeline(steps=[('kbest', SelectKBest(k=17, score_func=<function f_classif at 0x105442578>)), ('pca', PCA(copy=True, n_components=9, whiten=False)), ('clf', <custom_classifiers.replicator instance at 0x105ac4ea8>)])

Accuracy: 0.84833
Precision: 0.19403
Recall: 0.26000
F1: 0.22222
F2: 0.24345

Total predictions: 1200
True positives:   26
False positives:  108
False negatives:   74
True negatives:  992

-------------------------

Pipeline(steps=[('kbest', SelectKBest(k=17, score_func=<function f_classif at 0x10532b578>)), ('pca', PCA(copy=True, n_components=17, whiten=False)), ('clf', <custom_classifiers.replicator instance at 0x105abeea8>)])

Accuracy: 0.84833
Precision: 0.19403
Recall: 0.26000
F1: 0.22222
F2: 0.24345

Total predictions: 1200
True positives:   26
False positives:  108
False negatives:   74
True negatives:  992

-------------------------

Pipeline(steps=[('kbest', SelectKBest(k=17, score_func=<function f_classif at 0x10532b578>)), ('pca', PCA(copy=True, n_components=17, whiten=False)), ('clf', <custom_classifiers.replicator instance at 0x1059bdea8>)])

Accuracy: 0.84833
Precision: 0.19403
Recall: 0.26000
F1: 0.22222
F2: 0.24345

Total predictions: 1200
True positives:   26
False positives:  108
False negatives:   74
True negatives:  992

-------------------------

Pipeline(steps=[('kbest', SelectKBest(k=18, score_func=<function f_classif at 0x10532b578>)), ('pca', PCA(copy=True, n_components=17, whiten=False)), ('clf', <custom_classifiers.replicator instance at 0x105abfea8>)])

Accuracy: 0.87250
Precision: 0.31724
Recall: 0.46000
F1: 0.37551
F2: 0.42202

Total predictions: 1200
True positives:   46
False positives:   99
False negatives:   54
True negatives: 1001

-------------------------

Pipeline(steps=[('kbest', SelectKBest(k=18, score_func=<function f_classif at 0x105334578>)), ('pca', PCA(copy=True, n_components=18, whiten=False)), ('clf', <custom_classifiers.replicator instance at 0x1059bdea8>)])

Accuracy: 0.87250
Precision: 0.31724
Recall: 0.46000
F1: 0.37551
F2: 0.42202

Total predictions: 1200
True positives:   46
False positives:   99
False negatives:   54
True negatives: 1001

-------------------------

Pipeline(steps=[('kbest', SelectKBest(k=18, score_func=<function f_classif at 0x10532b578>)), ('pca', PCA(copy=True, n_components=15, whiten=False)), ('clf', <custom_classifiers.replicator instance at 0x1059bdea8>)])

Accuracy: 0.87250
Precision: 0.31724
Recall: 0.46000
F1: 0.37551
F2: 0.42202

Total predictions: 1200
True positives:   46
False positives:   99
False negatives:   54
True negatives: 1001

-------------------------

Pipeline(steps=[('kbest', SelectKBest(k=17, score_func=<function f_classif at 0x10532b578>)), ('pca', PCA(copy=True, n_components=15, whiten=False)), ('clf', <custom_classifiers.replicator instance at 0x1059bdea8>)])

Accuracy: 0.84833
Precision: 0.19403
Recall: 0.26000
F1: 0.22222
F2: 0.24345

Total predictions: 1200
True positives:   26
False positives:  108
False negatives:   74
True negatives:  992

-------------------------

Pipeline(steps=[('normalizer', Normalizer(copy=True, norm='l2')), ('clf', <custom_classifiers.replicator instance at 0x1059bdea8>)])

Accuracy: 0.81500
Precision: 0.02344
Recall: 0.03000
F1: 0.02632
F2: 0.02841

Total predictions: 1200
True positives:    3
False positives:  125
False negatives:   97
True negatives:  975

-------------------------

Pipeline(steps=[('normalizer', Normalizer(copy=True, norm='l2')), ('clf', <custom_classifiers.replicator instance at 0x105abeea8>)])

Accuracy: 0.81500
Precision: 0.02344
Recall: 0.03000
F1: 0.02632
F2: 0.02841

Total predictions: 1200
True positives:    3
False positives:  125
False negatives:   97
True negatives:  975

-------------------------

Pipeline(steps=[('clf', <custom_classifiers.replicator instance at 0x1059c1ea8>)])

Accuracy: 0.87250
Precision: 0.31724
Recall: 0.46000
F1: 0.37551
F2: 0.42202

Total predictions: 1200
True positives:   46
False positives:   99
False negatives:   54
True negatives: 1001

-------------------------

Pipeline(steps=[('normalizer', MinMaxScaler(copy=True, feature_range=(0, 1))), ('clf', <custom_classifiers.replicator instance at 0x105ac2ea8>)])

Accuracy: 0.85167
Precision: 0.29474
Recall: 0.56000
F1: 0.38621
F2: 0.47458

Total predictions: 1200
True positives:   56
False positives:  134
False negatives:   44
True negatives:  966

-------------------------

Pipeline(steps=[('scaler', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', <custom_classifiers.replicator instance at 0x105ac0ea8>)])

Accuracy: 0.84333
Precision: 0.20270
Recall: 0.30000
F1: 0.24194
F2: 0.27372

Total predictions: 1200
True positives:   30
False positives:  118
False negatives:   70
True negatives:  982

-------------------------

Pipeline(steps=[('clf', <custom_classifiers.replicator instance at 0x105abeea8>)])

Accuracy: 0.87250
Precision: 0.31724
Recall: 0.46000
F1: 0.37551
F2: 0.42202

Total predictions: 1200
True positives:   46
False positives:   99
False negatives:   54
True negatives: 1001

-------------------------

Pipeline(steps=[('clf', <custom_classifiers.replicator instance at 0x1059c0ea8>)])

Accuracy: 0.87250
Precision: 0.31724
Recall: 0.46000
F1: 0.37551
F2: 0.42202

Total predictions: 1200
True positives:   46
False positives:   99
False negatives:   54
True negatives: 1001

-------------------------

Pipeline(steps=[('clf', <custom_classifiers.replicator instance at 0x105ac0ea8>)])

Accuracy: 0.86000
Precision: 0.25362
Recall: 0.35000
F1: 0.29412
F2: 0.32528

Total predictions: 1200
True positives:   35
False positives:  103
False negatives:   65
True negatives:  997

-------------------------

Pipeline(steps=[('clf', <custom_classifiers.replicator instance at 0x1059bdea8>)])

Accuracy: 0.88417
Precision: 0.35766
Recall: 0.49000
F1: 0.41350
F2: 0.45624

Total predictions: 1200
True positives:   49
False positives:   88
False negatives:   51
True negatives: 1012

-------------------------

Pipeline(steps=[('clf', <custom_classifiers.replicator instance at 0x105abeea8>)])

Accuracy: 0.88417
Precision: 0.35766
Recall: 0.49000
F1: 0.41350
F2: 0.45624

Total predictions: 1200
True positives:   49
False positives:   88
False negatives:   51
True negatives: 1012

-------------------------

Pipeline(steps=[('clf', <custom_classifiers.replicator instance at 0x1059beea8>)])

Accuracy: 0.85083
Precision: 0.29534
Recall: 0.57000
F1: 0.38908
F2: 0.48061

Total predictions: 1200
True positives:   57
False positives:  136
False negatives:   43
True negatives:  964

-------------------------

Pipeline(steps=[('clf', <custom_classifiers.replicator instance at 0x1059bdea8>)])

Accuracy: 0.85583
Precision: 0.23358
Recall: 0.32000
F1: 0.27004
F2: 0.29795

Total predictions: 1200
True positives:   32
False positives:  105
False negatives:   68
True negatives:  995

-------------------------

Pipeline(steps=[('clf', <custom_classifiers.replicator instance at 0x1059beea8>)])

Accuracy: 0.88417
Precision: 0.35766
Recall: 0.49000
F1: 0.41350
F2: 0.45624

Total predictions: 1200
True positives:   49
False positives:   88
False negatives:   51
True negatives: 1012

-------------------------

Pipeline(steps=[('clf', <custom_classifiers.replicator instance at 0x1059beea8>)])

Accuracy: 0.81333
Precision: 0.09211
Recall: 0.14000
F1: 0.11111
F2: 0.12681

Total predictions: 1200
True positives:   14
False positives:  138
False negatives:   86
True negatives:  962

-------------------------

Pipeline(steps=[('clf', <custom_classifiers.replicator instance at 0x1059bdea8>)])

Accuracy: 0.87667
Precision: 0.32090
Recall: 0.43000
F1: 0.36752
F2: 0.40262

Total predictions: 1200
True positives:   43
False positives:   91
False negatives:   57
True negatives: 1009

-------------------------

Pipeline(steps=[('clf', <custom_classifiers.replicator instance at 0x105ac0ea8>)])

Accuracy: 0.85083
Precision: 0.29534
Recall: 0.57000
F1: 0.38908
F2: 0.48061

Total predictions: 1200
True positives:   57
False positives:  136
False negatives:   43
True negatives:  964

-------------------------

Pipeline(steps=[('clf', <custom_classifiers.replicator instance at 0x105abdea8>)])

Accuracy: 0.88417
Precision: 0.35766
Recall: 0.49000
F1: 0.41350
F2: 0.45624

Total predictions: 1200
True positives:   49
False positives:   88
False negatives:   51
True negatives: 1012

-------------------------

Pipeline(steps=[('clf', <custom_classifiers.replicator instance at 0x105ac1ea8>)])

Accuracy: 0.88417
Precision: 0.35766
Recall: 0.49000
F1: 0.41350
F2: 0.45624

Total predictions: 1200
True positives:   49
False positives:   88
False negatives:   51
True negatives: 1012

-------------------------

Pipeline(steps=[('clf', <custom_classifiers.replicator instance at 0x1059bde60>)])

Accuracy: 0.88417
Precision: 0.35766
Recall: 0.49000
F1: 0.41350
F2: 0.45624

Total predictions: 1200
True positives:   49
False positives:   88
False negatives:   51
True negatives: 1012

-------------------------

Pipeline(steps=[('clf', <custom_classifiers.replicator instance at 0x105ac6e60>)])

Accuracy: 0.88417
Precision: 0.35766
Recall: 0.49000
F1: 0.41350
F2: 0.45624

Total predictions: 1200
True positives:   49
False positives:   88
False negatives:   51
True negatives: 1012

-------------------------

Pipeline(steps=[('clf', <custom_classifiers.replicator instance at 0x105ac0e60>)])

Accuracy: 0.88417
Precision: 0.35766
Recall: 0.49000
F1: 0.41350
F2: 0.45624

Total predictions: 1200
True positives:   49
False positives:   88
False negatives:   51
True negatives: 1012

-------------------------

Pipeline(steps=[('clf', <custom_classifiers.replicator instance at 0x1059bde60>)])

Accuracy: 0.88417
Precision: 0.35766
Recall: 0.49000
F1: 0.41350
F2: 0.45624

Total predictions: 1200
True positives:   49
False positives:   88
False negatives:   51
True negatives: 1012

-------------------------

Pipeline(steps=[('clf', <custom_classifiers.replicator instance at 0x105ac2e60>)])

Accuracy: 0.88417
Precision: 0.35766
Recall: 0.49000
F1: 0.41350
F2: 0.45624

Total predictions: 1200
True positives:   49
False positives:   88
False negatives:   51
True negatives: 1012

-------------------------

Pipeline(steps=[('clf', <custom_classifiers.replicator instance at 0x1059bdea8>)])

Accuracy: 0.83333
Precision: 0.21591
Recall: 0.38000
F1: 0.27536
F2: 0.32986

Total predictions: 1200
True positives:   38
False positives:  138
False negatives:   62
True negatives:  962

-------------------------

Pipeline(steps=[('clf', <custom_classifiers.replicator instance at 0x1059bdea8>)])

Accuracy: 0.83833
Precision: 0.22353
Recall: 0.38000
F1: 0.28148
F2: 0.33333

Total predictions: 1200
True positives:   38
False positives:  132
False negatives:   62
True negatives:  968

-------------------------

Pipeline(steps=[('clf', <custom_classifiers.replicator instance at 0x1059bdea8>)])

Accuracy: 0.85083
Precision: 0.29534
Recall: 0.57000
F1: 0.38908
F2: 0.48061

Total predictions: 1200
True positives:   57
False positives:  136
False negatives:   43
True negatives:  964

-------------------------

Pipeline(steps=[('clf', <custom_classifiers.replicator instance at 0x1059bdea8>)])

Accuracy: 0.88417
Precision: 0.35766
Recall: 0.49000
F1: 0.41350
F2: 0.45624

Total predictions: 1200
True positives:   49
False positives:   88
False negatives:   51
True negatives: 1012

-------------------------

Pipeline(steps=[('clf', <custom_classifiers.replicator instance at 0x105ac7ea8>)])

Accuracy: 0.88417
Precision: 0.35766
Recall: 0.49000
F1: 0.41350
F2: 0.45624

Total predictions: 1200
True positives:   49
False positives:   88
False negatives:   51
True negatives: 1012

-------------------------

Pipeline(steps=[('clf', <custom_classifiers.replicator instance at 0x1059bdea8>)])

Accuracy: 0.88417
Precision: 0.35766
Recall: 0.49000
F1: 0.41350
F2: 0.45624

Total predictions: 1200
True positives:   49
False positives:   88
False negatives:   51
True negatives: 1012

-------------------------

Pipeline(steps=[('clf', <custom_classifiers.replicator instance at 0x1059bdea8>)])

Accuracy: 0.88000
Precision: 0.34058
Recall: 0.47000
F1: 0.39496
F2: 0.43680

Total predictions: 1200
True positives:   47
False positives:   91
False negatives:   53
True negatives: 1009

-------------------------

Pipeline(steps=[('clf', <custom_classifiers.replicator instance at 0x105ac0ea8>)])

Accuracy: 0.82500
Precision: 0.19101
Recall: 0.34000
F1: 0.24460
F2: 0.29412

Total predictions: 1200
True positives:   34
False positives:  144
False negatives:   66
True negatives:  956

-------------------------

Pipeline(steps=[('clf', <custom_classifiers.replicator instance at 0x1059bdea8>)])

Accuracy: 0.86583
Precision: 0.20952
Recall: 0.22000
F1: 0.21463
F2: 0.21782

Total predictions: 1200
True positives:   22
False positives:   83
False negatives:   78
True negatives: 1017

-------------------------

Pipeline(steps=[('clf', <custom_classifiers.replicator instance at 0x1059bfea8>)])

Accuracy: 0.87917
Precision: 0.32558
Recall: 0.42000
F1: 0.36681
F2: 0.39698

Total predictions: 1200
True positives:   42
False positives:   87
False negatives:   58
True negatives: 1013

-------------------------

Pipeline(steps=[('clf', <custom_classifiers.replicator instance at 0x1059bdea8>)])

Accuracy: 0.89083
Precision: 0.37984
Recall: 0.49000
F1: 0.42795
F2: 0.46314

Total predictions: 1200
True positives:   49
False positives:   80
False negatives:   51
True negatives: 1020

-------------------------

Pipeline(steps=[('clf', <custom_classifiers.replicator instance at 0x1059beea8>)])

Accuracy: 0.88417
Precision: 0.35766
Recall: 0.49000
F1: 0.41350
F2: 0.45624

Total predictions: 1200
True positives:   49
False positives:   88
False negatives:   51
True negatives: 1012

-------------------------

Pipeline(steps=[('clf', <custom_classifiers.replicator instance at 0x105abfea8>)])

Accuracy: 0.87750
Precision: 0.32331
Recall: 0.43000
F1: 0.36910
F2: 0.40338

Total predictions: 1200
True positives:   43
False positives:   90
False negatives:   57
True negatives: 1010

-------------------------

Pipeline(steps=[('clf', <custom_classifiers.replicator instance at 0x1059c0ea8>)])

Accuracy: 0.89167
Precision: 0.35849
Recall: 0.38000
F1: 0.36893
F2: 0.37549

Total predictions: 1200
True positives:   38
False positives:   68
False negatives:   62
True negatives: 1032

-------------------------

Pipeline(steps=[('clf', <custom_classifiers.replicator instance at 0x1059bdea8>)])

Accuracy: 0.84917
Precision: 0.29231
Recall: 0.57000
F1: 0.38644
F2: 0.47899

Total predictions: 1200
True positives:   57
False positives:  138
False negatives:   43
True negatives:  962

-------------------------

Pipeline(steps=[('clf', <custom_classifiers.replicator instance at 0x1059beea8>)])

Accuracy: 0.89083
Precision: 0.37984
Recall: 0.49000
F1: 0.42795
F2: 0.46314

Total predictions: 1200
True positives:   49
False positives:   80
False negatives:   51
True negatives: 1020

-------------------------

Pipeline(steps=[('clf', <custom_classifiers.replicator instance at 0x1059bdea8>)])

Accuracy: 0.89083
Precision: 0.37984
Recall: 0.49000
F1: 0.42795
F2: 0.46314

Total predictions: 1200
True positives:   49
False positives:   80
False negatives:   51
True negatives: 1020

-------------------------

Pipeline(steps=[('clf', <custom_classifiers.replicator instance at 0x1059bde60>)])

Accuracy: 0.89083
Precision: 0.37984
Recall: 0.49000
F1: 0.42795
F2: 0.46314

Total predictions: 1200
True positives:   49
False positives:   80
False negatives:   51
True negatives: 1020

-------------------------

Pipeline(steps=[('clf', <custom_classifiers.replicator instance at 0x1059c3e18>)])

Accuracy: 0.89083
Precision: 0.37984
Recall: 0.49000
F1: 0.42795
F2: 0.46314

Total predictions: 1200
True positives:   49
False positives:   80
False negatives:   51
True negatives: 1020

-------------------------

Pipeline(steps=[('clf', <custom_classifiers.replicator instance at 0x105ac0dd0>)])

Accuracy: 0.89083
Precision: 0.37984
Recall: 0.49000
F1: 0.42795
F2: 0.46314

Total predictions: 1200
True positives:   49
False positives:   80
False negatives:   51
True negatives: 1020

-------------------------

Pipeline(steps=[('clf', <custom_classifiers.replicator instance at 0x105ac2d88>)])

Accuracy: 0.89083
Precision: 0.37984
Recall: 0.49000
F1: 0.42795
F2: 0.46314

Total predictions: 1200
True positives:   49
False positives:   80
False negatives:   51
True negatives: 1020

-------------------------

Pipeline(steps=[('clf', <custom_classifiers.replicator instance at 0x1059bdd40>)])

Accuracy: 0.90000
Precision: 0.42958
Recall: 0.61000
F1: 0.50413
F2: 0.56273

Total predictions: 1200
True positives:   61
False positives:   81
False negatives:   39
True negatives: 1019

-------------------------

Pipeline(steps=[('clf', <custom_classifiers.replicator instance at 0x1059bed40>)])

Accuracy: 0.89333
Precision: 0.39552
Recall: 0.53000
F1: 0.45299
F2: 0.49625

Total predictions: 1200
True positives:   53
False positives:   81
False negatives:   47
True negatives: 1019

-------------------------

Pipeline(steps=[('clf', <custom_classifiers.replicator instance at 0x1059bdd40>)])

Accuracy: 0.86000
Precision: 0.20690
Recall: 0.24000
F1: 0.22222
F2: 0.23256

Total predictions: 1200
True positives:   24
False positives:   92
False negatives:   76
True negatives: 1008

-------------------------

Pipeline(steps=[('clf', <custom_classifiers.replicator instance at 0x105ac1d40>)])

Accuracy: 0.90000
Precision: 0.42958
Recall: 0.61000
F1: 0.50413
F2: 0.56273

Total predictions: 1200
True positives:   61
False positives:   81
False negatives:   39
True negatives: 1019

-------------------------

Pipeline(steps=[('clf', <custom_classifiers.replicator instance at 0x1059bed40>)])

Accuracy: 0.82833
Precision: 0.19886
Recall: 0.35000
F1: 0.25362
F2: 0.30382

Total predictions: 1200
True positives:   35
False positives:  141
False negatives:   65
True negatives:  959

-------------------------

Pipeline(steps=[('clf', <custom_classifiers.replicator instance at 0x1059bfd40>)])

Accuracy: 0.88667
Precision: 0.38000
Recall: 0.57000
F1: 0.45600
F2: 0.51818

Total predictions: 1200
True positives:   57
False positives:   93
False negatives:   43
True negatives: 1007

-------------------------

Pipeline(steps=[('clf', <custom_classifiers.replicator instance at 0x105ac6d40>)])

Accuracy: 0.90000
Precision: 0.42958
Recall: 0.61000
F1: 0.50413
F2: 0.56273

Total predictions: 1200
True positives:   61
False positives:   81
False negatives:   39
True negatives: 1019

-------------------------

Pipeline(steps=[('clf', <custom_classifiers.replicator instance at 0x105abfd40>)])

Accuracy: 0.90000
Precision: 0.42958
Recall: 0.61000
F1: 0.50413
F2: 0.56273

Total predictions: 1200
True positives:   61
False positives:   81
False negatives:   39
True negatives: 1019

-------------------------

Pipeline(steps=[('clf', <custom_classifiers.replicator instance at 0x1059bdd40>)])

Accuracy: 0.79917
Precision: 0.10169
Recall: 0.18000
F1: 0.12996
F2: 0.15598

Total predictions: 1200
True positives:   18
False positives:  159
False negatives:   82
True negatives:  941

-------------------------

Pipeline(steps=[('clf', <custom_classifiers.replicator instance at 0x1059bed40>)])

Accuracy: 0.89167
Precision: 0.40385
Recall: 0.63000
F1: 0.49219
F2: 0.56655

Total predictions: 1200
True positives:   63
False positives:   93
False negatives:   37
True negatives: 1007

-------------------------

Pipeline(steps=[('clf', <custom_classifiers.replicator instance at 0x1059bdd40>)])

Accuracy: 0.90000
Precision: 0.42958
Recall: 0.61000
F1: 0.50413
F2: 0.56273

Total predictions: 1200
True positives:   61
False positives:   81
False negatives:   39
True negatives: 1019

-------------------------

Pipeline(steps=[('clf', <custom_classifiers.replicator instance at 0x105abfd40>)])

Accuracy: 0.89667
Precision: 0.39831
Recall: 0.47000
F1: 0.43119
F2: 0.45367

Total predictions: 1200
True positives:   47
False positives:   71
False negatives:   53
True negatives: 1029

-------------------------

Pipeline(steps=[('clf', <custom_classifiers.replicator instance at 0x1059bfd40>)])

Accuracy: 0.85000
Precision: 0.28947
Recall: 0.55000
F1: 0.37931
F2: 0.46610

Total predictions: 1200
True positives:   55
False positives:  135
False negatives:   45
True negatives:  965

-------------------------

Pipeline(steps=[('clf', <custom_classifiers.replicator instance at 0x1059bed40>)])

Accuracy: 0.90000
Precision: 0.42958
Recall: 0.61000
F1: 0.50413
F2: 0.56273

Total predictions: 1200
True positives:   61
False positives:   81
False negatives:   39
True negatives: 1019

-------------------------

Pipeline(steps=[('pca', PCA(copy=True, n_components=8, whiten=False)), ('clf', <custom_classifiers.replicator instance at 0x1059bdd40>)])

Accuracy: 0.90000
Precision: 0.42958
Recall: 0.61000
F1: 0.50413
F2: 0.56273

Total predictions: 1200
True positives:   61
False positives:   81
False negatives:   39
True negatives: 1019

-------------------------

Pipeline(steps=[('pca', PCA(copy=True, n_components=5, whiten=False)), ('clf', <custom_classifiers.replicator instance at 0x105ac0d40>)])

Accuracy: 0.89500
Precision: 0.40441
Recall: 0.55000
F1: 0.46610
F2: 0.51306

Total predictions: 1200
True positives:   55
False positives:   81
False negatives:   45
True negatives: 1019

-------------------------

Pipeline(steps=[('pca', PCA(copy=True, n_components=6, whiten=False)), ('clf', <custom_classifiers.replicator instance at 0x105ac6d40>)])

Accuracy: 0.88333
Precision: 0.36842
Recall: 0.56000
F1: 0.44444
F2: 0.50725

Total predictions: 1200
True positives:   56
False positives:   96
False negatives:   44
True negatives: 1004

-------------------------

Pipeline(steps=[('pca', PCA(copy=True, n_components=7, whiten=False)), ('clf', <custom_classifiers.replicator instance at 0x1059bdd40>)])

Accuracy: 0.90000
Precision: 0.42958
Recall: 0.61000
F1: 0.50413
F2: 0.56273

Total predictions: 1200
True positives:   61
False positives:   81
False negatives:   39
True negatives: 1019

-------------------------

Pipeline(steps=[('pca', PCA(copy=True, n_components=8, whiten=False)), ('clf', <custom_classifiers.replicator instance at 0x1059bdd40>)])

Accuracy: 0.90000
Precision: 0.42958
Recall: 0.61000
F1: 0.50413
F2: 0.56273

Total predictions: 1200
True positives:   61
False positives:   81
False negatives:   39
True negatives: 1019

-------------------------

Pipeline(steps=[('pca', PCA(copy=True, n_components=4, whiten=False)), ('clf', <custom_classifiers.replicator instance at 0x1059bfd40>)])

Accuracy: 0.88333
Precision: 0.35714
Recall: 0.50000
F1: 0.41667
F2: 0.46296

Total predictions: 1200
True positives:   50
False positives:   90
False negatives:   50
True negatives: 1010

-------------------------

Pipeline(steps=[('scaler', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', <custom_classifiers.replicator instance at 0x1059bdd40>)])

Accuracy: 0.85833
Precision: 0.17593
Recall: 0.19000
F1: 0.18269
F2: 0.18701

Total predictions: 1200
True positives:   19
False positives:   89
False negatives:   81
True negatives: 1011

-------------------------

Pipeline(steps=[('scaler', MinMaxScaler(copy=True, feature_range=(0, 1))), ('clf', <custom_classifiers.replicator instance at 0x1059bdd40>)])

Accuracy: 0.86917
Precision: 0.22330
Recall: 0.23000
F1: 0.22660
F2: 0.22863

Total predictions: 1200
True positives:   23
False positives:   80
False negatives:   77
True negatives: 1020

-------------------------

Pipeline(steps=[('scaler', Normalizer(copy=True, norm='l2')), ('clf', <custom_classifiers.replicator instance at 0x1059bdd40>)])

Accuracy: 0.82917
Precision: 0.01835
Recall: 0.02000
F1: 0.01914
F2: 0.01965

Total predictions: 1200
True positives:    2
False positives:  107
False negatives:   98
True negatives:  993

-------------------------

<custom_classifiers.replicator instance at 0x105ac0d40>

Accuracy: 0.90000
Precision: 0.42958
Recall: 0.61000
F1: 0.50413
F2: 0.56273

Total predictions: 1200
True positives:   61
False positives:   81
False negatives:   39
True negatives: 1019

-------------------------

<custom_classifiers.replicator instance at 0x1059bed40>

Accuracy: 0.90000
Precision: 0.42958
Recall: 0.61000
F1: 0.50413
F2: 0.56273

Total predictions: 1200
True positives:   61
False positives:   81
False negatives:   39
True negatives: 1019

-------------------------

Balancer params:
certainty: 0.6
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 10}

<custom_classifiers.balancer instance at 0x1059c0cb0>

Accuracy: 0.80500
Precision: 0.25368
Recall: 0.69000
F1: 0.37097
F2: 0.51339

Total predictions: 1200
True positives:   69
False positives:  203
False negatives:   31
True negatives:  897

-------------------------

<custom_classifiers.replicator instance at 0x1059bed40>

Accuracy: 0.90583
Precision: 0.45185
Recall: 0.61000
F1: 0.51915
F2: 0.57009

Total predictions: 1200
True positives:   61
False positives:   74
False negatives:   39
True negatives: 1026

-------------------------

<custom_classifiers.replicator instance at 0x105abed40>

Accuracy: 0.90000
Precision: 0.42958
Recall: 0.61000
F1: 0.50413
F2: 0.56273

Total predictions: 1200
True positives:   61
False positives:   81
False negatives:   39
True negatives: 1019

-------------------------

<custom_classifiers.replicator instance at 0x105ac0d40>

Accuracy: 0.89167
Precision: 0.38462
Recall: 0.50000
F1: 0.43478
F2: 0.47170

Total predictions: 1200
True positives:   50
False positives:   80
False negatives:   50
True negatives: 1020

-------------------------

<custom_classifiers.replicator instance at 0x1059bed40>

Accuracy: 0.90583
Precision: 0.45185
Recall: 0.61000
F1: 0.51915
F2: 0.57009

Total predictions: 1200
True positives:   61
False positives:   74
False negatives:   39
True negatives: 1026

-------------------------

<custom_classifiers.replicator instance at 0x1059bdd40>

Accuracy: 0.90583
Precision: 0.45185
Recall: 0.61000
F1: 0.51915
F2: 0.57009

Total predictions: 1200
True positives:   61
False positives:   74
False negatives:   39
True negatives: 1026

-------------------------

<custom_classifiers.replicator instance at 0x1059bdd40>

Accuracy: 0.72750
Precision: 0.19733
Recall: 0.74000
F1: 0.31158
F2: 0.47742

Total predictions: 1200
True positives:   74
False positives:  301
False negatives:   26
True negatives:  799

-------------------------

<custom_classifiers.replicator instance at 0x1059bdd40>

Accuracy: 0.90500
Precision: 0.38710
Recall: 0.24000
F1: 0.29630
F2: 0.25974

Total predictions: 1200
True positives:   24
False positives:   38
False negatives:   76
True negatives: 1062

-------------------------

<custom_classifiers.replicator instance at 0x1059bed40>

Accuracy: 0.72750
Precision: 0.19733
Recall: 0.74000
F1: 0.31158
F2: 0.47742

Total predictions: 1200
True positives:   74
False positives:  301
False negatives:   26
True negatives:  799

-------------------------

<custom_classifiers.replicator instance at 0x105ac6d40>

Accuracy: 0.90583
Precision: 0.45185
Recall: 0.61000
F1: 0.51915
F2: 0.57009

Total predictions: 1200
True positives:   61
False positives:   74
False negatives:   39
True negatives: 1026

-------------------------

<custom_classifiers.replicator instance at 0x1059bdd40>

Accuracy: 0.90500
Precision: 0.38710
Recall: 0.24000
F1: 0.29630
F2: 0.25974

Total predictions: 1200
True positives:   24
False positives:   38
False negatives:   76
True negatives: 1062

-------------------------

<custom_classifiers.replicator instance at 0x1059bed40>

Accuracy: 0.90583
Precision: 0.45185
Recall: 0.61000
F1: 0.51915
F2: 0.57009

Total predictions: 1200
True positives:   61
False positives:   74
False negatives:   39
True negatives: 1026

-------------------------

<custom_classifiers.replicator instance at 0x1059bdd40>

Accuracy: 0.88750
Precision: 0.39766
Recall: 0.68000
F1: 0.50185
F2: 0.59545

Total predictions: 1200
True positives:   68
False positives:  103
False negatives:   32
True negatives:  997

-------------------------

<custom_classifiers.replicator instance at 0x1059bed40>

Accuracy: 0.90583
Precision: 0.45185
Recall: 0.61000
F1: 0.51915
F2: 0.57009

Total predictions: 1200
True positives:   61
False positives:   74
False negatives:   39
True negatives: 1026

-------------------------

<custom_classifiers.replicator instance at 0x1059bed40>

Accuracy: 0.90750
Precision: 0.44660
Recall: 0.46000
F1: 0.45320
F2: 0.45726

Total predictions: 1200
True positives:   46
False positives:   57
False negatives:   54
True negatives: 1043

-------------------------

<custom_classifiers.replicator instance at 0x1059bdd40>

Accuracy: 0.90583
Precision: 0.45185
Recall: 0.61000
F1: 0.51915
F2: 0.57009

Total predictions: 1200
True positives:   61
False positives:   74
False negatives:   39
True negatives: 1026

-------------------------

<custom_classifiers.replicator instance at 0x1059bdd40>

Accuracy: 0.90583
Precision: 0.45185
Recall: 0.61000
F1: 0.51915
F2: 0.57009

Total predictions: 1200
True positives:   61
False positives:   74
False negatives:   39
True negatives: 1026

-------------------------

<custom_classifiers.replicator instance at 0x1059bfcf8>

Accuracy: 0.90583
Precision: 0.45185
Recall: 0.61000
F1: 0.51915
F2: 0.57009

Total predictions: 1200
True positives:   61
False positives:   74
False negatives:   39
True negatives: 1026

-------------------------

<custom_classifiers.replicator instance at 0x1059bdcf8>

Accuracy: 0.90583
Precision: 0.45185
Recall: 0.61000
F1: 0.51915
F2: 0.57009

Total predictions: 1200
True positives:   61
False positives:   74
False negatives:   39
True negatives: 1026

-------------------------

<custom_classifiers.replicator instance at 0x105ac0cf8>

Accuracy: 0.90583
Precision: 0.45185
Recall: 0.61000
F1: 0.51915
F2: 0.57009

Total predictions: 1200
True positives:   61
False positives:   74
False negatives:   39
True negatives: 1026

-------------------------

<custom_classifiers.replicator instance at 0x1059bdcf8>

Accuracy: 0.90583
Precision: 0.45185
Recall: 0.61000
F1: 0.51915
F2: 0.57009

Total predictions: 1200
True positives:   61
False positives:   74
False negatives:   39
True negatives: 1026

-------------------------

<custom_classifiers.replicator instance at 0x105abfcf8>

Accuracy: 0.90583
Precision: 0.45185
Recall: 0.61000
F1: 0.51915
F2: 0.57009

Total predictions: 1200
True positives:   61
False positives:   74
False negatives:   39
True negatives: 1026

-------------------------

<custom_classifiers.replicator instance at 0x105abccf8>

Accuracy: 0.90583
Precision: 0.45185
Recall: 0.61000
F1: 0.51915
F2: 0.57009

Total predictions: 1200
True positives:   61
False positives:   74
False negatives:   39
True negatives: 1026

-------------------------

<custom_classifiers.replicator instance at 0x105abed40>

Accuracy: 0.90583
Precision: 0.45185
Recall: 0.61000
F1: 0.51915
F2: 0.57009

Total predictions: 1200
True positives:   61
False positives:   74
False negatives:   39
True negatives: 1026

-------------------------

<custom_classifiers.replicator instance at 0x105ac9d40>

Accuracy: 0.90583
Precision: 0.45185
Recall: 0.61000
F1: 0.51915
F2: 0.57009

Total predictions: 1200
True positives:   61
False positives:   74
False negatives:   39
True negatives: 1026

-------------------------

<custom_classifiers.replicator instance at 0x105ac0d40>

Accuracy: 0.90583
Precision: 0.45185
Recall: 0.61000
F1: 0.51915
F2: 0.57009

Total predictions: 1200
True positives:   61
False positives:   74
False negatives:   39
True negatives: 1026

-------------------------

<custom_classifiers.replicator instance at 0x105ac0d88>

Accuracy: 0.89500
Precision: 0.39516
Recall: 0.49000
F1: 0.43750
F2: 0.46756

Total predictions: 1200
True positives:   49
False positives:   75
False negatives:   51
True negatives: 1025

-------------------------

Pipeline(steps=[('clf', <custom_classifiers.replicator instance at 0x1059bdd40>)])

Accuracy: 0.90583
Precision: 0.45185
Recall: 0.61000
F1: 0.51915
F2: 0.57009

Total predictions: 1200
True positives:   61
False positives:   74
False negatives:   39
True negatives: 1026

-------------------------

Pipeline(steps=[('pca', PCA(copy=True, n_components=8, whiten=False)), ('clf', <custom_classifiers.replicator instance at 0x105abdd40>)])

Accuracy: 0.90583
Precision: 0.45185
Recall: 0.61000
F1: 0.51915
F2: 0.57009

Total predictions: 1200
True positives:   61
False positives:   74
False negatives:   39
True negatives: 1026

-------------------------

Pipeline(steps=[('pca', PCA(copy=True, n_components=7, whiten=False)), ('clf', <custom_classifiers.replicator instance at 0x105ac1d40>)])

Accuracy: 0.90583
Precision: 0.45185
Recall: 0.61000
F1: 0.51915
F2: 0.57009

Total predictions: 1200
True positives:   61
False positives:   74
False negatives:   39
True negatives: 1026

-------------------------

Pipeline(steps=[('pca', PCA(copy=True, n_components=5, whiten=False)), ('clf', <custom_classifiers.replicator instance at 0x1059bed40>)])

Accuracy: 0.89667
Precision: 0.41045
Recall: 0.55000
F1: 0.47009
F2: 0.51498

Total predictions: 1200
True positives:   55
False positives:   79
False negatives:   45
True negatives: 1021

-------------------------

Pipeline(steps=[('pca', PCA(copy=True, n_components=8, whiten=False)), ('clf', <custom_classifiers.replicator instance at 0x105ac0d40>)])

Accuracy: 0.90583
Precision: 0.45185
Recall: 0.61000
F1: 0.51915
F2: 0.57009

Total predictions: 1200
True positives:   61
False positives:   74
False negatives:   39
True negatives: 1026

-------------------------

Pipeline(steps=[('clf', <custom_classifiers.replicator instance at 0x1059bddd0>)])

Accuracy: 0.89500
Precision: 0.39516
Recall: 0.49000
F1: 0.43750
F2: 0.46756

Total predictions: 1200
True positives:   49
False positives:   75
False negatives:   51
True negatives: 1025

-------------------------

Pipeline(steps=[('clf', <custom_classifiers.replicator instance at 0x1059bddd0>)])

Accuracy: 0.89500
Precision: 0.39516
Recall: 0.49000
F1: 0.43750
F2: 0.46756

Total predictions: 1200
True positives:   49
False positives:   75
False negatives:   51
True negatives: 1025

-------------------------

Pipeline(steps=[('clf', <custom_classifiers.replicator instance at 0x1059bddd0>)])

Accuracy: 0.89500
Precision: 0.39516
Recall: 0.49000
F1: 0.43750
F2: 0.46756

Total predictions: 1200
True positives:   49
False positives:   75
False negatives:   51
True negatives: 1025

-------------------------

Pipeline(steps=[('clf', <custom_classifiers.replicator instance at 0x1059bfdd0>)])

Accuracy: 0.89500
Precision: 0.39516
Recall: 0.49000
F1: 0.43750
F2: 0.46756

Total predictions: 1200
True positives:   49
False positives:   75
False negatives:   51
True negatives: 1025

-------------------------

Pipeline(steps=[('clf', <custom_classifiers.replicator instance at 0x1059bedd0>)])

Accuracy: 0.89500
Precision: 0.39516
Recall: 0.49000
F1: 0.43750
F2: 0.46756

Total predictions: 1200
True positives:   49
False positives:   75
False negatives:   51
True negatives: 1025

-------------------------

Pipeline(steps=[('clf', <custom_classifiers.replicator instance at 0x105abedd0>)])

Accuracy: 0.89500
Precision: 0.39516
Recall: 0.49000
F1: 0.43750
F2: 0.46756

Total predictions: 1200
True positives:   49
False positives:   75
False negatives:   51
True negatives: 1025

-------------------------

Pipeline(steps=[('clf', <custom_classifiers.replicator instance at 0x105abedd0>)])

Accuracy: 0.89500
Precision: 0.39516
Recall: 0.49000
F1: 0.43750
F2: 0.46756

Total predictions: 1200
True positives:   49
False positives:   75
False negatives:   51
True negatives: 1025

-------------------------

LinearSVC(C=1, class_weight='balanced', dual=False, fit_intercept=True,
     intercept_scaling=1, loss='squared_hinge', max_iter=1000,
     multi_class='ovr', penalty='l2', random_state=None, tol=0.0001,
     verbose=0)

Accuracy: 0.43667
Precision: 0.08017
Recall: 0.55000
F1: 0.13995
F2: 0.25322

Total predictions: 1200
True positives:   55
False positives:  631
False negatives:   45
True negatives:  469

-------------------------

<custom_classifiers.replicator instance at 0x105abed40>

Accuracy: 0.90583
Precision: 0.45185
Recall: 0.61000
F1: 0.51915
F2: 0.57009

Total predictions: 1200
True positives:   61
False positives:   74
False negatives:   39
True negatives: 1026

-------------------------

<custom_classifiers.replicator instance at 0x1059bfd40>

Accuracy: 0.90583
Precision: 0.45185
Recall: 0.61000
F1: 0.51915
F2: 0.57009

Total predictions: 1200
True positives:   61
False positives:   74
False negatives:   39
True negatives: 1026

-------------------------

KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='uniform')

Accuracy: 0.91167
Precision: 0.44000
Recall: 0.22000
F1: 0.29333
F2: 0.24444

Total predictions: 1200
True positives:   22
False positives:   28
False negatives:   78
True negatives: 1072

-------------------------

KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=10, p=2,
           weights='distance')

Accuracy: 0.91750
Precision: 1.00000
Recall: 0.01000
F1: 0.01980
F2: 0.01247

Total predictions: 1200
True positives:    1
False positives:    0
False negatives:   99
True negatives: 1100

-------------------------

<custom_classifiers.replicator instance at 0x1059bed40>

Accuracy: 0.90583
Precision: 0.45185
Recall: 0.61000
F1: 0.51915
F2: 0.57009

Total predictions: 1200
True positives:   61
False positives:   74
False negatives:   39
True negatives: 1026

-------------------------

Balancer params:
certainty: 0.6
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 10, 'weights': 'uniform', 'leaf_size': 30, 'algorithm': 'auto', 'p': 2}

<custom_classifiers.balancer instance at 0x1059bdcf8>

Accuracy: 0.80500
Precision: 0.25368
Recall: 0.69000
F1: 0.37097
F2: 0.51339

Total predictions: 1200
True positives:   69
False positives:  203
False negatives:   31
True negatives:  897

-------------------------

Balancer params:
certainty: 0.6
max_imbalance: 2
clf_mode: 0
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 10, 'weights': 'uniform', 'leaf_size': 30, 'algorithm': 'auto', 'p': 2}

<custom_classifiers.balancer instance at 0x105abdcf8>

Accuracy: 0.88167
Precision: 0.28571
Recall: 0.28000
F1: 0.28283
F2: 0.28112

Total predictions: 1200
True positives:   28
False positives:   70
False negatives:   72
True negatives: 1030

-------------------------

Balancer params:
certainty: 0.6
max_imbalance: 3
clf_mode: 0
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 10, 'weights': 'uniform', 'leaf_size': 30, 'algorithm': 'auto', 'p': 2}

<custom_classifiers.balancer instance at 0x1059becf8>

Accuracy: 0.89917
Precision: 0.33333
Recall: 0.21000
F1: 0.25767
F2: 0.22678

Total predictions: 1200
True positives:   21
False positives:   42
False negatives:   79
True negatives: 1058

-------------------------

Balancer params:
certainty: 0.6
max_imbalance: 4
clf_mode: 0
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 10, 'weights': 'uniform', 'leaf_size': 30, 'algorithm': 'auto', 'p': 2}

<custom_classifiers.balancer instance at 0x1059bfcf8>

Accuracy: 0.92167
Precision: 1.00000
Recall: 0.06000
F1: 0.11321
F2: 0.07389

Total predictions: 1200
True positives:    6
False positives:    0
False negatives:   94
True negatives: 1100

-------------------------

Balancer params:
certainty: 0.6
max_imbalance: 0.5
clf_mode: 0
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 10, 'weights': 'uniform', 'leaf_size': 30, 'algorithm': 'auto', 'p': 2}

<custom_classifiers.balancer instance at 0x105ac0cf8>

Accuracy: 0.23250
Precision: 0.09397
Recall: 0.95000
F1: 0.17102
F2: 0.33664

Total predictions: 1200
True positives:   95
False positives:  916
False negatives:    5
True negatives:  184

-------------------------

Balancer params:
certainty: 0.5
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 10, 'weights': 'uniform', 'leaf_size': 30, 'algorithm': 'auto', 'p': 2}

<custom_classifiers.balancer instance at 0x1059becf8>

Accuracy: 0.79417
Precision: 0.24742
Recall: 0.72000
F1: 0.36829
F2: 0.52098

Total predictions: 1200
True positives:   72
False positives:  219
False negatives:   28
True negatives:  881

-------------------------

Balancer params:
certainty: 0.6
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 10, 'weights': 'uniform', 'leaf_size': 30, 'algorithm': 'auto', 'p': 2}

<custom_classifiers.balancer instance at 0x105ac6cf8>

Accuracy: 0.80500
Precision: 0.25368
Recall: 0.69000
F1: 0.37097
F2: 0.51339

Total predictions: 1200
True positives:   69
False positives:  203
False negatives:   31
True negatives:  897

-------------------------

Balancer params:
certainty: 0.7
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 10, 'weights': 'uniform', 'leaf_size': 30, 'algorithm': 'auto', 'p': 2}

<custom_classifiers.balancer instance at 0x105abecf8>

Accuracy: 0.81333
Precision: 0.23950
Recall: 0.57000
F1: 0.33728
F2: 0.44671

Total predictions: 1200
True positives:   57
False positives:  181
False negatives:   43
True negatives:  919

-------------------------

<custom_classifiers.replicator instance at 0x105ac0d40>

Accuracy: 0.90583
Precision: 0.45185
Recall: 0.61000
F1: 0.51915
F2: 0.57009

Total predictions: 1200
True positives:   61
False positives:   74
False negatives:   39
True negatives: 1026

-------------------------

<custom_classifiers.replicator instance at 0x105b33290>

Accuracy: 0.88983
Precision: 0.38484
Recall: 0.53800
F1: 0.44871
F2: 0.49833

Total predictions: 12000
True positives:  538
False positives:  860
False negatives:  462
True negatives: 10140

-------------------------

<custom_classifiers.replicator instance at 0x1059bdd40>

Accuracy: 0.90583
Precision: 0.45185
Recall: 0.61000
F1: 0.51915
F2: 0.57009

Total predictions: 1200
True positives:   61
False positives:   74
False negatives:   39
True negatives: 1026

-------------------------

<custom_classifiers.replicator instance at 0x105ac1d40>

Accuracy: 0.88983
Precision: 0.38484
Recall: 0.53800
F1: 0.44871
F2: 0.49833

Total predictions: 12000
True positives:  538
False positives:  860
False negatives:  462
True negatives: 10140

-------------------------

Balancer params:
certainty: 0.6
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 10, 'weights': 'uniform', 'leaf_size': 30, 'algorithm': 'auto', 'p': 2}

<custom_classifiers.balancer instance at 0x105abfcf8>

Accuracy: 0.80500
Precision: 0.25368
Recall: 0.69000
F1: 0.37097
F2: 0.51339

Total predictions: 1200
True positives:   69
False positives:  203
False negatives:   31
True negatives:  897

-------------------------

Balancer params:
certainty: 0.6
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 10, 'weights': 'uniform', 'leaf_size': 30, 'algorithm': 'auto', 'p': 2}

<custom_classifiers.balancer instance at 0x1059bdcf8>

Accuracy: 0.80475
Precision: 0.24497
Recall: 0.64500
F1: 0.35508
F2: 0.48621

Total predictions: 12000
True positives:  645
False positives: 1988
False negatives:  355
True negatives: 9012

-------------------------

<custom_classifiers.replicator instance at 0x1059bdd40>

Accuracy: 0.88983
Precision: 0.38484
Recall: 0.53800
F1: 0.44871
F2: 0.49833

Total predictions: 12000
True positives:  538
False positives:  860
False negatives:  462
True negatives: 10140

-------------------------

<custom_classifiers.weighted_knn instance at 0x105a12638>

Accuracy: 0.58833
Precision: 0.13653
Recall: 0.74000
F1: 0.23053
F2: 0.39278

Total predictions: 1200
True positives:   74
False positives:  468
False negatives:   26
True negatives:  632

-------------------------

<custom_classifiers.weighted_knn instance at 0x105a12638>

Accuracy: 0.58833
Precision: 0.13653
Recall: 0.74000
F1: 0.23053
F2: 0.39278

Total predictions: 1200
True positives:   74
False positives:  468
False negatives:   26
True negatives:  632

-------------------------

<custom_classifiers.weighted_knn instance at 0x105abeef0>

Accuracy: 0.72750
Precision: 0.19733
Recall: 0.74000
F1: 0.31158
F2: 0.47742

Total predictions: 1200
True positives:   74
False positives:  301
False negatives:   26
True negatives:  799

-------------------------

<custom_classifiers.weighted_knn instance at 0x1059bdef0>

Accuracy: 0.72750
Precision: 0.19733
Recall: 0.74000
F1: 0.31158
F2: 0.47742

Total predictions: 1200
True positives:   74
False positives:  301
False negatives:   26
True negatives:  799

-------------------------

<custom_classifiers.weighted_knn instance at 0x105ac7ef0>

Accuracy: 0.90750
Precision: 0.44660
Recall: 0.46000
F1: 0.45320
F2: 0.45726

Total predictions: 1200
True positives:   46
False positives:   57
False negatives:   54
True negatives: 1043

-------------------------

<custom_classifiers.weighted_knn instance at 0x105abdef0>

Accuracy: 0.90917
Precision: 0.41509
Recall: 0.22000
F1: 0.28758
F2: 0.24283

Total predictions: 1200
True positives:   22
False positives:   31
False negatives:   78
True negatives: 1069

-------------------------

<custom_classifiers.weighted_knn instance at 0x1059bdef0>

Accuracy: 0.89583
Precision: 0.32877
Recall: 0.24000
F1: 0.27746
F2: 0.25370

Total predictions: 1200
True positives:   24
False positives:   49
False negatives:   76
True negatives: 1051

-------------------------

<custom_classifiers.weighted_knn instance at 0x105ac6ef0>

Accuracy: 0.90750
Precision: 0.44660
Recall: 0.46000
F1: 0.45320
F2: 0.45726

Total predictions: 1200
True positives:   46
False positives:   57
False negatives:   54
True negatives: 1043

-------------------------

<custom_classifiers.weighted_knn instance at 0x1059bdef0>

Accuracy: 0.91167
Precision: 0.44000
Recall: 0.22000
F1: 0.29333
F2: 0.24444

Total predictions: 1200
True positives:   22
False positives:   28
False negatives:   78
True negatives: 1072

-------------------------

<custom_classifiers.weighted_knn instance at 0x1059bdef0>

Accuracy: 0.91167
Precision: 0.44000
Recall: 0.22000
F1: 0.29333
F2: 0.24444

Total predictions: 1200
True positives:   22
False positives:   28
False negatives:   78
True negatives: 1072

-------------------------

<custom_classifiers.weighted_knn instance at 0x1059bdef0>

Accuracy: 0.90750
Precision: 0.44660
Recall: 0.46000
F1: 0.45320
F2: 0.45726

Total predictions: 1200
True positives:   46
False positives:   57
False negatives:   54
True negatives: 1043

-------------------------

<custom_classifiers.weighted_knn instance at 0x1059beef0>

Accuracy: 0.90750
Precision: 0.44660
Recall: 0.46000
F1: 0.45320
F2: 0.45726

Total predictions: 1200
True positives:   46
False positives:   57
False negatives:   54
True negatives: 1043

-------------------------

<custom_classifiers.weighted_knn instance at 0x105abeef0>

Accuracy: 0.90750
Precision: 0.44660
Recall: 0.46000
F1: 0.45320
F2: 0.45726

Total predictions: 1200
True positives:   46
False positives:   57
False negatives:   54
True negatives: 1043

-------------------------

<custom_classifiers.weighted_knn instance at 0x105ac5ef0>

Accuracy: 0.72750
Precision: 0.19733
Recall: 0.74000
F1: 0.31158
F2: 0.47742

Total predictions: 1200
True positives:   74
False positives:  301
False negatives:   26
True negatives:  799

-------------------------

<custom_classifiers.weighted_knn instance at 0x1059c3ef0>

Accuracy: 0.89658
Precision: 0.38770
Recall: 0.41600
F1: 0.40135
F2: 0.41001

Total predictions: 12000
True positives:  416
False positives:  657
False negatives:  584
True negatives: 10343

-------------------------

<custom_classifiers.replicator instance at 0x1059bed88>

Accuracy: 0.88983
Precision: 0.38484
Recall: 0.53800
F1: 0.44871
F2: 0.49833

Total predictions: 12000
True positives:  538
False positives:  860
False negatives:  462
True negatives: 10140

-------------------------

<custom_classifiers.replicator instance at 0x1059bdd88>

Accuracy: 0.88033
Precision: 0.35601
Recall: 0.53900
F1: 0.42880
F2: 0.48876

Total predictions: 12000
True positives:  539
False positives:  975
False negatives:  461
True negatives: 10025

-------------------------

<custom_classifiers.replicator instance at 0x105b335f0>

Accuracy: 0.88983
Precision: 0.38484
Recall: 0.53800
F1: 0.44871
F2: 0.49833

Total predictions: 12000
True positives:  538
False positives:  860
False negatives:  462
True negatives: 10140

-------------------------

<custom_classifiers.weighted_knn instance at 0x105b15680>

Accuracy: 0.89658
Precision: 0.38770
Recall: 0.41600
F1: 0.40135
F2: 0.41001

Total predictions: 12000
True positives:  416
False positives:  657
False negatives:  584
True negatives: 10343

-------------------------

<custom_classifiers.weighted_knn instance at 0x1059bdf38>

Accuracy: 0.90750
Precision: 0.44660
Recall: 0.46000
F1: 0.45320
F2: 0.45726

Total predictions: 1200
True positives:   46
False positives:   57
False negatives:   54
True negatives: 1043

-------------------------

<custom_classifiers.weighted_knn instance at 0x105a13638>

Accuracy: 0.89833
Precision: 0.40179
Recall: 0.45000
F1: 0.42453
F2: 0.43945

Total predictions: 1200
True positives:   45
False positives:   67
False negatives:   55
True negatives: 1033

-------------------------

<custom_classifiers.weighted_knn instance at 0x105b15680>

Accuracy: 0.90750
Precision: 0.44660
Recall: 0.46000
F1: 0.45320
F2: 0.45726

Total predictions: 1200
True positives:   46
False positives:   57
False negatives:   54
True negatives: 1043

-------------------------

<custom_classifiers.weighted_knn instance at 0x105a13680>

Accuracy: 0.90750
Precision: 0.44660
Recall: 0.46000
F1: 0.45320
F2: 0.45726

Total predictions: 1200
True positives:   46
False positives:   57
False negatives:   54
True negatives: 1043

-------------------------

<custom_classifiers.weighted_knn instance at 0x105ac2f38>

Accuracy: 0.89833
Precision: 0.40179
Recall: 0.45000
F1: 0.42453
F2: 0.43945

Total predictions: 1200
True positives:   45
False positives:   67
False negatives:   55
True negatives: 1033

-------------------------

<custom_classifiers.replicator instance at 0x1059bedd0>

Accuracy: 0.90583
Precision: 0.45185
Recall: 0.61000
F1: 0.51915
F2: 0.57009

Total predictions: 1200
True positives:   61
False positives:   74
False negatives:   39
True negatives: 1026

-------------------------

Balancer params:
certainty: 0.6
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 10, 'weights': 'uniform', 'leaf_size': 30, 'algorithm': 'auto', 'p': 2}

<custom_classifiers.balancer instance at 0x1059bdd88>

Accuracy: 0.80500
Precision: 0.25368
Recall: 0.69000
F1: 0.37097
F2: 0.51339

Total predictions: 1200
True positives:   69
False positives:  203
False negatives:   31
True negatives:  897

-------------------------

<custom_classifiers.weighted_knn instance at 0x1059bdf38>

Accuracy: 0.87500
Precision: 0.33553
Recall: 0.51000
F1: 0.40476
F2: 0.46196

Total predictions: 1200
True positives:   51
False positives:  101
False negatives:   49
True negatives:  999

-------------------------

<custom_classifiers.weighted_knn instance at 0x105ac7f38>

Accuracy: 0.82083
Precision: 0.25108
Recall: 0.58000
F1: 0.35045
F2: 0.45959

Total predictions: 1200
True positives:   58
False positives:  173
False negatives:   42
True negatives:  927

-------------------------

<custom_classifiers.weighted_knn instance at 0x105ac0f38>

Accuracy: 0.79083
Precision: 0.23509
Recall: 0.67000
F1: 0.34805
F2: 0.48905

Total predictions: 1200
True positives:   67
False positives:  218
False negatives:   33
True negatives:  882

-------------------------

<custom_classifiers.weighted_knn instance at 0x1059bdf38>

Accuracy: 0.89833
Precision: 0.40179
Recall: 0.45000
F1: 0.42453
F2: 0.43945

Total predictions: 1200
True positives:   45
False positives:   67
False negatives:   55
True negatives: 1033

-------------------------

<custom_classifiers.weighted_knn instance at 0x1059bef38>

Accuracy: 0.91250
Precision: 0.44681
Recall: 0.21000
F1: 0.28571
F2: 0.23490

Total predictions: 1200
True positives:   21
False positives:   26
False negatives:   79
True negatives: 1074

-------------------------

<custom_classifiers.weighted_knn instance at 0x105ac2f38>

Accuracy: 0.91667
Precision: 0.50000
Recall: 0.03000
F1: 0.05660
F2: 0.03695

Total predictions: 1200
True positives:    3
False positives:    3
False negatives:   97
True negatives: 1097

-------------------------

<custom_classifiers.weighted_knn instance at 0x1059bdf38>

Accuracy: 0.89833
Precision: 0.40179
Recall: 0.45000
F1: 0.42453
F2: 0.43945

Total predictions: 1200
True positives:   45
False positives:   67
False negatives:   55
True negatives: 1033

-------------------------

<custom_classifiers.weighted_knn instance at 0x1059bef38>

Accuracy: 0.90750
Precision: 0.44660
Recall: 0.46000
F1: 0.45320
F2: 0.45726

Total predictions: 1200
True positives:   46
False positives:   57
False negatives:   54
True negatives: 1043

-------------------------

<custom_classifiers.weighted_knn instance at 0x105ac0f38>

Accuracy: 0.91083
Precision: 0.46392
Recall: 0.45000
F1: 0.45685
F2: 0.45272

Total predictions: 1200
True positives:   45
False positives:   52
False negatives:   55
True negatives: 1048

-------------------------

<custom_classifiers.weighted_knn instance at 0x105ac0f38>

Accuracy: 0.90333
Precision: 0.39744
Recall: 0.31000
F1: 0.34831
F2: 0.32427

Total predictions: 1200
True positives:   31
False positives:   47
False negatives:   69
True negatives: 1053

-------------------------

<custom_classifiers.weighted_knn instance at 0x105abff38>

Accuracy: 0.90917
Precision: 0.44156
Recall: 0.34000
F1: 0.38418
F2: 0.35639

Total predictions: 1200
True positives:   34
False positives:   43
False negatives:   66
True negatives: 1057

-------------------------

<custom_classifiers.weighted_knn instance at 0x105ac7f38>

Accuracy: 0.92250
Precision: 0.56863
Recall: 0.29000
F1: 0.38411
F2: 0.32151

Total predictions: 1200
True positives:   29
False positives:   22
False negatives:   71
True negatives: 1078

-------------------------

<custom_classifiers.weighted_knn instance at 0x1059c0f38>

Accuracy: 0.91417
Precision: 0.46809
Recall: 0.22000
F1: 0.29932
F2: 0.24609

Total predictions: 1200
True positives:   22
False positives:   25
False negatives:   78
True negatives: 1075

-------------------------

<custom_classifiers.weighted_knn instance at 0x105ac0f38>

Accuracy: 0.86250
Precision: 0.25564
Recall: 0.34000
F1: 0.29185
F2: 0.31895

Total predictions: 1200
True positives:   34
False positives:   99
False negatives:   66
True negatives: 1001

-------------------------

<custom_classifiers.weighted_knn instance at 0x1059bdf38>

Accuracy: 0.88500
Precision: 0.29787
Recall: 0.28000
F1: 0.28866
F2: 0.28340

Total predictions: 1200
True positives:   28
False positives:   66
False negatives:   72
True negatives: 1034

-------------------------

<custom_classifiers.weighted_knn instance at 0x1059bdf38>

Accuracy: 0.89833
Precision: 0.40179
Recall: 0.45000
F1: 0.42453
F2: 0.43945

Total predictions: 1200
True positives:   45
False positives:   67
False negatives:   55
True negatives: 1033

-------------------------

<custom_classifiers.weighted_knn instance at 0x105abef38>

Accuracy: 0.91083
Precision: 0.46392
Recall: 0.45000
F1: 0.45685
F2: 0.45272

Total predictions: 1200
True positives:   45
False positives:   52
False negatives:   55
True negatives: 1048

-------------------------

<custom_classifiers.weighted_knn instance at 0x1059bff80>

Accuracy: 0.90500
Precision: 0.38710
Recall: 0.24000
F1: 0.29630
F2: 0.25974

Total predictions: 1200
True positives:   24
False positives:   38
False negatives:   76
True negatives: 1062

-------------------------

<custom_classifiers.weighted_knn instance at 0x105acbf80>

Accuracy: 0.90750
Precision: 0.44660
Recall: 0.46000
F1: 0.45320
F2: 0.45726

Total predictions: 1200
True positives:   46
False positives:   57
False negatives:   54
True negatives: 1043

-------------------------

<custom_classifiers.replicator instance at 0x1059bedd0>

Accuracy: 0.90583
Precision: 0.45185
Recall: 0.61000
F1: 0.51915
F2: 0.57009

Total predictions: 1200
True positives:   61
False positives:   74
False negatives:   39
True negatives: 1026

-------------------------

<custom_classifiers.replicator instance at 0x1059bddd0>

Accuracy: 0.88983
Precision: 0.38484
Recall: 0.53800
F1: 0.44871
F2: 0.49833

Total predictions: 12000
True positives:  538
False positives:  860
False negatives:  462
True negatives: 10140

-------------------------

<custom_classifiers.weighted_knn instance at 0x1059bdf38>

Accuracy: 0.89483
Precision: 0.36741
Recall: 0.36300
F1: 0.36519
F2: 0.36387

Total predictions: 12000
True positives:  363
False positives:  625
False negatives:  637
True negatives: 10375

-------------------------

<custom_classifiers.weighted_knn instance at 0x1059bef38>

Accuracy: 0.89658
Precision: 0.38770
Recall: 0.41600
F1: 0.40135
F2: 0.41001

Total predictions: 12000
True positives:  416
False positives:  657
False negatives:  584
True negatives: 10343

-------------------------

<custom_classifiers.weighted_knn instance at 0x1059bdea8>

Accuracy: 0.91083
Precision: 0.46392
Recall: 0.45000
F1: 0.45685
F2: 0.45272

Total predictions: 1200
True positives:   45
False positives:   52
False negatives:   55
True negatives: 1048

-------------------------

<custom_classifiers.weighted_knn instance at 0x1059bdea8>

Accuracy: 0.91083
Precision: 0.46392
Recall: 0.45000
F1: 0.45685
F2: 0.45272

Total predictions: 1200
True positives:   45
False positives:   52
False negatives:   55
True negatives: 1048

-------------------------

<custom_classifiers.replicator instance at 0x1059bddd0>

Accuracy: 0.90583
Precision: 0.45185
Recall: 0.61000
F1: 0.51915
F2: 0.57009

Total predictions: 1200
True positives:   61
False positives:   74
False negatives:   39
True negatives: 1026

-------------------------

<custom_classifiers.replicator instance at 0x105ac0dd0>

Accuracy: 0.90083
Precision: 0.43262
Recall: 0.61000
F1: 0.50622
F2: 0.56377

Total predictions: 1200
True positives:   61
False positives:   80
False negatives:   39
True negatives: 1020

-------------------------

<custom_classifiers.replicator instance at 0x105ac1dd0>

Accuracy: 0.90583
Precision: 0.45185
Recall: 0.61000
F1: 0.51915
F2: 0.57009

Total predictions: 1200
True positives:   61
False positives:   74
False negatives:   39
True negatives: 1026

-------------------------

<custom_classifiers.replicator instance at 0x105ac4dd0>

Accuracy: 0.90833
Precision: 0.45833
Recall: 0.55000
F1: 0.50000
F2: 0.52885

Total predictions: 1200
True positives:   55
False positives:   65
False negatives:   45
True negatives: 1035

-------------------------

<custom_classifiers.replicator instance at 0x105abddd0>

Accuracy: 0.88983
Precision: 0.38484
Recall: 0.53800
F1: 0.44871
F2: 0.49833

Total predictions: 12000
True positives:  538
False positives:  860
False negatives:  462
True negatives: 10140

-------------------------

<custom_classifiers.replicator instance at 0x105ac0dd0>

Accuracy: 0.88983
Precision: 0.38484
Recall: 0.53800
F1: 0.44871
F2: 0.49833

Total predictions: 12000
True positives:  538
False positives:  860
False negatives:  462
True negatives: 10140

-------------------------

<custom_classifiers.weighted_knn instance at 0x1059beea8>

Accuracy: 0.89483
Precision: 0.36741
Recall: 0.36300
F1: 0.36519
F2: 0.36387

Total predictions: 12000
True positives:  363
False positives:  625
False negatives:  637
True negatives: 10375

-------------------------

<custom_classifiers.replicator instance at 0x105abedd0>

Accuracy: 0.88983
Precision: 0.38484
Recall: 0.53800
F1: 0.44871
F2: 0.49833

Total predictions: 12000
True positives:  538
False positives:  860
False negatives:  462
True negatives: 10140

-------------------------

<custom_classifiers.weighted_knn instance at 0x1059bcea8>

Accuracy: 0.89658
Precision: 0.38770
Recall: 0.41600
F1: 0.40135
F2: 0.41001

Total predictions: 12000
True positives:  416
False positives:  657
False negatives:  584
True negatives: 10343

-------------------------

<custom_classifiers.replicator instance at 0x1059d88c0>

Accuracy: 0.81767
Precision: 0.34487
Recall: 0.40850
F1: 0.37400
F2: 0.39396

Total predictions: 15000
True positives:  817
False positives: 1552
False negatives: 1183
True negatives: 11448

-------------------------

LinearSVC(C=1, class_weight='balanced', dual=False, fit_intercept=True,
     intercept_scaling=1, loss='squared_hinge', max_iter=1000,
     multi_class='ovr', penalty='l2', random_state=None, tol=0.0001,
     verbose=0)

Accuracy: 0.41608
Precision: 0.07798
Recall: 0.55500
F1: 0.13675
F2: 0.24962

Total predictions: 12000
True positives:  555
False positives: 6562
False negatives:  445
True negatives: 4438

-------------------------

LinearSVC(C=1, class_weight='balanced', dual=False, fit_intercept=True,
     intercept_scaling=1, loss='squared_hinge', max_iter=1000,
     multi_class='ovr', penalty='l2', random_state=None, tol=0.0001,
     verbose=0)

Accuracy: 0.43667
Precision: 0.08017
Recall: 0.55000
F1: 0.13995
F2: 0.25322

Total predictions: 1200
True positives:   55
False positives:  631
False negatives:   45
True negatives:  469

-------------------------

Pipeline(steps=[('scaler', Normalizer(copy=True, norm='l2')), ('kbest', SelectKBest(k=6, score_func=<function f_classif at 0x10535e5f0>)), ('pca', PCA(copy=True, n_components=4, whiten=False)), ('clf', LinearSVC(C=1, class_weight='balanced', dual=False, fit_intercept=True,
     intercept_scaling=1, loss='squared_hinge', max_iter=1000,
     multi_class='ovr', penalty='l2', random_state=None, tol=0.0001,
     verbose=0))])

Accuracy: 0.59917
Precision: 0.11670
Recall: 0.58000
F1: 0.19430
F2: 0.32330

Total predictions: 1200
True positives:   58
False positives:  439
False negatives:   42
True negatives:  661

-------------------------

Pipeline(steps=[('scaler', Normalizer(copy=True, norm='l2')), ('kbest', SelectKBest(k='all', score_func=<function f_classif at 0x10535a5f0>)), ('pca', PCA(copy=True, n_components=5, whiten=False)), ('clf', LinearSVC(C=1, class_weight='balanced', dual=False, fit_intercept=True,
     intercept_scaling=1, loss='squared_hinge', max_iter=1000,
     multi_class='ovr', penalty='l2', random_state=None, tol=0.0001,
     verbose=0))])

Accuracy: 0.60833
Precision: 0.12851
Recall: 0.64000
F1: 0.21405
F2: 0.35635

Total predictions: 1200
True positives:   64
False positives:  434
False negatives:   36
True negatives:  666

-------------------------

Pipeline(steps=[('scaler', Normalizer(copy=True, norm='l2')), ('kbest', SelectKBest(k='all', score_func=<function f_classif at 0x1053535f0>)), ('pca', PCA(copy=True, n_components=5, whiten=False)), ('clf', LinearSVC(C=1, class_weight='balanced', dual=False, fit_intercept=True,
     intercept_scaling=1, loss='squared_hinge', max_iter=1000,
     multi_class='ovr', penalty='l2', random_state=None, tol=0.0001,
     verbose=0))])

Accuracy: 0.61417
Precision: 0.15029
Recall: 0.78000
F1: 0.25202
F2: 0.42437

Total predictions: 1200
True positives:   78
False positives:  441
False negatives:   22
True negatives:  659

-------------------------

<custom_classifiers.weighted_knn instance at 0x105abff38>

Accuracy: 0.91167
Precision: 0.44000
Recall: 0.22000
F1: 0.29333
F2: 0.24444

Total predictions: 1200
True positives:   22
False positives:   28
False negatives:   78
True negatives: 1072

-------------------------

KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='uniform')

Accuracy: 0.91167
Precision: 0.44000
Recall: 0.22000
F1: 0.29333
F2: 0.24444

Total predictions: 1200
True positives:   22
False positives:   28
False negatives:   78
True negatives: 1072

-------------------------

<custom_classifiers.weighted_knn instance at 0x105abdf38>

Accuracy: 0.89483
Precision: 0.36741
Recall: 0.36300
F1: 0.36519
F2: 0.36387

Total predictions: 12000
True positives:  363
False positives:  625
False negatives:  637
True negatives: 10375

-------------------------

<custom_classifiers.weighted_knn instance at 0x1059bdf38>

Accuracy: 0.89658
Precision: 0.38770
Recall: 0.41600
F1: 0.40135
F2: 0.41001

Total predictions: 12000
True positives:  416
False positives:  657
False negatives:  584
True negatives: 10343

-------------------------

<custom_classifiers.weighted_knn instance at 0x105abff38>

Accuracy: 0.91283
Precision: 0.44820
Recall: 0.19900
F1: 0.27562
F2: 0.22390

Total predictions: 12000
True positives:  199
False positives:  245
False negatives:  801
True negatives: 10755

-------------------------

<custom_classifiers.replicator instance at 0x105ac0dd0>

Accuracy: 0.88983
Precision: 0.38484
Recall: 0.53800
F1: 0.44871
F2: 0.49833

Total predictions: 12000
True positives:  538
False positives:  860
False negatives:  462
True negatives: 10140

-------------------------

<custom_classifiers.weighted_knn instance at 0x1059bcf80>

Accuracy: 0.91167
Precision: 0.44000
Recall: 0.22000
F1: 0.29333
F2: 0.24444

Total predictions: 1200
True positives:   22
False positives:   28
False negatives:   78
True negatives: 1072

-------------------------

<custom_classifiers.replicator instance at 0x105ac1dd0>

Accuracy: 0.90583
Precision: 0.45185
Recall: 0.61000
F1: 0.51915
F2: 0.57009

Total predictions: 1200
True positives:   61
False positives:   74
False negatives:   39
True negatives: 1026

-------------------------

<custom_classifiers.replicator instance at 0x1059bcdd0>

Accuracy: 0.62833
Precision: 0.14980
Recall: 0.74000
F1: 0.24916
F2: 0.41387

Total predictions: 1200
True positives:   74
False positives:  420
False negatives:   26
True negatives:  680

-------------------------

<custom_classifiers.replicator instance at 0x1059bcdd0>

Accuracy: 0.64500
Precision: 0.15612
Recall: 0.74000
F1: 0.25784
F2: 0.42334

Total predictions: 1200
True positives:   74
False positives:  400
False negatives:   26
True negatives:  700

-------------------------

<custom_classifiers.replicator instance at 0x1059bddd0>

Accuracy: 0.62833
Precision: 0.14980
Recall: 0.74000
F1: 0.24916
F2: 0.41387

Total predictions: 1200
True positives:   74
False positives:  420
False negatives:   26
True negatives:  680

-------------------------

<custom_classifiers.replicator instance at 0x1059bddd0>

Accuracy: 0.58833
Precision: 0.13653
Recall: 0.74000
F1: 0.23053
F2: 0.39278

Total predictions: 1200
True positives:   74
False positives:  468
False negatives:   26
True negatives:  632

-------------------------

<custom_classifiers.replicator instance at 0x1059bcdd0>

Accuracy: 0.72750
Precision: 0.19733
Recall: 0.74000
F1: 0.31158
F2: 0.47742

Total predictions: 1200
True positives:   74
False positives:  301
False negatives:   26
True negatives:  799

-------------------------

<custom_classifiers.replicator instance at 0x1059bcdd0>

Accuracy: 0.72750
Precision: 0.19733
Recall: 0.74000
F1: 0.31158
F2: 0.47742

Total predictions: 1200
True positives:   74
False positives:  301
False negatives:   26
True negatives:  799

-------------------------

<custom_classifiers.replicator instance at 0x105abddd0>

Accuracy: 0.72750
Precision: 0.19733
Recall: 0.74000
F1: 0.31158
F2: 0.47742

Total predictions: 1200
True positives:   74
False positives:  301
False negatives:   26
True negatives:  799

-------------------------

<custom_classifiers.replicator instance at 0x1059bddd0>

Accuracy: 0.74833
Precision: 0.20977
Recall: 0.73000
F1: 0.32589
F2: 0.48797

Total predictions: 1200
True positives:   73
False positives:  275
False negatives:   27
True negatives:  825

-------------------------

<custom_classifiers.replicator instance at 0x105ac5dd0>

Accuracy: 0.71167
Precision: 0.18135
Recall: 0.70000
F1: 0.28807
F2: 0.44529

Total predictions: 1200
True positives:   70
False positives:  316
False negatives:   30
True negatives:  784

-------------------------

<custom_classifiers.replicator instance at 0x1059bddd0>

Accuracy: 0.80417
Precision: 0.20264
Recall: 0.46000
F1: 0.28135
F2: 0.36683

Total predictions: 1200
True positives:   46
False positives:  181
False negatives:   54
True negatives:  919

-------------------------

<custom_classifiers.replicator instance at 0x105ac1dd0>

Accuracy: 0.80417
Precision: 0.20264
Recall: 0.46000
F1: 0.28135
F2: 0.36683

Total predictions: 1200
True positives:   46
False positives:  181
False negatives:   54
True negatives:  919

-------------------------

<custom_classifiers.replicator instance at 0x105ac0dd0>

Accuracy: 0.90583
Precision: 0.45185
Recall: 0.61000
F1: 0.51915
F2: 0.57009

Total predictions: 1200
True positives:   61
False positives:   74
False negatives:   39
True negatives: 1026

-------------------------

SplitterS params:
certainty: 0.7
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': True, 'alpha': 0.01, 'class_weight': 'balanced', 'solver': 'auto'}

<custom_classifiers.splitter instance at 0x10585fe18>

Accuracy: 0.77417
Precision: 0.15385
Recall: 0.38000
F1: 0.21902
F2: 0.29366

Total predictions: 1200
True positives:   38
False positives:  209
False negatives:   62
True negatives:  891

-------------------------

RidgeClassifier(alpha=1.0, class_weight='balanced', copy_X=True,
        fit_intercept=True, max_iter=None, normalize=False,
        random_state=None, solver='auto', tol=0.001)

Accuracy: 0.71917
Precision: 0.14627
Recall: 0.49000
F1: 0.22529
F2: 0.33333

Total predictions: 1200
True positives:   49
False positives:  286
False negatives:   51
True negatives:  814

-------------------------

RidgeClassifier(alpha=1.0, class_weight='balanced', copy_X=True,
        fit_intercept=True, max_iter=None, normalize=True,
        random_state=None, solver='auto', tol=0.001)

Accuracy: 0.76167
Precision: 0.19000
Recall: 0.57000
F1: 0.28500
F2: 0.40714

Total predictions: 1200
True positives:   57
False positives:  243
False negatives:   43
True negatives:  857

-------------------------

RidgeClassifier(alpha=0.001, class_weight='balanced', copy_X=True,
        fit_intercept=True, max_iter=None, normalize=True,
        random_state=None, solver='auto', tol=0.001)

Accuracy: 0.73667
Precision: 0.15605
Recall: 0.49000
F1: 0.23671
F2: 0.34314

Total predictions: 1200
True positives:   49
False positives:  265
False negatives:   51
True negatives:  835

-------------------------

RidgeClassifier(alpha=0.01, class_weight='balanced', copy_X=True,
        fit_intercept=True, max_iter=None, normalize=True,
        random_state=None, solver='auto', tol=0.001)

Accuracy: 0.74083
Precision: 0.15410
Recall: 0.47000
F1: 0.23210
F2: 0.33333

Total predictions: 1200
True positives:   47
False positives:  258
False negatives:   53
True negatives:  842

-------------------------

<custom_classifiers.weighted_knn instance at 0x10585fea8>

Accuracy: 0.91083
Precision: 0.46392
Recall: 0.45000
F1: 0.45685
F2: 0.45272

Total predictions: 1200
True positives:   45
False positives:   52
False negatives:   55
True negatives: 1048

-------------------------

<custom_classifiers.weighted_knn instance at 0x10585fef0>

Accuracy: 0.90750
Precision: 0.44660
Recall: 0.46000
F1: 0.45320
F2: 0.45726

Total predictions: 1200
True positives:   46
False positives:   57
False negatives:   54
True negatives: 1043

-------------------------

<custom_classifiers.weighted_knn instance at 0x10585ff38>

Accuracy: 0.91167
Precision: 0.44000
Recall: 0.22000
F1: 0.29333
F2: 0.24444

Total predictions: 1200
True positives:   22
False positives:   28
False negatives:   78
True negatives: 1072

-------------------------

<custom_classifiers.weighted_knn instance at 0x10596cf38>

Accuracy: 0.90750
Precision: 0.44660
Recall: 0.46000
F1: 0.45320
F2: 0.45726

Total predictions: 1200
True positives:   46
False positives:   57
False negatives:   54
True negatives: 1043

-------------------------

<custom_classifiers.weighted_knn instance at 0x105863f38>

Accuracy: 0.90917
Precision: 0.41509
Recall: 0.22000
F1: 0.28758
F2: 0.24283

Total predictions: 1200
True positives:   22
False positives:   31
False negatives:   78
True negatives: 1069

-------------------------

<custom_classifiers.weighted_knn instance at 0x105965f38>

Accuracy: 0.89583
Precision: 0.32877
Recall: 0.24000
F1: 0.27746
F2: 0.25370

Total predictions: 1200
True positives:   24
False positives:   49
False negatives:   76
True negatives: 1051

-------------------------

<custom_classifiers.weighted_knn instance at 0x105863ef0>

Accuracy: 0.89833
Precision: 0.40179
Recall: 0.45000
F1: 0.42453
F2: 0.43945

Total predictions: 1200
True positives:   45
False positives:   67
False negatives:   55
True negatives: 1033

-------------------------

<custom_classifiers.weighted_knn instance at 0x105979ef0>

Accuracy: 0.90333
Precision: 0.39744
Recall: 0.31000
F1: 0.34831
F2: 0.32427

Total predictions: 1200
True positives:   31
False positives:   47
False negatives:   69
True negatives: 1053

-------------------------

<custom_classifiers.weighted_knn instance at 0x10596cef0>

Accuracy: 0.91083
Precision: 0.46392
Recall: 0.45000
F1: 0.45685
F2: 0.45272

Total predictions: 1200
True positives:   45
False positives:   52
False negatives:   55
True negatives: 1048

-------------------------

<custom_classifiers.weighted_knn instance at 0x105864ef0>

Accuracy: 0.89483
Precision: 0.36741
Recall: 0.36300
F1: 0.36519
F2: 0.36387

Total predictions: 12000
True positives:  363
False positives:  625
False negatives:  637
True negatives: 10375

-------------------------

<custom_classifiers.weighted_knn instance at 0x105869f38>

Accuracy: 0.89658
Precision: 0.38770
Recall: 0.41600
F1: 0.40135
F2: 0.41001

Total predictions: 12000
True positives:  416
False positives:  657
False negatives:  584
True negatives: 10343

-------------------------

SplitterS params:
certainty: 0.6
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 10, 'weights': 'uniform', 'leaf_size': 30, 'algorithm': 'auto', 'p': 2}

<custom_classifiers.splitter instance at 0x105185518>

Accuracy: 0.80525
Precision: 0.24688
Recall: 0.65200
F1: 0.35814
F2: 0.49089

Total predictions: 12000
True positives:  652
False positives: 1989
False negatives:  348
True negatives: 9011

-------------------------

Replicator params:
dominant_class_prevalence: 2
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 10, 'weights': 'uniform', 'leaf_size': 30, 'algorithm': 'auto', 'p': 2}

Replicator params:
dominant_class_prevalence: 2
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 10, 'weights': 'uniform', 'leaf_size': 30, 'algorithm': 'auto', 'p': 2}

Replicator params:
dominant_class_prevalence: 2
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 5, 'weights': 'uniform', 'leaf_size': 30, 'algorithm': 'auto', 'p': 2}

<custom_classifiers.replicator instance at 0x105975ea8>

Accuracy: 0.91667
Precision: 0.50000
Recall: 0.03000
F1: 0.05660
F2: 0.03695

Total predictions: 1200
True positives:    3
False positives:    3
False negatives:   97
True negatives: 1097

-------------------------

Replicator params:
dominant_class_prevalence: 2
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 10, 'weights': 'uniform', 'leaf_size': 30, 'algorithm': 'auto', 'p': 2}

Replicator params:
dominant_class_prevalence: 2
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 10, 'weights': 'distance', 'leaf_size': 30, 'algorithm': 'auto', 'p': 2}

SplitterS params:
certainty: 0.6
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 10, 'weights': 'uniform', 'leaf_size': 30, 'algorithm': 'auto', 'p': 2}

<custom_classifiers.splitter instance at 0x10515d518>

Accuracy: 0.80500
Precision: 0.24812
Recall: 0.66000
F1: 0.36066
F2: 0.49550

Total predictions: 1200
True positives:   66
False positives:  200
False negatives:   34
True negatives:  900

-------------------------

Replicator params:
dominant_class_prevalence: 2
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 10, 'weights': 'distance', 'leaf_size': 30, 'algorithm': 'auto', 'p': 2}

Replicator params:
dominant_class_prevalence: 3
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 10, 'weights': 'distance', 'leaf_size': 30, 'algorithm': 'auto', 'p': 2}

Replicator params:
dominant_class_prevalence: 4
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 10, 'weights': 'distance', 'leaf_size': 30, 'algorithm': 'auto', 'p': 2}

Replicator params:
dominant_class_prevalence: 1
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 10, 'weights': 'distance', 'leaf_size': 30, 'algorithm': 'auto', 'p': 2}

<custom_classifiers.replicator instance at 0x105864ea8>

Accuracy: 0.91333
Precision: 0.30000
Recall: 0.03000
F1: 0.05455
F2: 0.03659

Total predictions: 1200
True positives:    3
False positives:    7
False negatives:   97
True negatives: 1093

-------------------------

Replicator params:
dominant_class_prevalence: 1
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 10, 'weights': 'distance', 'leaf_size': 30, 'algorithm': 'auto', 'p': 2}

<custom_classifiers.replicator instance at 0x105979ea8>

Accuracy: 0.91708
Precision: 0.52336
Recall: 0.05600
F1: 0.10117
F2: 0.06818

Total predictions: 12000
True positives:   56
False positives:   51
False negatives:  944
True negatives: 10949

-------------------------

Replicator params:
dominant_class_prevalence: 2
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 10, 'weights': 'uniform', 'leaf_size': 30, 'algorithm': 'auto', 'p': 2}

Replicator params:
dominant_class_prevalence: 1
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 10, 'weights': 'uniform', 'leaf_size': 30, 'algorithm': 'auto', 'p': 2}

<custom_classifiers.replicator instance at 0x105863ea8>

Accuracy: 0.91700
Precision: 0.55556
Recall: 0.02000
F1: 0.03861
F2: 0.02478

Total predictions: 12000
True positives:   20
False positives:   16
False negatives:  980
True negatives: 10984

-------------------------

Replicator params:
dominant_class_prevalence: 2
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 10, 'weights': 'uniform', 'leaf_size': 30, 'algorithm': 'auto', 'p': 2}

Replicator params:
dominant_class_prevalence: 2
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 10, 'weights': 'uniform', 'leaf_size': 30, 'algorithm': 'auto', 'p': 2}

Replicator params:
dominant_class_prevalence: 2
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'p': 2, 'weights': 'distance', 'n_neighbors': 10}

Replicator params:
dominant_class_prevalence: 2
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 9, 'weights': 'distance'}

Replicator params:
dominant_class_prevalence: 2
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 5, 'weights': 'distance'}

<custom_classifiers.replicator instance at 0x1059bfd88>

Accuracy: 0.90917
Precision: 0.20000
Recall: 0.03000
F1: 0.05217
F2: 0.03614

Total predictions: 1200
True positives:    3
False positives:   12
False negatives:   97
True negatives: 1088

-------------------------

Replicator params:
dominant_class_prevalence: 1
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': True, 'alpha': 0.01, 'class_weight': 'balanced', 'solver': 'auto'}

<custom_classifiers.replicator instance at 0x1059bcd88>

Accuracy: 0.77083
Precision: 0.17228
Recall: 0.46000
F1: 0.25068
F2: 0.34483

Total predictions: 1200
True positives:   46
False positives:  221
False negatives:   54
True negatives:  879

-------------------------

Replicator params:
dominant_class_prevalence: 1
clf_class: <class 'sklearn.linear_model.ridge.RidgeClassifier'>
clf_params: {'normalize': True, 'alpha': 0.001, 'class_weight': 'balanced', 'solver': 'auto'}

<custom_classifiers.replicator instance at 0x1059bcd88>

Accuracy: 0.75917
Precision: 0.15636
Recall: 0.43000
F1: 0.22933
F2: 0.31852

Total predictions: 1200
True positives:   43
False positives:  232
False negatives:   57
True negatives:  868

-------------------------

Replicator params:
dominant_class_prevalence: 2
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 5, 'weights': 'distance'}

<custom_classifiers.replicator instance at 0x1059bdd88>

Accuracy: 0.91167
Precision: 0.28571
Recall: 0.04000
F1: 0.07018
F2: 0.04831

Total predictions: 1200
True positives:    4
False positives:   10
False negatives:   96
True negatives: 1090

-------------------------

SplitterS params:
certainty: 0.6
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 10, 'weights': 'uniform', 'leaf_size': 30, 'algorithm': 'auto', 'p': 2}

<custom_classifiers.splitter instance at 0x105abed40>

Accuracy: 0.80917
Precision: 0.25660
Recall: 0.68000
F1: 0.37260
F2: 0.51128

Total predictions: 1200
True positives:   68
False positives:  197
False negatives:   32
True negatives:  903

-------------------------

SplitterS params:
certainty: 0.65
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 10, 'weights': 'uniform', 'leaf_size': 30, 'algorithm': 'auto', 'p': 2}

<custom_classifiers.splitter instance at 0x1059bcd40>

Accuracy: 0.81000
Precision: 0.25573
Recall: 0.67000
F1: 0.37017
F2: 0.50604

Total predictions: 1200
True positives:   67
False positives:  195
False negatives:   33
True negatives:  905

-------------------------

SplitterS params:
certainty: 0.7
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 10, 'weights': 'uniform', 'leaf_size': 30, 'algorithm': 'auto', 'p': 2}

<custom_classifiers.splitter instance at 0x1059bdd40>

Accuracy: 0.81833
Precision: 0.25417
Recall: 0.61000
F1: 0.35882
F2: 0.47656

Total predictions: 1200
True positives:   61
False positives:  179
False negatives:   39
True negatives:  921

-------------------------

SplitterS params:
certainty: 0.5
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 10, 'weights': 'uniform', 'leaf_size': 30, 'algorithm': 'auto', 'p': 2}

<custom_classifiers.splitter instance at 0x1059bcd40>

Accuracy: 0.80250
Precision: 0.25623
Recall: 0.72000
F1: 0.37795
F2: 0.52863

Total predictions: 1200
True positives:   72
False positives:  209
False negatives:   28
True negatives:  891

-------------------------

SplitterS params:
certainty: 0.55
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 10, 'weights': 'uniform', 'leaf_size': 30, 'algorithm': 'auto', 'p': 2}

<custom_classifiers.splitter instance at 0x105ac0d40>

Accuracy: 0.80167
Precision: 0.25532
Recall: 0.72000
F1: 0.37696
F2: 0.52786

Total predictions: 1200
True positives:   72
False positives:  210
False negatives:   28
True negatives:  890

-------------------------

SplitterS params:
certainty: 0.45
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 10, 'weights': 'uniform', 'leaf_size': 30, 'algorithm': 'auto', 'p': 2}

<custom_classifiers.splitter instance at 0x1059bcd40>

Accuracy: 0.79917
Precision: 0.25263
Recall: 0.72000
F1: 0.37403
F2: 0.52555

Total predictions: 1200
True positives:   72
False positives:  213
False negatives:   28
True negatives:  887

-------------------------

SplitterS params:
certainty: 0.4
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 10, 'weights': 'uniform', 'leaf_size': 30, 'algorithm': 'auto', 'p': 2}

<custom_classifiers.splitter instance at 0x1059bdd40>

Accuracy: 0.78667
Precision: 0.24342
Recall: 0.74000
F1: 0.36634
F2: 0.52557

Total predictions: 1200
True positives:   74
False positives:  230
False negatives:   26
True negatives:  870

-------------------------

SplitterS params:
certainty: 0.5
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 10, 'weights': 'uniform', 'leaf_size': 30, 'algorithm': 'auto', 'p': 2}

<custom_classifiers.splitter instance at 0x1059bdd40>

Accuracy: 0.79667
Precision: 0.24825
Recall: 0.71000
F1: 0.36788
F2: 0.51749

Total predictions: 1200
True positives:   71
False positives:  215
False negatives:   29
True negatives:  885

-------------------------

KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='uniform')

Accuracy: 0.91167
Precision: 0.44000
Recall: 0.22000
F1: 0.29333
F2: 0.24444

Total predictions: 1200
True positives:   22
False positives:   28
False negatives:   78
True negatives: 1072

-------------------------

KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=6, p=2,
           weights='uniform')

Accuracy: 0.92167
Precision: 1.00000
Recall: 0.06000
F1: 0.11321
F2: 0.07389

Total predictions: 1200
True positives:    6
False positives:    0
False negatives:   94
True negatives: 1100

-------------------------

KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=4, p=2,
           weights='uniform')

Accuracy: 0.91333
Precision: 0.41667
Recall: 0.10000
F1: 0.16129
F2: 0.11792

Total predictions: 1200
True positives:   10
False positives:   14
False negatives:   90
True negatives: 1086

-------------------------

KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=3, p=2,
           weights='uniform')

Accuracy: 0.90583
Precision: 0.38596
Recall: 0.22000
F1: 0.28025
F2: 0.24070

Total predictions: 1200
True positives:   22
False positives:   35
False negatives:   78
True negatives: 1065

-------------------------

KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=2, p=2,
           weights='uniform')

Accuracy: 0.91083
Precision: 0.41026
Recall: 0.16000
F1: 0.23022
F2: 0.18223

Total predictions: 1200
True positives:   16
False positives:   23
False negatives:   84
True negatives: 1077

-------------------------

KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=2, p=2,
           weights='distance')

Accuracy: 0.87750
Precision: 0.27184
Recall: 0.28000
F1: 0.27586
F2: 0.27833

Total predictions: 1200
True positives:   28
False positives:   75
False negatives:   72
True negatives: 1025

-------------------------

KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=3, p=2,
           weights='distance')

Accuracy: 0.90083
Precision: 0.34921
Recall: 0.22000
F1: 0.26994
F2: 0.23758

Total predictions: 1200
True positives:   22
False positives:   41
False negatives:   78
True negatives: 1059

-------------------------

KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=4, p=2,
           weights='distance')

Accuracy: 0.90083
Precision: 0.34921
Recall: 0.22000
F1: 0.26994
F2: 0.23758

Total predictions: 1200
True positives:   22
False positives:   41
False negatives:   78
True negatives: 1059

-------------------------

KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')

Accuracy: 0.91083
Precision: 0.43137
Recall: 0.22000
F1: 0.29139
F2: 0.24390

Total predictions: 1200
True positives:   22
False positives:   29
False negatives:   78
True negatives: 1071

-------------------------

KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=10, p=2,
           weights='distance')

Accuracy: 0.91750
Precision: 1.00000
Recall: 0.01000
F1: 0.01980
F2: 0.01247

Total predictions: 1200
True positives:    1
False positives:    0
False negatives:   99
True negatives: 1100

-------------------------

Replicator params:
dominant_class_prevalence: 2
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 5, 'weights': 'distance'}

<custom_classifiers.replicator instance at 0x1059bcd88>

Accuracy: 0.90917
Precision: 0.09091
Recall: 0.01000
F1: 0.01802
F2: 0.01217

Total predictions: 1200
True positives:    1
False positives:   10
False negatives:   99
True negatives: 1090

-------------------------

Replicator params:
dominant_class_prevalence: 2
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 5, 'weights': 'uniform'}

Replicator params:
dominant_class_prevalence: 2
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 4, 'weights': 'uniform'}

<custom_classifiers.replicator instance at 0x1059c2d88>

Accuracy: 0.91417
Precision: 0.20000
Recall: 0.01000
F1: 0.01905
F2: 0.01235

Total predictions: 1200
True positives:    1
False positives:    4
False negatives:   99
True negatives: 1096

-------------------------

Replicator params:
dominant_class_prevalence: 2
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 4, 'weights': 'uniform'}

SplitterS params:
certainty: 0.5
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 10, 'weights': 'uniform', 'leaf_size': 30, 'algorithm': 'auto', 'p': 2}

<custom_classifiers.splitter instance at 0x1059bcd40>

Accuracy: 0.79833
Precision: 0.24643
Recall: 0.69000
F1: 0.36316
F2: 0.50735

Total predictions: 1200
True positives:   69
False positives:  211
False negatives:   31
True negatives:  889

-------------------------

SplitterS params:
certainty: 0.5
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 10, 'weights': 'uniform', 'leaf_size': 30, 'algorithm': 'auto', 'p': 2}

<custom_classifiers.splitter instance at 0x1059bcd40>

Accuracy: 0.79658
Precision: 0.24568
Recall: 0.69600
F1: 0.36316
F2: 0.50929

Total predictions: 12000
True positives:  696
False positives: 2137
False negatives:  304
True negatives: 8863

-------------------------

SplitterS params:
certainty: 0.5
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 10, 'weights': 'uniform', 'leaf_size': 30, 'algorithm': 'auto', 'p': 2}

<custom_classifiers.splitter instance at 0x1059bcd40>

Accuracy: 0.79917
Precision: 0.25088
Recall: 0.71000
F1: 0.37076
F2: 0.51977

Total predictions: 1200
True positives:   71
False positives:  212
False negatives:   29
True negatives:  888

-------------------------

SplitterS params:
certainty: 0.5
max_imbalance: 2
clf_mode: 0
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 10, 'weights': 'uniform', 'leaf_size': 30, 'algorithm': 'auto', 'p': 2}

<custom_classifiers.splitter instance at 0x1059bcd40>

Accuracy: 0.87917
Precision: 0.26316
Recall: 0.25000
F1: 0.25641
F2: 0.25253

Total predictions: 1200
True positives:   25
False positives:   70
False negatives:   75
True negatives: 1030

-------------------------

SplitterS params:
certainty: 0.5
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 10, 'weights': 'uniform', 'leaf_size': 30, 'algorithm': 'auto', 'p': 2}

<custom_classifiers.splitter instance at 0x1059bcd40>

Accuracy: 0.80250
Precision: 0.25965
Recall: 0.74000
F1: 0.38442
F2: 0.54015

Total predictions: 1200
True positives:   74
False positives:  211
False negatives:   26
True negatives:  889

-------------------------

SplitterS params:
certainty: 0.6
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 10, 'weights': 'uniform', 'leaf_size': 30, 'algorithm': 'auto', 'p': 2}

<custom_classifiers.splitter instance at 0x1059bcd40>

Accuracy: 0.80917
Precision: 0.25843
Recall: 0.69000
F1: 0.37602
F2: 0.51724

Total predictions: 1200
True positives:   69
False positives:  198
False negatives:   31
True negatives:  902

-------------------------

SplitterS params:
certainty: 0.6
max_imbalance: 2
clf_mode: 0
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 10, 'weights': 'uniform', 'leaf_size': 30, 'algorithm': 'auto', 'p': 2}

<custom_classifiers.splitter instance at 0x105ac0d40>

Accuracy: 0.88083
Precision: 0.27835
Recall: 0.27000
F1: 0.27411
F2: 0.27163

Total predictions: 1200
True positives:   27
False positives:   70
False negatives:   73
True negatives: 1030

-------------------------

SplitterS params:
certainty: 0.6
max_imbalance: 2
clf_mode: 0
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 5, 'weights': 'uniform', 'leaf_size': 30, 'algorithm': 'auto', 'p': 2}

<custom_classifiers.splitter instance at 0x105abfd40>

Accuracy: 0.88417
Precision: 0.35556
Recall: 0.48000
F1: 0.40851
F2: 0.44860

Total predictions: 1200
True positives:   48
False positives:   87
False negatives:   52
True negatives: 1013

-------------------------

SplitterS params:
certainty: 0.6
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 5, 'weights': 'uniform', 'leaf_size': 30, 'algorithm': 'auto', 'p': 2}

<custom_classifiers.splitter instance at 0x1059c0d40>

Accuracy: 0.73083
Precision: 0.20424
Recall: 0.77000
F1: 0.32285
F2: 0.49550

Total predictions: 1200
True positives:   77
False positives:  300
False negatives:   23
True negatives:  800

-------------------------

SplitterS params:
certainty: 0.6
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 5, 'weights': 'uniform', 'leaf_size': 30, 'algorithm': 'auto', 'p': 2}

<custom_classifiers.splitter instance at 0x1059c0d40>

Accuracy: 0.73992
Precision: 0.20841
Recall: 0.75800
F1: 0.32694
F2: 0.49627

Total predictions: 12000
True positives:  758
False positives: 2879
False negatives:  242
True negatives: 8121

-------------------------

Replicator params:
dominant_class_prevalence: 2
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 4, 'weights': 'uniform'}

Replicator params:
dominant_class_prevalence: 2
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 4, 'weights': 'uniform'}

<custom_classifiers.replicator instance at 0x105ac5d88>

Accuracy: 0.91575
Precision: 0.33333
Recall: 0.01100
F1: 0.02130
F2: 0.01364

Total predictions: 12000
True positives:   11
False positives:   22
False negatives:  989
True negatives: 10978

-------------------------

Replicator params:
dominant_class_prevalence: 2
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 10, 'weights': 'uniform'}

Replicator params:
dominant_class_prevalence: 2
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 9, 'weights': 'uniform'}

Replicator params:
dominant_class_prevalence: 2
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 8, 'weights': 'uniform'}

Replicator params:
dominant_class_prevalence: 2
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 7, 'weights': 'uniform'}

<custom_classifiers.replicator instance at 0x1059bdd88>

Accuracy: 0.91833
Precision: 1.00000
Recall: 0.02000
F1: 0.03922
F2: 0.02488

Total predictions: 1200
True positives:    2
False positives:    0
False negatives:   98
True negatives: 1100

-------------------------

Replicator params:
dominant_class_prevalence: 2
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 5, 'weights': 'uniform'}

<custom_classifiers.replicator instance at 0x1059bcd88>

Accuracy: 0.91417
Precision: 0.28571
Recall: 0.02000
F1: 0.03738
F2: 0.02457

Total predictions: 1200
True positives:    2
False positives:    5
False negatives:   98
True negatives: 1095

-------------------------

Replicator params:
dominant_class_prevalence: 2
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 5, 'weights': 'distance'}

<custom_classifiers.replicator instance at 0x105abed88>

Accuracy: 0.91417
Precision: 0.28571
Recall: 0.02000
F1: 0.03738
F2: 0.02457

Total predictions: 1200
True positives:    2
False positives:    5
False negatives:   98
True negatives: 1095

-------------------------

Replicator params:
dominant_class_prevalence: 2
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 5, 'weights': 'uniform'}

<custom_classifiers.replicator instance at 0x105b53758>

Accuracy: 0.80417
Precision: 0.20264
Recall: 0.46000
F1: 0.28135
F2: 0.36683

Total predictions: 1200
True positives:   46
False positives:  181
False negatives:   54
True negatives:  919

-------------------------

Replicator params:
dominant_class_prevalence: 2
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 5, 'weights': 'uniform'}

<custom_classifiers.replicator instance at 0x1059bdd88>

Accuracy: 0.80417
Precision: 0.20264
Recall: 0.46000
F1: 0.28135
F2: 0.36683

Total predictions: 1200
True positives:   46
False positives:  181
False negatives:   54
True negatives:  919

-------------------------

Replicator params:
dominant_class_prevalence: 1
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 5, 'weights': 'uniform', 'leaf_size': 30, 'algorithm': 'auto', 'p': 2}

<custom_classifiers.replicator instance at 0x105966ea8>

Accuracy: 0.80125
Precision: 0.20419
Recall: 0.47800
F1: 0.28614
F2: 0.37691

Total predictions: 12000
True positives:  478
False positives: 1863
False negatives:  522
True negatives: 9137

-------------------------

Replicator params:
dominant_class_prevalence: 2
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 6, 'weights': 'uniform', 'leaf_size': 30, 'algorithm': 'auto', 'p': 2}

<custom_classifiers.replicator instance at 0x105863ea8>

Accuracy: 0.80417
Precision: 0.20264
Recall: 0.46000
F1: 0.28135
F2: 0.36683

Total predictions: 1200
True positives:   46
False positives:  181
False negatives:   54
True negatives:  919

-------------------------

Replicator params:
dominant_class_prevalence: 2
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 10, 'weights': 'uniform', 'leaf_size': 30, 'algorithm': 'auto', 'p': 2}

<custom_classifiers.replicator instance at 0x105863ea8>

Accuracy: 0.90583
Precision: 0.45185
Recall: 0.61000
F1: 0.51915
F2: 0.57009

Total predictions: 1200
True positives:   61
False positives:   74
False negatives:   39
True negatives: 1026

-------------------------

Replicator params:
dominant_class_prevalence: 2
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 10, 'weights': 'uniform', 'leaf_size': 30, 'algorithm': 'auto', 'p': 2}

<custom_classifiers.replicator instance at 0x105965ea8>

Accuracy: 0.88983
Precision: 0.38484
Recall: 0.53800
F1: 0.44871
F2: 0.49833

Total predictions: 12000
True positives:  538
False positives:  860
False negatives:  462
True negatives: 10140

-------------------------

<custom_classifiers.weighted_knn instance at 0x105864ef0>

Accuracy: 0.89658
Precision: 0.38770
Recall: 0.41600
F1: 0.40135
F2: 0.41001

Total predictions: 12000
True positives:  416
False positives:  657
False negatives:  584
True negatives: 10343

-------------------------

<custom_classifiers.weighted_knn instance at 0x105965ef0>

Accuracy: 0.89658
Precision: 0.38770
Recall: 0.41600
F1: 0.40135
F2: 0.41001

Total predictions: 12000
True positives:  416
False positives:  657
False negatives:  584
True negatives: 10343

-------------------------

Replicator params:
dominant_class_prevalence: 2
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 10, 'weights': 'uniform', 'leaf_size': 30, 'algorithm': 'auto', 'p': 2}

<custom_classifiers.replicator instance at 0x105864ea8>

Accuracy: 0.88983
Precision: 0.38484
Recall: 0.53800
F1: 0.44871
F2: 0.49833

Total predictions: 12000
True positives:  538
False positives:  860
False negatives:  462
True negatives: 10140

-------------------------

Replicator params:
dominant_class_prevalence: 2
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 10, 'weights': 'distance'}

<custom_classifiers.replicator instance at 0x105864ea8>

Accuracy: 0.88033
Precision: 0.35601
Recall: 0.53900
F1: 0.42880
F2: 0.48876

Total predictions: 12000
True positives:  539
False positives:  975
False negatives:  461
True negatives: 10025

-------------------------

Replicator params:
dominant_class_prevalence: 2
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 9, 'weights': 'uniform'}

<custom_classifiers.replicator instance at 0x105966ea8>

Accuracy: 0.88983
Precision: 0.38484
Recall: 0.53800
F1: 0.44871
F2: 0.49833

Total predictions: 12000
True positives:  538
False positives:  860
False negatives:  462
True negatives: 10140

-------------------------

Replicator params:
dominant_class_prevalence: 2
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 8, 'weights': 'uniform'}

<custom_classifiers.replicator instance at 0x105863ea8>

Accuracy: 0.89658
Precision: 0.38770
Recall: 0.41600
F1: 0.40135
F2: 0.41001

Total predictions: 12000
True positives:  416
False positives:  657
False negatives:  584
True negatives: 10343

-------------------------

Replicator params:
dominant_class_prevalence: 2
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 7, 'weights': 'uniform'}

<custom_classifiers.replicator instance at 0x105863ea8>

Accuracy: 0.76758
Precision: 0.20134
Recall: 0.60300
F1: 0.30188
F2: 0.43102

Total predictions: 12000
True positives:  603
False positives: 2392
False negatives:  397
True negatives: 8608

-------------------------

Replicator params:
dominant_class_prevalence: 2
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 11, 'weights': 'uniform'}

<custom_classifiers.replicator instance at 0x105863ea8>

Accuracy: 0.87733
Precision: 0.36483
Recall: 0.63700
F1: 0.46395
F2: 0.55430

Total predictions: 12000
True positives:  637
False positives: 1109
False negatives:  363
True negatives: 9891

-------------------------

Replicator params:
dominant_class_prevalence: 2
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 12, 'weights': 'uniform'}

<custom_classifiers.replicator instance at 0x105863ea8>

Accuracy: 0.87733
Precision: 0.36483
Recall: 0.63700
F1: 0.46395
F2: 0.55430

Total predictions: 12000
True positives:  637
False positives: 1109
False negatives:  363
True negatives: 9891

-------------------------

Replicator params:
dominant_class_prevalence: 2
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 13, 'weights': 'uniform'}

<custom_classifiers.replicator instance at 0x10596cea8>

Accuracy: 0.85667
Precision: 0.32000
Recall: 0.64000
F1: 0.42667
F2: 0.53333

Total predictions: 12000
True positives:  640
False positives: 1360
False negatives:  360
True negatives: 9640

-------------------------

Replicator params:
dominant_class_prevalence: 2
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 14, 'weights': 'uniform'}

<custom_classifiers.replicator instance at 0x105965ea8>

Accuracy: 0.85667
Precision: 0.32000
Recall: 0.64000
F1: 0.42667
F2: 0.53333

Total predictions: 12000
True positives:  640
False positives: 1360
False negatives:  360
True negatives: 9640

-------------------------

Replicator params:
dominant_class_prevalence: 2
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 15, 'weights': 'uniform'}

<custom_classifiers.replicator instance at 0x105864ea8>

Accuracy: 0.82750
Precision: 0.27426
Recall: 0.65000
F1: 0.38576
F2: 0.51020

Total predictions: 12000
True positives:  650
False positives: 1720
False negatives:  350
True negatives: 9280

-------------------------

Replicator params:
dominant_class_prevalence: 1
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 12, 'weights': 'uniform'}

<custom_classifiers.replicator instance at 0x105863ea8>

Accuracy: 0.68617
Precision: 0.17040
Recall: 0.71500
F1: 0.27521
F2: 0.43619

Total predictions: 12000
True positives:  715
False positives: 3481
False negatives:  285
True negatives: 7519

-------------------------

Replicator params:
dominant_class_prevalence: 1.5
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 12, 'weights': 'uniform'}

<custom_classifiers.replicator instance at 0x10596cea8>

Accuracy: 0.87733
Precision: 0.36483
Recall: 0.63700
F1: 0.46395
F2: 0.55430

Total predictions: 12000
True positives:  637
False positives: 1109
False negatives:  363
True negatives: 9891

-------------------------

Replicator params:
dominant_class_prevalence: 1.9
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 12, 'weights': 'uniform'}

<custom_classifiers.replicator instance at 0x105869ea8>

Accuracy: 0.87733
Precision: 0.36483
Recall: 0.63700
F1: 0.46395
F2: 0.55430

Total predictions: 12000
True positives:  637
False positives: 1109
False negatives:  363
True negatives: 9891

-------------------------

Replicator params:
dominant_class_prevalence: 2.5
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 12, 'weights': 'uniform'}

<custom_classifiers.replicator instance at 0x105869ea8>

Accuracy: 0.91125
Precision: 0.45185
Recall: 0.30500
F1: 0.36418
F2: 0.32620

Total predictions: 12000
True positives:  305
False positives:  370
False negatives:  695
True negatives: 10630

-------------------------

Replicator params:
dominant_class_prevalence: 3
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 12, 'weights': 'uniform'}

<custom_classifiers.replicator instance at 0x105863ea8>

Accuracy: 0.91125
Precision: 0.45185
Recall: 0.30500
F1: 0.36418
F2: 0.32620

Total predictions: 12000
True positives:  305
False positives:  370
False negatives:  695
True negatives: 10630

-------------------------

Replicator params:
dominant_class_prevalence: 2
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 12, 'weights': 'distance'}

<custom_classifiers.replicator instance at 0x105863ea8>

Accuracy: 0.87258
Precision: 0.35379
Recall: 0.64000
F1: 0.45568
F2: 0.55087

Total predictions: 12000
True positives:  640
False positives: 1169
False negatives:  360
True negatives: 9831

-------------------------

SplitterS params:
certainty: 0.6
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 10, 'weights': 'uniform'}

<custom_classifiers.splitter instance at 0x10515d518>

Accuracy: 0.80550
Precision: 0.24773
Recall: 0.65500
F1: 0.35950
F2: 0.49293

Total predictions: 12000
True positives:  655
False positives: 1989
False negatives:  345
True negatives: 9011

-------------------------

SplitterS params:
certainty: 0.7
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 10, 'weights': 'uniform'}

<custom_classifiers.splitter instance at 0x105163518>

Accuracy: 0.81167
Precision: 0.24010
Recall: 0.58200
F1: 0.33995
F2: 0.45299

Total predictions: 12000
True positives:  582
False positives: 1842
False negatives:  418
True negatives: 9158

-------------------------

SplitterS params:
certainty: 0.7
max_imbalance: 2
clf_mode: 0
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 10, 'weights': 'uniform'}

<custom_classifiers.splitter instance at 0x10528afc8>

Accuracy: 0.88400
Precision: 0.28696
Recall: 0.26400
F1: 0.27500
F2: 0.26829

Total predictions: 12000
True positives:  264
False positives:  656
False negatives:  736
True negatives: 10344

-------------------------

SplitterS params:
certainty: 0.6
max_imbalance: 1.5
clf_mode: 0
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 10, 'weights': 'uniform'}

<custom_classifiers.splitter instance at 0x10518b518>

Accuracy: 0.83175
Precision: 0.23170
Recall: 0.44000
F1: 0.30355
F2: 0.37294

Total predictions: 12000
True positives:  440
False positives: 1459
False negatives:  560
True negatives: 9541

-------------------------

SplitterS params:
certainty: 0.6
max_imbalance: 0.5
clf_mode: 0
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 10, 'weights': 'uniform'}

<custom_classifiers.splitter instance at 0x10518b518>

Accuracy: 0.24242
Precision: 0.09662
Recall: 0.96900
F1: 0.17572
F2: 0.34536

Total predictions: 12000
True positives:  969
False positives: 9060
False negatives:   31
True negatives: 1940

-------------------------

SplitterS params:
certainty: 0.6
max_imbalance: 1
clf_mode: 3
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 10, 'weights': 'uniform'}

<custom_classifiers.splitter instance at 0x10515e518>

Accuracy: 0.89708
Precision: 0.32061
Recall: 0.21000
F1: 0.25378
F2: 0.22556

Total predictions: 12000
True positives:  210
False positives:  445
False negatives:  790
True negatives: 10555

-------------------------

SplitterS params:
certainty: 0.6
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 10, 'weights': 'uniform'}

<custom_classifiers.splitter instance at 0x10515d518>

Accuracy: 0.80583
Precision: 0.24715
Recall: 0.65000
F1: 0.35813
F2: 0.49020

Total predictions: 12000
True positives:  650
False positives: 1980
False negatives:  350
True negatives: 9020

-------------------------

SplitterS params:
certainty: 0.6
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 5, 'weights': 'uniform'}

<custom_classifiers.splitter instance at 0x105162518>

Accuracy: 0.73983
Precision: 0.20884
Recall: 0.76100
F1: 0.32773
F2: 0.49778

Total predictions: 12000
True positives:  761
False positives: 2883
False negatives:  239
True negatives: 8117

-------------------------

SplitterS params:
certainty: 0.6
max_imbalance: 1
clf_mode: 0
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 3, 'weights': 'uniform'}

<custom_classifiers.splitter instance at 0x10515f518>

Accuracy: 0.74633
Precision: 0.20598
Recall: 0.71600
F1: 0.31993
F2: 0.47887

Total predictions: 12000
True positives:  716
False positives: 2760
False negatives:  284
True negatives: 8240

-------------------------

SplitterS params:
certainty: 0.6
max_imbalance: 2
clf_mode: 0
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 3, 'weights': 'uniform'}

<custom_classifiers.splitter instance at 0x10515d518>

Accuracy: 0.87833
Precision: 0.35785
Recall: 0.57900
F1: 0.44232
F2: 0.51531

Total predictions: 12000
True positives:  579
False positives: 1039
False negatives:  421
True negatives: 9961

-------------------------

SplitterS params:
certainty: 0.6
max_imbalance: 3
clf_mode: 0
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 3, 'weights': 'uniform'}

<custom_classifiers.splitter instance at 0x10515d518>

Accuracy: 0.88200
Precision: 0.36298
Recall: 0.55100
F1: 0.43765
F2: 0.49928

Total predictions: 12000
True positives:  551
False positives:  967
False negatives:  449
True negatives: 10033

-------------------------

SplitterS params:
certainty: 0.6
max_imbalance: 4
clf_mode: 0
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 3, 'weights': 'uniform'}

<custom_classifiers.splitter instance at 0x105285518>

Accuracy: 0.89333
Precision: 0.30609
Recall: 0.22100
F1: 0.25668
F2: 0.23401

Total predictions: 12000
True positives:  221
False positives:  501
False negatives:  779
True negatives: 10499

-------------------------

SplitterS params:
certainty: 0.6
max_imbalance: 1.5
clf_mode: 0
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 3, 'weights': 'uniform'}

<custom_classifiers.splitter instance at 0x105163518>

Accuracy: 0.81658
Precision: 0.26607
Recall: 0.68300
F1: 0.38295
F2: 0.52002

Total predictions: 12000
True positives:  683
False positives: 1884
False negatives:  317
True negatives: 9116

-------------------------

SplitterS params:
certainty: 0.6
max_imbalance: 2
clf_mode: 0
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 3, 'weights': 'uniform'}

<custom_classifiers.splitter instance at 0x105162518>

Accuracy: 0.87783
Precision: 0.35723
Recall: 0.58300
F1: 0.44301
F2: 0.51758

Total predictions: 12000
True positives:  583
False positives: 1049
False negatives:  417
True negatives: 9951

-------------------------

SplitterS params:
certainty: 0.7
max_imbalance: 2
clf_mode: 0
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 3, 'weights': 'uniform'}

<custom_classifiers.splitter instance at 0x10515e518>

Accuracy: 0.87875
Precision: 0.35913
Recall: 0.58000
F1: 0.44359
F2: 0.51647

Total predictions: 12000
True positives:  580
False positives: 1035
False negatives:  420
True negatives: 9965

-------------------------

SplitterS params:
certainty: 0.8
max_imbalance: 2
clf_mode: 0
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 3, 'weights': 'uniform'}

<custom_classifiers.splitter instance at 0x105162518>

Accuracy: 0.89217
Precision: 0.34022
Recall: 0.31300
F1: 0.32604
F2: 0.31809

Total predictions: 12000
True positives:  313
False positives:  607
False negatives:  687
True negatives: 10393

-------------------------

SplitterS params:
certainty: 0.65
max_imbalance: 2
clf_mode: 0
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 3, 'weights': 'uniform'}

<custom_classifiers.splitter instance at 0x10515d518>

Accuracy: 0.87642
Precision: 0.35083
Recall: 0.56800
F1: 0.43375
F2: 0.50543

Total predictions: 12000
True positives:  568
False positives: 1051
False negatives:  432
True negatives: 9949

-------------------------

SplitterS params:
certainty: 0.6
max_imbalance: 2
clf_mode: 0
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 3, 'weights': 'uniform'}

<custom_classifiers.splitter instance at 0x105162518>

Accuracy: 0.87750
Precision: 0.35458
Recall: 0.57300
F1: 0.43807
F2: 0.51015

Total predictions: 12000
True positives:  573
False positives: 1043
False negatives:  427
True negatives: 9957

-------------------------

SplitterS params:
certainty: 0.6
max_imbalance: 2
clf_mode: 0
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 4, 'weights': 'uniform'}

<custom_classifiers.splitter instance at 0x105285518>

Accuracy: 0.90883
Precision: 0.42835
Recall: 0.28100
F1: 0.33937
F2: 0.30176

Total predictions: 12000
True positives:  281
False positives:  375
False negatives:  719
True negatives: 10625

-------------------------

SplitterS params:
certainty: 0.6
max_imbalance: 2
clf_mode: 0
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 5, 'weights': 'uniform'}

<custom_classifiers.splitter instance at 0x10515d518>

Accuracy: 0.88408
Precision: 0.35529
Recall: 0.48000
F1: 0.40834
F2: 0.44851

Total predictions: 12000
True positives:  480
False positives:  871
False negatives:  520
True negatives: 10129

-------------------------

SplitterS params:
certainty: 0.6
max_imbalance: 2
clf_mode: 0
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 6, 'weights': 'uniform'}

<custom_classifiers.splitter instance at 0x105162518>

Accuracy: 0.90517
Precision: 0.41523
Recall: 0.33800
F1: 0.37266
F2: 0.35106

Total predictions: 12000
True positives:  338
False positives:  476
False negatives:  662
True negatives: 10524

-------------------------

SplitterS params:
certainty: 0.6
max_imbalance: 2
clf_mode: 0
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 7, 'weights': 'uniform'}

<custom_classifiers.splitter instance at 0x105162518>

Accuracy: 0.85383
Precision: 0.26139
Recall: 0.41300
F1: 0.32016
F2: 0.37007

Total predictions: 12000
True positives:  413
False positives: 1167
False negatives:  587
True negatives: 9833

-------------------------

SplitterS params:
certainty: 0.6
max_imbalance: 2
clf_mode: 0
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 8, 'weights': 'uniform'}

<custom_classifiers.splitter instance at 0x10515d518>

Accuracy: 0.88283
Precision: 0.29861
Recall: 0.30100
F1: 0.29980
F2: 0.30052

Total predictions: 12000
True positives:  301
False positives:  707
False negatives:  699
True negatives: 10293

-------------------------

SplitterS params:
certainty: 0.6
max_imbalance: 2
clf_mode: 0
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 9, 'weights': 'uniform'}

<custom_classifiers.splitter instance at 0x10515e518>

Accuracy: 0.84700
Precision: 0.23544
Recall: 0.37200
F1: 0.28837
F2: 0.33333

Total predictions: 12000
True positives:  372
False positives: 1208
False negatives:  628
True negatives: 9792

-------------------------

SplitterS params:
certainty: 0.6
max_imbalance: 2
clf_mode: 0
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 10, 'weights': 'uniform'}

<custom_classifiers.splitter instance at 0x10515e518>

Accuracy: 0.88217
Precision: 0.27742
Recall: 0.25800
F1: 0.26736
F2: 0.26166

Total predictions: 12000
True positives:  258
False positives:  672
False negatives:  742
True negatives: 10328

-------------------------

SplitterS params:
certainty: 0.6
max_imbalance: 2
clf_mode: 0
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 2, 'weights': 'uniform'}

<custom_classifiers.splitter instance at 0x10515e518>

Accuracy: 0.89675
Precision: 0.32656
Recall: 0.22500
F1: 0.26643
F2: 0.23992

Total predictions: 12000
True positives:  225
False positives:  464
False negatives:  775
True negatives: 10536

-------------------------

SplitterS params:
certainty: 0.6
max_imbalance: 2
clf_mode: 0
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 3, 'weights': 'uniform'}

<custom_classifiers.splitter instance at 0x105285518>

Accuracy: 0.87750
Precision: 0.35636
Recall: 0.58300
F1: 0.44234
F2: 0.51721

Total predictions: 12000
True positives:  583
False positives: 1053
False negatives:  417
True negatives: 9947

-------------------------

SplitterS params:
certainty: 0.6
max_imbalance: 2
clf_mode: 0
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 3, 'weights': 'distance'}

<custom_classifiers.splitter instance at 0x105163518>

Accuracy: 0.87792
Precision: 0.35331
Recall: 0.56000
F1: 0.43327
F2: 0.50134

Total predictions: 12000
True positives:  560
False positives: 1025
False negatives:  440
True negatives: 9975

-------------------------

<custom_classifiers.weighted_knn instance at 0x105863ef0>

Accuracy: 0.89658
Precision: 0.38770
Recall: 0.41600
F1: 0.40135
F2: 0.41001

Total predictions: 12000
True positives:  416
False positives:  657
False negatives:  584
True negatives: 10343

-------------------------

<custom_classifiers.weighted_knn instance at 0x105863ef0>

Accuracy: 0.88767
Precision: 0.29286
Recall: 0.24600
F1: 0.26739
F2: 0.25413

Total predictions: 12000
True positives:  246
False positives:  594
False negatives:  754
True negatives: 10406

-------------------------

Replicator params:
dominant_class_prevalence: 2
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 12, 'weights': 'uniform'}

<custom_classifiers.replicator instance at 0x105869ea8>

Accuracy: 0.88750
Precision: 0.39766
Recall: 0.68000
F1: 0.50185
F2: 0.59545

Total predictions: 1200
True positives:   68
False positives:  103
False negatives:   32
True negatives:  997

-------------------------

SplitterS params:
certainty: 0.6
max_imbalance: 2
clf_mode: 0
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 3, 'weights': 'uniform'}

<custom_classifiers.splitter instance at 0x105161518>

Accuracy: 0.88917
Precision: 0.39623
Recall: 0.63000
F1: 0.48649
F2: 0.56351

Total predictions: 1200
True positives:   63
False positives:   96
False negatives:   37
True negatives: 1004

-------------------------

<custom_classifiers.weighted_knn instance at 0x105863ef0>

Accuracy: 0.89583
Precision: 0.32877
Recall: 0.24000
F1: 0.27746
F2: 0.25370

Total predictions: 1200
True positives:   24
False positives:   49
False negatives:   76
True negatives: 1051

-------------------------

<custom_classifiers.weighted_knn instance at 0x105864ef0>

Accuracy: 0.90583
Precision: 0.38596
Recall: 0.22000
F1: 0.28025
F2: 0.24070

Total predictions: 1200
True positives:   22
False positives:   35
False negatives:   78
True negatives: 1065

-------------------------

<custom_classifiers.weighted_knn instance at 0x105863ef0>

Accuracy: 0.89583
Precision: 0.32877
Recall: 0.24000
F1: 0.27746
F2: 0.25370

Total predictions: 1200
True positives:   24
False positives:   49
False negatives:   76
True negatives: 1051

-------------------------

<custom_classifiers.weighted_knn instance at 0x105863ef0>

Accuracy: 0.90750
Precision: 0.44660
Recall: 0.46000
F1: 0.45320
F2: 0.45726

Total predictions: 1200
True positives:   46
False positives:   57
False negatives:   54
True negatives: 1043

-------------------------

<custom_classifiers.weighted_knn instance at 0x105864ef0>

Accuracy: 0.90917
Precision: 0.41509
Recall: 0.22000
F1: 0.28758
F2: 0.24283

Total predictions: 1200
True positives:   22
False positives:   31
False negatives:   78
True negatives: 1069

-------------------------

<custom_classifiers.weighted_knn instance at 0x105872ef0>

Accuracy: 0.90500
Precision: 0.38710
Recall: 0.24000
F1: 0.29630
F2: 0.25974

Total predictions: 1200
True positives:   24
False positives:   38
False negatives:   76
True negatives: 1062

-------------------------

<custom_classifiers.weighted_knn instance at 0x105863ef0>

Accuracy: 0.90917
Precision: 0.44000
Recall: 0.33000
F1: 0.37714
F2: 0.34737

Total predictions: 1200
True positives:   33
False positives:   42
False negatives:   67
True negatives: 1058

-------------------------

<custom_classifiers.weighted_knn instance at 0x105963ef0>

Accuracy: 0.92917
Precision: 0.74194
Recall: 0.23000
F1: 0.35115
F2: 0.26682

Total predictions: 1200
True positives:   23
False positives:    8
False negatives:   77
True negatives: 1092

-------------------------

<custom_classifiers.weighted_knn instance at 0x105868ef0>

Accuracy: 0.93417
Precision: 0.75610
Recall: 0.31000
F1: 0.43972
F2: 0.35147

Total predictions: 1200
True positives:   31
False positives:   10
False negatives:   69
True negatives: 1090

-------------------------

weighted_knn params:
n_neighbors: 11
class_weights: {0: 1, 1: 2}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x10596cef0>

Accuracy: 0.92417
Precision: 0.58182
Recall: 0.32000
F1: 0.41290
F2: 0.35165

Total predictions: 1200
True positives:   32
False positives:   23
False negatives:   68
True negatives: 1077

-------------------------

weighted_knn params:
n_neighbors: 12
class_weights: {0: 1, 1: 2}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x10596fea8>

Accuracy: 0.92083
Precision: 0.72727
Recall: 0.08000
F1: 0.14414
F2: 0.09732

Total predictions: 1200
True positives:    8
False positives:    3
False negatives:   92
True negatives: 1097

-------------------------

weighted_knn params:
n_neighbors: 13
class_weights: {0: 1, 1: 2}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x105863ea8>

Accuracy: 0.91750
Precision: 0.52941
Recall: 0.09000
F1: 0.15385
F2: 0.10791

Total predictions: 1200
True positives:    9
False positives:    8
False negatives:   91
True negatives: 1092

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 2}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x105863ea8>

Accuracy: 0.93417
Precision: 0.75610
Recall: 0.31000
F1: 0.43972
F2: 0.35147

Total predictions: 1200
True positives:   31
False positives:   10
False negatives:   69
True negatives: 1090

-------------------------

weighted_knn params:
n_neighbors: 3
class_weights: {0: 1, 1: 2}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x105569ea8>

Accuracy: 0.90583
Precision: 0.38596
Recall: 0.22000
F1: 0.28025
F2: 0.24070

Total predictions: 1200
True positives:   22
False positives:   35
False negatives:   78
True negatives: 1065

-------------------------

weighted_knn params:
n_neighbors: 4
class_weights: {0: 1, 1: 2}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x105865ea8>

Accuracy: 0.89583
Precision: 0.32877
Recall: 0.24000
F1: 0.27746
F2: 0.25370

Total predictions: 1200
True positives:   24
False positives:   49
False negatives:   76
True negatives: 1051

-------------------------

weighted_knn params:
n_neighbors: 5
class_weights: {0: 1, 1: 2}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x105979ea8>

Accuracy: 0.90750
Precision: 0.44660
Recall: 0.46000
F1: 0.45320
F2: 0.45726

Total predictions: 1200
True positives:   46
False positives:   57
False negatives:   54
True negatives: 1043

-------------------------

weighted_knn params:
n_neighbors: 5
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x105979ea8>

Accuracy: 0.90750
Precision: 0.44660
Recall: 0.46000
F1: 0.45320
F2: 0.45726

Total predictions: 1200
True positives:   46
False positives:   57
False negatives:   54
True negatives: 1043

-------------------------

weighted_knn params:
n_neighbors: 5
class_weights: {0: 1, 1: 4}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x105764ea8>

Accuracy: 0.90750
Precision: 0.44660
Recall: 0.46000
F1: 0.45320
F2: 0.45726

Total predictions: 1200
True positives:   46
False positives:   57
False negatives:   54
True negatives: 1043

-------------------------

weighted_knn params:
n_neighbors: 5
class_weights: {0: 1, 1: 5}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x105863ea8>

Accuracy: 0.72750
Precision: 0.19733
Recall: 0.74000
F1: 0.31158
F2: 0.47742

Total predictions: 1200
True positives:   74
False positives:  301
False negatives:   26
True negatives:  799

-------------------------

weighted_knn params:
n_neighbors: 7
class_weights: {0: 1, 1: 5}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x105868ea8>

Accuracy: 0.88750
Precision: 0.39766
Recall: 0.68000
F1: 0.50185
F2: 0.59545

Total predictions: 1200
True positives:   68
False positives:  103
False negatives:   32
True negatives:  997

-------------------------

weighted_knn params:
n_neighbors: 7
class_weights: {0: 1, 1: 5}
distance_weights: distance

<custom_classifiers.weighted_knn instance at 0x105863ea8>

Accuracy: 0.82833
Precision: 0.28455
Recall: 0.70000
F1: 0.40462
F2: 0.54180

Total predictions: 1200
True positives:   70
False positives:  176
False negatives:   30
True negatives:  924

-------------------------

weighted_knn params:
n_neighbors: 8
class_weights: {0: 1, 1: 5}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x105863ea8>

Accuracy: 0.86583
Precision: 0.34518
Recall: 0.68000
F1: 0.45791
F2: 0.56951

Total predictions: 1200
True positives:   68
False positives:  129
False negatives:   32
True negatives:  971

-------------------------

weighted_knn params:
n_neighbors: 7
class_weights: {0: 1, 1: 5}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x105863ea8>

Accuracy: 0.88750
Precision: 0.39766
Recall: 0.68000
F1: 0.50185
F2: 0.59545

Total predictions: 1200
True positives:   68
False positives:  103
False negatives:   32
True negatives:  997

-------------------------

weighted_knn params:
n_neighbors: 6
class_weights: {0: 1, 1: 5}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x105864ea8>

Accuracy: 0.90583
Precision: 0.45185
Recall: 0.61000
F1: 0.51915
F2: 0.57009

Total predictions: 1200
True positives:   61
False positives:   74
False negatives:   39
True negatives: 1026

-------------------------

weighted_knn params:
n_neighbors: 5
class_weights: {0: 1, 1: 5}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x105863ea8>

Accuracy: 0.72750
Precision: 0.19733
Recall: 0.74000
F1: 0.31158
F2: 0.47742

Total predictions: 1200
True positives:   74
False positives:  301
False negatives:   26
True negatives:  799

-------------------------

weighted_knn params:
n_neighbors: 6
class_weights: {0: 1, 1: 7}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x10596eea8>

Accuracy: 0.68167
Precision: 0.17209
Recall: 0.74000
F1: 0.27925
F2: 0.44578

Total predictions: 1200
True positives:   74
False positives:  356
False negatives:   26
True negatives:  744

-------------------------

weighted_knn params:
n_neighbors: 8
class_weights: {0: 1, 1: 7}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x105869ea8>

Accuracy: 0.86583
Precision: 0.34518
Recall: 0.68000
F1: 0.45791
F2: 0.56951

Total predictions: 1200
True positives:   68
False positives:  129
False negatives:   32
True negatives:  971

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 7}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x105863ea8>

Accuracy: 0.80917
Precision: 0.26199
Recall: 0.71000
F1: 0.38275
F2: 0.52906

Total predictions: 1200
True positives:   71
False positives:  200
False negatives:   29
True negatives:  900

-------------------------

weighted_knn params:
n_neighbors: 9
class_weights: {0: 1, 1: 7}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x105868ea8>

Accuracy: 0.82750
Precision: 0.27984
Recall: 0.68000
F1: 0.39650
F2: 0.52877

Total predictions: 1200
True positives:   68
False positives:  175
False negatives:   32
True negatives:  925

-------------------------

weighted_knn params:
n_neighbors: 11
class_weights: {0: 1, 1: 7}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x105863ea8>

Accuracy: 0.79333
Precision: 0.25000
Recall: 0.74000
F1: 0.37374
F2: 0.53161

Total predictions: 1200
True positives:   74
False positives:  222
False negatives:   26
True negatives:  878

-------------------------

weighted_knn params:
n_neighbors: 12
class_weights: {0: 1, 1: 7}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x105863ea8>

Accuracy: 0.77417
Precision: 0.23197
Recall: 0.74000
F1: 0.35322
F2: 0.51460

Total predictions: 1200
True positives:   74
False positives:  245
False negatives:   26
True negatives:  855

-------------------------

weighted_knn params:
n_neighbors: 13
class_weights: {0: 1, 1: 7}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x105863ea8>

Accuracy: 0.74833
Precision: 0.21143
Recall: 0.74000
F1: 0.32889
F2: 0.49333

Total predictions: 1200
True positives:   74
False positives:  276
False negatives:   26
True negatives:  824

-------------------------

weighted_knn params:
n_neighbors: 14
class_weights: {0: 1, 1: 7}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x105865ea8>

Accuracy: 0.73250
Precision: 0.20054
Recall: 0.74000
F1: 0.31557
F2: 0.48114

Total predictions: 1200
True positives:   74
False positives:  295
False negatives:   26
True negatives:  805

-------------------------

weighted_knn params:
n_neighbors: 7
class_weights: {0: 1, 1: 7}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x105863ea8>

Accuracy: 0.64500
Precision: 0.15612
Recall: 0.74000
F1: 0.25784
F2: 0.42334

Total predictions: 1200
True positives:   74
False positives:  400
False negatives:   26
True negatives:  700

-------------------------

weighted_knn params:
n_neighbors: 7
class_weights: {0: 1, 1: 6}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x105979ea8>

Accuracy: 0.88750
Precision: 0.39766
Recall: 0.68000
F1: 0.50185
F2: 0.59545

Total predictions: 1200
True positives:   68
False positives:  103
False negatives:   32
True negatives:  997

-------------------------

weighted_knn params:
n_neighbors: 6
class_weights: {0: 1, 1: 6}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x10596dea8>

Accuracy: 0.68167
Precision: 0.17209
Recall: 0.74000
F1: 0.27925
F2: 0.44578

Total predictions: 1200
True positives:   74
False positives:  356
False negatives:   26
True negatives:  744

-------------------------

weighted_knn params:
n_neighbors: 8
class_weights: {0: 1, 1: 6}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x10586aea8>

Accuracy: 0.86583
Precision: 0.34518
Recall: 0.68000
F1: 0.45791
F2: 0.56951

Total predictions: 1200
True positives:   68
False positives:  129
False negatives:   32
True negatives:  971

-------------------------

weighted_knn params:
n_neighbors: 7
class_weights: {0: 1, 1: 5}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x105864ea8>

Accuracy: 0.88750
Precision: 0.39766
Recall: 0.68000
F1: 0.50185
F2: 0.59545

Total predictions: 1200
True positives:   68
False positives:  103
False negatives:   32
True negatives:  997

-------------------------

weighted_knn params:
n_neighbors: 6
class_weights: {0: 1, 1: 5}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x105863ea8>

Accuracy: 0.90583
Precision: 0.45185
Recall: 0.61000
F1: 0.51915
F2: 0.57009

Total predictions: 1200
True positives:   61
False positives:   74
False negatives:   39
True negatives: 1026

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 2}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x105863ef0>

Accuracy: 0.93417
Precision: 0.75610
Recall: 0.31000
F1: 0.43972
F2: 0.35147

Total predictions: 1200
True positives:   31
False positives:   10
False negatives:   69
True negatives: 1090

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 1}
distance_weights: uniform

weighted_knn params:
n_neighbors: 5
class_weights: {0: 1, 1: 1}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x105965ef0>

Accuracy: 0.91167
Precision: 0.44000
Recall: 0.22000
F1: 0.29333
F2: 0.24444

Total predictions: 1200
True positives:   22
False positives:   28
False negatives:   78
True negatives: 1072

-------------------------

weighted_knn params:
n_neighbors: 5
class_weights: {0: 1, 1: 1}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x105863ef0>

Accuracy: 0.91167
Precision: 0.44000
Recall: 0.22000
F1: 0.29333
F2: 0.24444

Total predictions: 1200
True positives:   22
False positives:   28
False negatives:   78
True negatives: 1072

-------------------------

weighted_knn params:
n_neighbors: 5
class_weights: {0: 1, 1: 1}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x105965ef0>

Accuracy: 0.91167
Precision: 0.44000
Recall: 0.22000
F1: 0.29333
F2: 0.24444

Total predictions: 1200
True positives:   22
False positives:   28
False negatives:   78
True negatives: 1072

-------------------------

weighted_knn params:
n_neighbors: 5
class_weights: {0: 2, 1: 1}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x105879ef0>

Accuracy: 0.91750
Precision: 1.00000
Recall: 0.01000
F1: 0.01980
F2: 0.01247

Total predictions: 1200
True positives:    1
False positives:    0
False negatives:   99
True negatives: 1100

-------------------------

weighted_knn params:
n_neighbors: 9
class_weights: {0: 1, 1: 2}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x105863ef0>

Accuracy: 0.92917
Precision: 0.74194
Recall: 0.23000
F1: 0.35115
F2: 0.26682

Total predictions: 1200
True positives:   23
False positives:    8
False negatives:   77
True negatives: 1092

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 2}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x105863ef0>

Accuracy: 0.93417
Precision: 0.75610
Recall: 0.31000
F1: 0.43972
F2: 0.35147

Total predictions: 1200
True positives:   31
False positives:   10
False negatives:   69
True negatives: 1090

-------------------------

weighted_knn params:
n_neighbors: 11
class_weights: {0: 1, 1: 2}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x105864ef0>

Accuracy: 0.92417
Precision: 0.58182
Recall: 0.32000
F1: 0.41290
F2: 0.35165

Total predictions: 1200
True positives:   32
False positives:   23
False negatives:   68
True negatives: 1077

-------------------------

weighted_knn params:
n_neighbors: 12
class_weights: {0: 1, 1: 2}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x105879ef0>

Accuracy: 0.92083
Precision: 0.72727
Recall: 0.08000
F1: 0.14414
F2: 0.09732

Total predictions: 1200
True positives:    8
False positives:    3
False negatives:   92
True negatives: 1097

-------------------------

weighted_knn params:
n_neighbors: 15
class_weights: {0: 1, 1: 2}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x105863ef0>

Accuracy: 0.92000
Precision: 0.66667
Recall: 0.08000
F1: 0.14286
F2: 0.09709

Total predictions: 1200
True positives:    8
False positives:    4
False negatives:   92
True negatives: 1096

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x105863ef0>

Accuracy: 0.91333
Precision: 0.48039
Recall: 0.49000
F1: 0.48515
F2: 0.48805

Total predictions: 1200
True positives:   49
False positives:   53
False negatives:   51
True negatives: 1047

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 4}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x10556fef0>

Accuracy: 0.91333
Precision: 0.48039
Recall: 0.49000
F1: 0.48515
F2: 0.48805

Total predictions: 1200
True positives:   49
False positives:   53
False negatives:   51
True negatives: 1047

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 5}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x10596cef0>

Accuracy: 0.80917
Precision: 0.26199
Recall: 0.71000
F1: 0.38275
F2: 0.52906

Total predictions: 1200
True positives:   71
False positives:  200
False negatives:   29
True negatives:  900

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 2}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x105863ef0>

Accuracy: 0.93417
Precision: 0.75610
Recall: 0.31000
F1: 0.43972
F2: 0.35147

Total predictions: 1200
True positives:   31
False positives:   10
False negatives:   69
True negatives: 1090

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x105863ef0>

Accuracy: 0.91333
Precision: 0.48039
Recall: 0.49000
F1: 0.48515
F2: 0.48805

Total predictions: 1200
True positives:   49
False positives:   53
False negatives:   51
True negatives: 1047

-------------------------

weighted_knn params:
n_neighbors: 11
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x105863ef0>

Accuracy: 0.90250
Precision: 0.42735
Recall: 0.50000
F1: 0.46083
F2: 0.48356

Total predictions: 1200
True positives:   50
False positives:   67
False negatives:   50
True negatives: 1033

-------------------------

weighted_knn params:
n_neighbors: 12
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x105868ef0>

Accuracy: 0.91417
Precision: 0.48000
Recall: 0.36000
F1: 0.41143
F2: 0.37895

Total predictions: 1200
True positives:   36
False positives:   39
False negatives:   64
True negatives: 1061

-------------------------

weighted_knn params:
n_neighbors: 13
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x105864ef0>

Accuracy: 0.90167
Precision: 0.40625
Recall: 0.39000
F1: 0.39796
F2: 0.39315

Total predictions: 1200
True positives:   39
False positives:   57
False negatives:   61
True negatives: 1043

-------------------------

weighted_knn params:
n_neighbors: 9
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x105864ef0>

Accuracy: 0.91583
Precision: 0.49438
Recall: 0.44000
F1: 0.46561
F2: 0.44990

Total predictions: 1200
True positives:   44
False positives:   45
False negatives:   56
True negatives: 1055

-------------------------

weighted_knn params:
n_neighbors: 8
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x10586cef0>

Accuracy: 0.90917
Precision: 0.44000
Recall: 0.33000
F1: 0.37714
F2: 0.34737

Total predictions: 1200
True positives:   33
False positives:   42
False negatives:   67
True negatives: 1058

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x105864ef0>

Accuracy: 0.91333
Precision: 0.48039
Recall: 0.49000
F1: 0.48515
F2: 0.48805

Total predictions: 1200
True positives:   49
False positives:   53
False negatives:   51
True negatives: 1047

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3.5}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x105869ef0>

Accuracy: 0.91333
Precision: 0.48039
Recall: 0.49000
F1: 0.48515
F2: 0.48805

Total predictions: 1200
True positives:   49
False positives:   53
False negatives:   51
True negatives: 1047

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 4}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x105563ef0>

Accuracy: 0.91333
Precision: 0.48039
Recall: 0.49000
F1: 0.48515
F2: 0.48805

Total predictions: 1200
True positives:   49
False positives:   53
False negatives:   51
True negatives: 1047

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x105971ef0>

Accuracy: 0.91192
Precision: 0.47118
Recall: 0.46600
F1: 0.46858
F2: 0.46703

Total predictions: 12000
True positives:  466
False positives:  523
False negatives:  534
True negatives: 10477

-------------------------

weighted_knn params:
n_neighbors: 6
class_weights: {0: 1, 1: 5}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x105963ea8>

Accuracy: 0.88983
Precision: 0.38484
Recall: 0.53800
F1: 0.44871
F2: 0.49833

Total predictions: 12000
True positives:  538
False positives:  860
False negatives:  462
True negatives: 10140

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x10596cef0>

Accuracy: 0.91192
Precision: 0.47118
Recall: 0.46600
F1: 0.46858
F2: 0.46703

Total predictions: 12000
True positives:  466
False positives:  523
False negatives:  534
True negatives: 10477

-------------------------

weighted_knn params:
n_neighbors: 6
class_weights: {0: 1, 1: 5}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x105864ea8>

Accuracy: 0.88983
Precision: 0.38484
Recall: 0.53800
F1: 0.44871
F2: 0.49833

Total predictions: 12000
True positives:  538
False positives:  860
False negatives:  462
True negatives: 10140

-------------------------

Replicator params:
dominant_class_prevalence: 2
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 12, 'weights': 'uniform'}

<custom_classifiers.replicator instance at 0x105864e60>

Accuracy: 0.87733
Precision: 0.36483
Recall: 0.63700
F1: 0.46395
F2: 0.55430

Total predictions: 12000
True positives:  637
False positives: 1109
False negatives:  363
True negatives: 9891

-------------------------

SplitterS params:
certainty: 0.6
max_imbalance: 2
clf_mode: 0
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 3, 'weights': 'uniform'}

<custom_classifiers.splitter instance at 0x10515d4d0>

Accuracy: 0.87700
Precision: 0.35327
Recall: 0.57300
F1: 0.43707
F2: 0.50961

Total predictions: 12000
True positives:  573
False positives: 1049
False negatives:  427
True negatives: 9951

-------------------------

SplitterS params:
certainty: 0.6
max_imbalance: 2
clf_mode: 0
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 3, 'weights': 'uniform'}

<custom_classifiers.splitter instance at 0x10515d4d0>

Accuracy: 0.87608
Precision: 0.35015
Recall: 0.56900
F1: 0.43352
F2: 0.50578

Total predictions: 12000
True positives:  569
False positives: 1056
False negatives:  431
True negatives: 9944

-------------------------

SplitterS params:
certainty: 0.6
max_imbalance: 2
clf_mode: 0
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 3, 'weights': 'uniform'}

<custom_classifiers.splitter instance at 0x1050c84d0>

Accuracy: 0.87683
Precision: 0.35081
Recall: 0.56200
F1: 0.43198
F2: 0.50161

Total predictions: 12000
True positives:  562
False positives: 1040
False negatives:  438
True negatives: 9960

-------------------------

SplitterS params:
certainty: 0.6
max_imbalance: 2
clf_mode: 0
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 3, 'weights': 'uniform'}

<custom_classifiers.splitter instance at 0x105291fc8>

Accuracy: 0.87842
Precision: 0.35842
Recall: 0.58100
F1: 0.44334
F2: 0.51681

Total predictions: 12000
True positives:  581
False positives: 1040
False negatives:  419
True negatives: 9960

-------------------------

SplitterS params:
certainty: 0.6
max_imbalance: 2
clf_mode: 0
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 3, 'weights': 'uniform'}

<custom_classifiers.splitter instance at 0x10515d4d0>

Accuracy: 0.87842
Precision: 0.35842
Recall: 0.58100
F1: 0.44334
F2: 0.51681

Total predictions: 12000
True positives:  581
False positives: 1040
False negatives:  419
True negatives: 9960

-------------------------

SplitterS params:
certainty: 0.6
max_imbalance: 2
clf_mode: 0
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 3, 'weights': 'uniform'}

<custom_classifiers.splitter instance at 0x10515d4d0>

Accuracy: 0.87842
Precision: 0.35842
Recall: 0.58100
F1: 0.44334
F2: 0.51681

Total predictions: 12000
True positives:  581
False positives: 1040
False negatives:  419
True negatives: 9960

-------------------------

Replicator params:
dominant_class_prevalence: 2
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 12, 'weights': 'uniform'}

<custom_classifiers.replicator instance at 0x105866e60>

Accuracy: 0.87733
Precision: 0.36483
Recall: 0.63700
F1: 0.46395
F2: 0.55430

Total predictions: 12000
True positives:  637
False positives: 1109
False negatives:  363
True negatives: 9891

-------------------------

Replicator params:
dominant_class_prevalence: 2
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 12, 'weights': 'uniform'}

<custom_classifiers.replicator instance at 0x105863e60>

Accuracy: 0.87733
Precision: 0.36483
Recall: 0.63700
F1: 0.46395
F2: 0.55430

Total predictions: 12000
True positives:  637
False positives: 1109
False negatives:  363
True negatives: 9891

-------------------------

weighted_knn params:
n_neighbors: 6
class_weights: {0: 1, 1: 5}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x10597bea8>

Accuracy: 0.88983
Precision: 0.38484
Recall: 0.53800
F1: 0.44871
F2: 0.49833

Total predictions: 12000
True positives:  538
False positives:  860
False negatives:  462
True negatives: 10140

-------------------------

weighted_knn params:
n_neighbors: 6
class_weights: {0: 1, 1: 5}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x10596cea8>

Accuracy: 0.88983
Precision: 0.38484
Recall: 0.53800
F1: 0.44871
F2: 0.49833

Total predictions: 12000
True positives:  538
False positives:  860
False negatives:  462
True negatives: 10140

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x105864ef0>

Accuracy: 0.91192
Precision: 0.47118
Recall: 0.46600
F1: 0.46858
F2: 0.46703

Total predictions: 12000
True positives:  466
False positives:  523
False negatives:  534
True negatives: 10477

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x105864ef0>

Accuracy: 0.91192
Precision: 0.47118
Recall: 0.46600
F1: 0.46858
F2: 0.46703

Total predictions: 12000
True positives:  466
False positives:  523
False negatives:  534
True negatives: 10477

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x10596cef0>

Accuracy: 0.91192
Precision: 0.47118
Recall: 0.46600
F1: 0.46858
F2: 0.46703

Total predictions: 12000
True positives:  466
False positives:  523
False negatives:  534
True negatives: 10477

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x105965f80>

Accuracy: 0.91192
Precision: 0.47118
Recall: 0.46600
F1: 0.46858
F2: 0.46703

Total predictions: 12000
True positives:  466
False positives:  523
False negatives:  534
True negatives: 10477

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x10596cfc8>

Accuracy: 0.91233
Precision: 0.47320
Recall: 0.45900
F1: 0.46599
F2: 0.46177

Total predictions: 12000
True positives:  459
False positives:  511
False negatives:  541
True negatives: 10489

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x105864fc8>

Accuracy: 0.91233
Precision: 0.47320
Recall: 0.45900
F1: 0.46599
F2: 0.46177

Total predictions: 12000
True positives:  459
False positives:  511
False negatives:  541
True negatives: 10489

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x105877128>

Accuracy: 0.87833
Precision: 0.26531
Recall: 0.26000
F1: 0.26263
F2: 0.26104

Total predictions: 1200
True positives:   26
False positives:   72
False negatives:   74
True negatives: 1028

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x10597b0e0>

Accuracy: 0.87833
Precision: 0.26531
Recall: 0.26000
F1: 0.26263
F2: 0.26104

Total predictions: 1200
True positives:   26
False positives:   72
False negatives:   74
True negatives: 1028

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x10587b0e0>

Accuracy: 0.87833
Precision: 0.26531
Recall: 0.26000
F1: 0.26263
F2: 0.26104

Total predictions: 1200
True positives:   26
False positives:   72
False negatives:   74
True negatives: 1028

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x10587b0e0>

Accuracy: 0.87833
Precision: 0.26531
Recall: 0.26000
F1: 0.26263
F2: 0.26104

Total predictions: 1200
True positives:   26
False positives:   72
False negatives:   74
True negatives: 1028

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x10587b0e0>

Accuracy: 0.88167
Precision: 0.27660
Recall: 0.26000
F1: 0.26804
F2: 0.26316

Total predictions: 1200
True positives:   26
False positives:   68
False negatives:   74
True negatives: 1032

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x10587b0e0>

Accuracy: 0.89833
Precision: 0.29630
Recall: 0.16000
F1: 0.20779
F2: 0.17621

Total predictions: 1200
True positives:   16
False positives:   38
False negatives:   84
True negatives: 1062

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x105869f38>

Accuracy: 0.91333
Precision: 0.48039
Recall: 0.49000
F1: 0.48515
F2: 0.48805

Total predictions: 1200
True positives:   49
False positives:   53
False negatives:   51
True negatives: 1047

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x105863f38>

Accuracy: 0.90167
Precision: 0.39535
Recall: 0.34000
F1: 0.36559
F2: 0.34979

Total predictions: 1200
True positives:   34
False positives:   52
False negatives:   66
True negatives: 1048

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x10597d0e0>

Accuracy: 0.89833
Precision: 0.29630
Recall: 0.16000
F1: 0.20779
F2: 0.17621

Total predictions: 1200
True positives:   16
False positives:   38
False negatives:   84
True negatives: 1062

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x10587b0e0>

Accuracy: 0.89917
Precision: 0.30189
Recall: 0.16000
F1: 0.20915
F2: 0.17660

Total predictions: 1200
True positives:   16
False positives:   37
False negatives:   84
True negatives: 1063

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x1059860e0>

Accuracy: 0.89833
Precision: 0.29630
Recall: 0.16000
F1: 0.20779
F2: 0.17621

Total predictions: 1200
True positives:   16
False positives:   38
False negatives:   84
True negatives: 1062

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x10587b0e0>

Accuracy: 0.87833
Precision: 0.26531
Recall: 0.26000
F1: 0.26263
F2: 0.26104

Total predictions: 1200
True positives:   26
False positives:   72
False negatives:   74
True negatives: 1028

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x1058840e0>

Accuracy: 0.85833
Precision: 0.16346
Recall: 0.17000
F1: 0.16667
F2: 0.16865

Total predictions: 1200
True positives:   17
False positives:   87
False negatives:   83
True negatives: 1013

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x10577b0e0>

Accuracy: 0.87833
Precision: 0.26531
Recall: 0.26000
F1: 0.26263
F2: 0.26104

Total predictions: 1200
True positives:   26
False positives:   72
False negatives:   74
True negatives: 1028

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x10587b0e0>

Accuracy: 0.87167
Precision: 0.24528
Recall: 0.26000
F1: 0.25243
F2: 0.25692

Total predictions: 1200
True positives:   26
False positives:   80
False negatives:   74
True negatives: 1020

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x10587b0e0>

Accuracy: 0.91083
Precision: 0.46154
Recall: 0.42000
F1: 0.43979
F2: 0.42770

Total predictions: 1200
True positives:   42
False positives:   49
False negatives:   58
True negatives: 1051

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x1058800e0>

Accuracy: 0.87833
Precision: 0.26531
Recall: 0.26000
F1: 0.26263
F2: 0.26104

Total predictions: 1200
True positives:   26
False positives:   72
False negatives:   74
True negatives: 1028

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x10587b0e0>

Accuracy: 0.86333
Precision: 0.27143
Recall: 0.38000
F1: 0.31667
F2: 0.35185

Total predictions: 1200
True positives:   38
False positives:  102
False negatives:   62
True negatives:  998

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x10587b0e0>

Accuracy: 0.87000
Precision: 0.28125
Recall: 0.36000
F1: 0.31579
F2: 0.34091

Total predictions: 1200
True positives:   36
False positives:   92
False negatives:   64
True negatives: 1008

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x1058800e0>

Accuracy: 0.88167
Precision: 0.27660
Recall: 0.26000
F1: 0.26804
F2: 0.26316

Total predictions: 1200
True positives:   26
False positives:   68
False negatives:   74
True negatives: 1032

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x10587b0e0>

Accuracy: 0.88333
Precision: 0.29592
Recall: 0.29000
F1: 0.29293
F2: 0.29116

Total predictions: 1200
True positives:   29
False positives:   69
False negatives:   71
True negatives: 1031

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x10587b0e0>

Accuracy: 0.87833
Precision: 0.26531
Recall: 0.26000
F1: 0.26263
F2: 0.26104

Total predictions: 1200
True positives:   26
False positives:   72
False negatives:   74
True negatives: 1028

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x10587b098>

Accuracy: 0.87833
Precision: 0.26531
Recall: 0.26000
F1: 0.26263
F2: 0.26104

Total predictions: 1200
True positives:   26
False positives:   72
False negatives:   74
True negatives: 1028

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x10587b098>

Accuracy: 0.87833
Precision: 0.26531
Recall: 0.26000
F1: 0.26263
F2: 0.26104

Total predictions: 1200
True positives:   26
False positives:   72
False negatives:   74
True negatives: 1028

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x10557b098>

Accuracy: 0.87833
Precision: 0.26531
Recall: 0.26000
F1: 0.26263
F2: 0.26104

Total predictions: 1200
True positives:   26
False positives:   72
False negatives:   74
True negatives: 1028

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x10587b098>

Accuracy: 0.87833
Precision: 0.26531
Recall: 0.26000
F1: 0.26263
F2: 0.26104

Total predictions: 1200
True positives:   26
False positives:   72
False negatives:   74
True negatives: 1028

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x105991098>

Accuracy: 0.87833
Precision: 0.26531
Recall: 0.26000
F1: 0.26263
F2: 0.26104

Total predictions: 1200
True positives:   26
False positives:   72
False negatives:   74
True negatives: 1028

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x1058800e0>

Accuracy: 0.87833
Precision: 0.26531
Recall: 0.26000
F1: 0.26263
F2: 0.26104

Total predictions: 1200
True positives:   26
False positives:   72
False negatives:   74
True negatives: 1028

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x105878128>

Accuracy: 0.85833
Precision: 0.22656
Recall: 0.29000
F1: 0.25439
F2: 0.27462

Total predictions: 1200
True positives:   29
False positives:   99
False negatives:   71
True negatives: 1001

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x10587b0e0>

Accuracy: 0.85833
Precision: 0.22656
Recall: 0.29000
F1: 0.25439
F2: 0.27462

Total predictions: 1200
True positives:   29
False positives:   99
False negatives:   71
True negatives: 1001

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x10587e128>

Accuracy: 0.89500
Precision: 0.37500
Recall: 0.39000
F1: 0.38235
F2: 0.38690

Total predictions: 1200
True positives:   39
False positives:   65
False negatives:   61
True negatives: 1035

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x10577b0e0>

Accuracy: 0.90000
Precision: 0.41379
Recall: 0.48000
F1: 0.44444
F2: 0.46512

Total predictions: 1200
True positives:   48
False positives:   68
False negatives:   52
True negatives: 1032

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x10597d0e0>

Accuracy: 0.91083
Precision: 0.46154
Recall: 0.42000
F1: 0.43979
F2: 0.42770

Total predictions: 1200
True positives:   42
False positives:   49
False negatives:   58
True negatives: 1051

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x1058800e0>

Accuracy: 0.87833
Precision: 0.26531
Recall: 0.26000
F1: 0.26263
F2: 0.26104

Total predictions: 1200
True positives:   26
False positives:   72
False negatives:   74
True negatives: 1028

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x1059840e0>

Accuracy: 0.88167
Precision: 0.27660
Recall: 0.26000
F1: 0.26804
F2: 0.26316

Total predictions: 1200
True positives:   26
False positives:   68
False negatives:   74
True negatives: 1032

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x10587e0e0>

Accuracy: 0.90833
Precision: 0.44318
Recall: 0.39000
F1: 0.41489
F2: 0.39959

Total predictions: 1200
True positives:   39
False positives:   49
False negatives:   61
True negatives: 1051

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x10587b0e0>

Accuracy: 0.91083
Precision: 0.46154
Recall: 0.42000
F1: 0.43979
F2: 0.42770

Total predictions: 1200
True positives:   42
False positives:   49
False negatives:   58
True negatives: 1051

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x1059860e0>

Accuracy: 0.88417
Precision: 0.32110
Recall: 0.35000
F1: 0.33493
F2: 0.34381

Total predictions: 1200
True positives:   35
False positives:   74
False negatives:   65
True negatives: 1026

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x10587d0e0>

Accuracy: 0.87833
Precision: 0.26531
Recall: 0.26000
F1: 0.26263
F2: 0.26104

Total predictions: 1200
True positives:   26
False positives:   72
False negatives:   74
True negatives: 1028

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x1058850e0>

Accuracy: 0.87000
Precision: 0.28125
Recall: 0.36000
F1: 0.31579
F2: 0.34091

Total predictions: 1200
True positives:   36
False positives:   92
False negatives:   64
True negatives: 1008

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x10557b0e0>

Accuracy: 0.87833
Precision: 0.26531
Recall: 0.26000
F1: 0.26263
F2: 0.26104

Total predictions: 1200
True positives:   26
False positives:   72
False negatives:   74
True negatives: 1028

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x1058840e0>

Accuracy: 0.87833
Precision: 0.26531
Recall: 0.26000
F1: 0.26263
F2: 0.26104

Total predictions: 1200
True positives:   26
False positives:   72
False negatives:   74
True negatives: 1028

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x10577b0e0>

Accuracy: 0.87000
Precision: 0.28125
Recall: 0.36000
F1: 0.31579
F2: 0.34091

Total predictions: 1200
True positives:   36
False positives:   92
False negatives:   64
True negatives: 1008

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x1059850e0>

Accuracy: 0.90833
Precision: 0.44318
Recall: 0.39000
F1: 0.41489
F2: 0.39959

Total predictions: 1200
True positives:   39
False positives:   49
False negatives:   61
True negatives: 1051

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x10587c0e0>

Accuracy: 0.88417
Precision: 0.32110
Recall: 0.35000
F1: 0.33493
F2: 0.34381

Total predictions: 1200
True positives:   35
False positives:   74
False negatives:   65
True negatives: 1026

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x10597d0e0>

Accuracy: 0.88417
Precision: 0.32110
Recall: 0.35000
F1: 0.33493
F2: 0.34381

Total predictions: 1200
True positives:   35
False positives:   74
False negatives:   65
True negatives: 1026

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x10587b0e0>

Accuracy: 0.90833
Precision: 0.44318
Recall: 0.39000
F1: 0.41489
F2: 0.39959

Total predictions: 1200
True positives:   39
False positives:   49
False negatives:   61
True negatives: 1051

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x10587b0e0>

Accuracy: 0.91083
Precision: 0.46154
Recall: 0.42000
F1: 0.43979
F2: 0.42770

Total predictions: 1200
True positives:   42
False positives:   49
False negatives:   58
True negatives: 1051

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x10587b0e0>

Accuracy: 0.87833
Precision: 0.26531
Recall: 0.26000
F1: 0.26263
F2: 0.26104

Total predictions: 1200
True positives:   26
False positives:   72
False negatives:   74
True negatives: 1028

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x10557c0e0>

Accuracy: 0.87833
Precision: 0.26531
Recall: 0.26000
F1: 0.26263
F2: 0.26104

Total predictions: 1200
True positives:   26
False positives:   72
False negatives:   74
True negatives: 1028

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x10587b0e0>

Accuracy: 0.87000
Precision: 0.28125
Recall: 0.36000
F1: 0.31579
F2: 0.34091

Total predictions: 1200
True positives:   36
False positives:   92
False negatives:   64
True negatives: 1008

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x1058810e0>

Accuracy: 0.87833
Precision: 0.26531
Recall: 0.26000
F1: 0.26263
F2: 0.26104

Total predictions: 1200
True positives:   26
False positives:   72
False negatives:   74
True negatives: 1028

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x1059850e0>

Accuracy: 0.87000
Precision: 0.28125
Recall: 0.36000
F1: 0.31579
F2: 0.34091

Total predictions: 1200
True positives:   36
False positives:   92
False negatives:   64
True negatives: 1008

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x1059910e0>

Accuracy: 0.87000
Precision: 0.28125
Recall: 0.36000
F1: 0.31579
F2: 0.34091

Total predictions: 1200
True positives:   36
False positives:   92
False negatives:   64
True negatives: 1008

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x10587b0e0>

Accuracy: 0.89167
Precision: 0.35000
Recall: 0.35000
F1: 0.35000
F2: 0.35000

Total predictions: 1200
True positives:   35
False positives:   65
False negatives:   65
True negatives: 1035

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x10587b0e0>

Accuracy: 0.87000
Precision: 0.20833
Recall: 0.20000
F1: 0.20408
F2: 0.20161

Total predictions: 1200
True positives:   20
False positives:   76
False negatives:   80
True negatives: 1024

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x10587c0e0>

Accuracy: 0.88750
Precision: 0.26667
Recall: 0.20000
F1: 0.22857
F2: 0.21053

Total predictions: 1200
True positives:   20
False positives:   55
False negatives:   80
True negatives: 1045

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x1058820e0>

Accuracy: 0.89167
Precision: 0.35000
Recall: 0.35000
F1: 0.35000
F2: 0.35000

Total predictions: 1200
True positives:   35
False positives:   65
False negatives:   65
True negatives: 1035

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x10587c0e0>

Accuracy: 0.91083
Precision: 0.46154
Recall: 0.42000
F1: 0.43979
F2: 0.42770

Total predictions: 1200
True positives:   42
False positives:   49
False negatives:   58
True negatives: 1051

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x10587c0e0>

Accuracy: 0.87833
Precision: 0.26531
Recall: 0.26000
F1: 0.26263
F2: 0.26104

Total predictions: 1200
True positives:   26
False positives:   72
False negatives:   74
True negatives: 1028

-------------------------

Pipeline(steps=[('scaler', Normalizer(copy=True, norm='l2')), ('kbest', SelectKBest(k='all', score_func=<function f_classif at 0x10532b5f0>)), ('clf', LinearSVC(C=1, class_weight='balanced', dual=False, fit_intercept=True,
     intercept_scaling=1, loss='squared_hinge', max_iter=1000,
     multi_class='ovr', penalty='l2', random_state=None, tol=0.0001,
     verbose=0))])

Accuracy: 0.61917
Precision: 0.12262
Recall: 0.58000
F1: 0.20244
F2: 0.33219

Total predictions: 1200
True positives:   58
False positives:  415
False negatives:   42
True negatives:  685

-------------------------

Pipeline(steps=[('scaler', Normalizer(copy=True, norm='l2')), ('kbest', SelectKBest(k='all', score_func=<function f_classif at 0x10532b5f0>)), ('clf', LinearSVC(C=1, class_weight='balanced', dual=False, fit_intercept=True,
     intercept_scaling=1, loss='squared_hinge', max_iter=1000,
     multi_class='ovr', penalty='l2', random_state=None, tol=0.0001,
     verbose=0))])

Accuracy: 0.61333
Precision: 0.13600
Recall: 0.68000
F1: 0.22667
F2: 0.37778

Total predictions: 1200
True positives:   68
False positives:  432
False negatives:   32
True negatives:  668

-------------------------

Pipeline(steps=[('scaler', Normalizer(copy=True, norm='l2')), ('kbest', SelectKBest(k='all', score_func=<function f_classif at 0x10544d5f0>)), ('clf', LinearSVC(C=1, class_weight='balanced', dual=False, fit_intercept=True,
     intercept_scaling=1, loss='squared_hinge', max_iter=1000,
     multi_class='ovr', penalty='l2', random_state=None, tol=0.0001,
     verbose=0))])

Accuracy: 0.61333
Precision: 0.13600
Recall: 0.68000
F1: 0.22667
F2: 0.37778

Total predictions: 1200
True positives:   68
False positives:  432
False negatives:   32
True negatives:  668

-------------------------

Pipeline(steps=[('scaler', Normalizer(copy=True, norm='l2')), ('kbest', SelectKBest(k='all', score_func=<function f_classif at 0x1054345f0>)), ('clf', LinearSVC(C=1, class_weight='balanced', dual=False, fit_intercept=True,
     intercept_scaling=1, loss='squared_hinge', max_iter=1000,
     multi_class='ovr', penalty='l2', random_state=None, tol=0.0001,
     verbose=0))])

Accuracy: 0.61333
Precision: 0.13600
Recall: 0.68000
F1: 0.22667
F2: 0.37778

Total predictions: 1200
True positives:   68
False positives:  432
False negatives:   32
True negatives:  668

-------------------------

Pipeline(steps=[('scaler', Normalizer(copy=True, norm='l2')), ('kbest', SelectKBest(k='all', score_func=<function f_classif at 0x10532b5f0>)), ('clf', LinearSVC(C=1, class_weight='balanced', dual=False, fit_intercept=True,
     intercept_scaling=1, loss='squared_hinge', max_iter=1000,
     multi_class='ovr', penalty='l2', random_state=None, tol=0.0001,
     verbose=0))])

Accuracy: 0.61333
Precision: 0.13600
Recall: 0.68000
F1: 0.22667
F2: 0.37778

Total predictions: 1200
True positives:   68
False positives:  432
False negatives:   32
True negatives:  668

-------------------------

Pipeline(steps=[('scaler', Normalizer(copy=True, norm='l2')), ('kbest', SelectKBest(k='all', score_func=<function f_classif at 0x10532b5f0>)), ('clf', LinearSVC(C=1, class_weight='balanced', dual=False, fit_intercept=True,
     intercept_scaling=1, loss='squared_hinge', max_iter=1000,
     multi_class='ovr', penalty='l2', random_state=None, tol=0.0001,
     verbose=0))])

Accuracy: 0.61333
Precision: 0.13600
Recall: 0.68000
F1: 0.22667
F2: 0.37778

Total predictions: 1200
True positives:   68
False positives:  432
False negatives:   32
True negatives:  668

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: distance

<custom_classifiers.weighted_knn instance at 0x1059bff80>

Accuracy: 0.86917
Precision: 0.24779
Recall: 0.28000
F1: 0.26291
F2: 0.27290

Total predictions: 1200
True positives:   28
False positives:   85
False negatives:   72
True negatives: 1015

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: distance

<custom_classifiers.weighted_knn instance at 0x1059bce18>

Accuracy: 0.90750
Precision: 0.45299
Recall: 0.53000
F1: 0.48848
F2: 0.51257

Total predictions: 1200
True positives:   53
False positives:   64
False negatives:   47
True negatives: 1036

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: distance

<custom_classifiers.weighted_knn instance at 0x105ac6e18>

Accuracy: 0.90833
Precision: 0.45690
Recall: 0.53000
F1: 0.49074
F2: 0.51357

Total predictions: 1200
True positives:   53
False positives:   63
False negatives:   47
True negatives: 1037

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: distance

<custom_classifiers.weighted_knn instance at 0x1059bce18>

Accuracy: 0.89500
Precision: 0.40000
Recall: 0.52000
F1: 0.45217
F2: 0.49057

Total predictions: 1200
True positives:   52
False positives:   78
False negatives:   48
True negatives: 1022

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: distance

<custom_classifiers.weighted_knn instance at 0x105abee18>

Accuracy: 0.89917
Precision: 0.40838
Recall: 0.46800
F1: 0.43616
F2: 0.45472

Total predictions: 12000
True positives:  468
False positives:  678
False negatives:  532
True negatives: 10322

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: distance

<custom_classifiers.weighted_knn instance at 0x105ac0e18>

Accuracy: 0.89892
Precision: 0.40715
Recall: 0.46700
F1: 0.43503
F2: 0.45366

Total predictions: 12000
True positives:  467
False positives:  680
False negatives:  533
True negatives: 10320

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x105968f38>

Accuracy: 0.91192
Precision: 0.47118
Recall: 0.46600
F1: 0.46858
F2: 0.46703

Total predictions: 12000
True positives:  466
False positives:  523
False negatives:  534
True negatives: 10477

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x105abfe18>

Accuracy: 0.91192
Precision: 0.47118
Recall: 0.46600
F1: 0.46858
F2: 0.46703

Total predictions: 12000
True positives:  466
False positives:  523
False negatives:  534
True negatives: 10477

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x1059c3e18>

Accuracy: 0.88350
Precision: 0.30717
Recall: 0.31700
F1: 0.31201
F2: 0.31498

Total predictions: 12000
True positives:  317
False positives:  715
False negatives:  683
True negatives: 10285

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x105ac1e18>

Accuracy: 0.91192
Precision: 0.47118
Recall: 0.46600
F1: 0.46858
F2: 0.46703

Total predictions: 12000
True positives:  466
False positives:  523
False negatives:  534
True negatives: 10477

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x1059bde18>

Accuracy: 0.87925
Precision: 0.34223
Recall: 0.48700
F1: 0.40198
F2: 0.44901

Total predictions: 12000
True positives:  487
False positives:  936
False negatives:  513
True negatives: 10064

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x105abfe18>

Accuracy: 0.87925
Precision: 0.34223
Recall: 0.48700
F1: 0.40198
F2: 0.44901

Total predictions: 12000
True positives:  487
False positives:  936
False negatives:  513
True negatives: 10064

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x105abfe18>

Accuracy: 0.87233
Precision: 0.32361
Recall: 0.48800
F1: 0.38915
F2: 0.44299

Total predictions: 12000
True positives:  488
False positives: 1020
False negatives:  512
True negatives: 9980

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x105ac0e18>

Accuracy: 0.86400
Precision: 0.28763
Recall: 0.42800
F1: 0.34405
F2: 0.38994

Total predictions: 12000
True positives:  428
False positives: 1060
False negatives:  572
True negatives: 9940

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x1059bee18>

Accuracy: 0.86400
Precision: 0.28763
Recall: 0.42800
F1: 0.34405
F2: 0.38994

Total predictions: 12000
True positives:  428
False positives: 1060
False negatives:  572
True negatives: 9940

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x1059bce18>

Accuracy: 0.86892
Precision: 0.30255
Recall: 0.43900
F1: 0.35822
F2: 0.40268

Total predictions: 12000
True positives:  439
False positives: 1012
False negatives:  561
True negatives: 9988

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x105ac0e18>

Accuracy: 0.87925
Precision: 0.34223
Recall: 0.48700
F1: 0.40198
F2: 0.44901

Total predictions: 12000
True positives:  487
False positives:  936
False negatives:  513
True negatives: 10064

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x105abde18>

Accuracy: 0.87925
Precision: 0.34223
Recall: 0.48700
F1: 0.40198
F2: 0.44901

Total predictions: 12000
True positives:  487
False positives:  936
False negatives:  513
True negatives: 10064

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x105ac4e18>

Accuracy: 0.87925
Precision: 0.34223
Recall: 0.48700
F1: 0.40198
F2: 0.44901

Total predictions: 12000
True positives:  487
False positives:  936
False negatives:  513
True negatives: 10064

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x105abfe18>

Accuracy: 0.89333
Precision: 0.39062
Recall: 0.50000
F1: 0.43860
F2: 0.47348

Total predictions: 1200
True positives:   50
False positives:   78
False negatives:   50
True negatives: 1022

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x105abde18>

Accuracy: 0.88750
Precision: 0.37037
Recall: 0.50000
F1: 0.42553
F2: 0.46729

Total predictions: 1200
True positives:   50
False positives:   85
False negatives:   50
True negatives: 1015

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x1059bee18>

Accuracy: 0.90250
Precision: 0.42735
Recall: 0.50000
F1: 0.46083
F2: 0.48356

Total predictions: 1200
True positives:   50
False positives:   67
False negatives:   50
True negatives: 1033

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x1059bde18>

Accuracy: 0.89833
Precision: 0.41129
Recall: 0.51000
F1: 0.45536
F2: 0.48664

Total predictions: 1200
True positives:   51
False positives:   73
False negatives:   49
True negatives: 1027

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x1059bce18>

Accuracy: 0.89833
Precision: 0.41129
Recall: 0.51000
F1: 0.45536
F2: 0.48664

Total predictions: 1200
True positives:   51
False positives:   73
False negatives:   49
True negatives: 1027

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x1059bde18>

Accuracy: 0.91333
Precision: 0.48039
Recall: 0.49000
F1: 0.48515
F2: 0.48805

Total predictions: 1200
True positives:   49
False positives:   53
False negatives:   51
True negatives: 1047

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x105abfe18>

Accuracy: 0.90167
Precision: 0.39535
Recall: 0.34000
F1: 0.36559
F2: 0.34979

Total predictions: 1200
True positives:   34
False positives:   52
False negatives:   66
True negatives: 1048

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x1059bce18>

Accuracy: 0.89167
Precision: 0.35577
Recall: 0.37000
F1: 0.36275
F2: 0.36706

Total predictions: 1200
True positives:   37
False positives:   67
False negatives:   63
True negatives: 1033

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x105abde18>

Accuracy: 0.89667
Precision: 0.40000
Recall: 0.48000
F1: 0.43636
F2: 0.46154

Total predictions: 1200
True positives:   48
False positives:   72
False negatives:   52
True negatives: 1028

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x105ac6e18>

Accuracy: 0.91333
Precision: 0.48039
Recall: 0.49000
F1: 0.48515
F2: 0.48805

Total predictions: 1200
True positives:   49
False positives:   53
False negatives:   51
True negatives: 1047

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x1059bde18>

Accuracy: 0.89833
Precision: 0.41129
Recall: 0.51000
F1: 0.45536
F2: 0.48664

Total predictions: 1200
True positives:   51
False positives:   73
False negatives:   49
True negatives: 1027

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x1059c2e18>

Accuracy: 0.91333
Precision: 0.48039
Recall: 0.49000
F1: 0.48515
F2: 0.48805

Total predictions: 1200
True positives:   49
False positives:   53
False negatives:   51
True negatives: 1047

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x1059bce18>

Accuracy: 0.91333
Precision: 0.48039
Recall: 0.49000
F1: 0.48515
F2: 0.48805

Total predictions: 1200
True positives:   49
False positives:   53
False negatives:   51
True negatives: 1047

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x105ac0e18>

Accuracy: 0.91333
Precision: 0.48039
Recall: 0.49000
F1: 0.48515
F2: 0.48805

Total predictions: 1200
True positives:   49
False positives:   53
False negatives:   51
True negatives: 1047

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x105abfe18>

Accuracy: 0.91333
Precision: 0.48039
Recall: 0.49000
F1: 0.48515
F2: 0.48805

Total predictions: 1200
True positives:   49
False positives:   53
False negatives:   51
True negatives: 1047

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x105abfe18>

Accuracy: 0.91333
Precision: 0.48039
Recall: 0.49000
F1: 0.48515
F2: 0.48805

Total predictions: 1200
True positives:   49
False positives:   53
False negatives:   51
True negatives: 1047

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x105ac0e18>

Accuracy: 0.90000
Precision: 0.41525
Recall: 0.49000
F1: 0.44954
F2: 0.47297

Total predictions: 1200
True positives:   49
False positives:   69
False negatives:   51
True negatives: 1031

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x105abdf80>

Accuracy: 0.89750
Precision: 0.39252
Recall: 0.42000
F1: 0.40580
F2: 0.41420

Total predictions: 1200
True positives:   42
False positives:   65
False negatives:   58
True negatives: 1035

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x105ac5f80>

Accuracy: 0.89750
Precision: 0.39252
Recall: 0.42000
F1: 0.40580
F2: 0.41420

Total predictions: 1200
True positives:   42
False positives:   65
False negatives:   58
True negatives: 1035

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x1059bcf80>

Accuracy: 0.89750
Precision: 0.39252
Recall: 0.42000
F1: 0.40580
F2: 0.41420

Total predictions: 1200
True positives:   42
False positives:   65
False negatives:   58
True negatives: 1035

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x105abdf38>

Accuracy: 0.89750
Precision: 0.39252
Recall: 0.42000
F1: 0.40580
F2: 0.41420

Total predictions: 1200
True positives:   42
False positives:   65
False negatives:   58
True negatives: 1035

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x105ac0f38>

Accuracy: 0.89750
Precision: 0.39252
Recall: 0.42000
F1: 0.40580
F2: 0.41420

Total predictions: 1200
True positives:   42
False positives:   65
False negatives:   58
True negatives: 1035

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x1059bcef0>

Accuracy: 0.89750
Precision: 0.39252
Recall: 0.42000
F1: 0.40580
F2: 0.41420

Total predictions: 1200
True positives:   42
False positives:   65
False negatives:   58
True negatives: 1035

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x1059bcea8>

Accuracy: 0.89750
Precision: 0.39252
Recall: 0.42000
F1: 0.40580
F2: 0.41420

Total predictions: 1200
True positives:   42
False positives:   65
False negatives:   58
True negatives: 1035

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x1059bce60>

Accuracy: 0.89750
Precision: 0.39252
Recall: 0.42000
F1: 0.40580
F2: 0.41420

Total predictions: 1200
True positives:   42
False positives:   65
False negatives:   58
True negatives: 1035

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x105ac8e18>

Accuracy: 0.90000
Precision: 0.41525
Recall: 0.49000
F1: 0.44954
F2: 0.47297

Total predictions: 1200
True positives:   49
False positives:   69
False negatives:   51
True negatives: 1031

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x1059bde60>

Accuracy: 0.89750
Precision: 0.39252
Recall: 0.42000
F1: 0.40580
F2: 0.41420

Total predictions: 1200
True positives:   42
False positives:   65
False negatives:   58
True negatives: 1035

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x1059bcf38>

Accuracy: 0.89750
Precision: 0.39252
Recall: 0.42000
F1: 0.40580
F2: 0.41420

Total predictions: 1200
True positives:   42
False positives:   65
False negatives:   58
True negatives: 1035

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x105abce18>

Accuracy: 0.90000
Precision: 0.41525
Recall: 0.49000
F1: 0.44954
F2: 0.47297

Total predictions: 1200
True positives:   49
False positives:   69
False negatives:   51
True negatives: 1031

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x1059bee18>

Accuracy: 0.88750
Precision: 0.37037
Recall: 0.50000
F1: 0.42553
F2: 0.46729

Total predictions: 1200
True positives:   50
False positives:   85
False negatives:   50
True negatives: 1015

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x1059bce18>

Accuracy: 0.89667
Precision: 0.40000
Recall: 0.48000
F1: 0.43636
F2: 0.46154

Total predictions: 1200
True positives:   48
False positives:   72
False negatives:   52
True negatives: 1028

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x1059bce18>

Accuracy: 0.89667
Precision: 0.40000
Recall: 0.48000
F1: 0.43636
F2: 0.46154

Total predictions: 1200
True positives:   48
False positives:   72
False negatives:   52
True negatives: 1028

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x105ac5e18>

Accuracy: 0.91333
Precision: 0.48039
Recall: 0.49000
F1: 0.48515
F2: 0.48805

Total predictions: 1200
True positives:   49
False positives:   53
False negatives:   51
True negatives: 1047

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x1059bfe18>

Accuracy: 0.91333
Precision: 0.48039
Recall: 0.49000
F1: 0.48515
F2: 0.48805

Total predictions: 1200
True positives:   49
False positives:   53
False negatives:   51
True negatives: 1047

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x1059bce18>

Accuracy: 0.88333
Precision: 0.31132
Recall: 0.33000
F1: 0.32039
F2: 0.32609

Total predictions: 1200
True positives:   33
False positives:   73
False negatives:   67
True negatives: 1027

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x1059bfe18>

Accuracy: 0.91333
Precision: 0.48039
Recall: 0.49000
F1: 0.48515
F2: 0.48805

Total predictions: 1200
True positives:   49
False positives:   53
False negatives:   51
True negatives: 1047

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x1059bce18>

Accuracy: 0.85583
Precision: 0.27879
Recall: 0.46000
F1: 0.34717
F2: 0.40708

Total predictions: 1200
True positives:   46
False positives:  119
False negatives:   54
True negatives:  981

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x1059bce18>

Accuracy: 0.89750
Precision: 0.38614
Recall: 0.39000
F1: 0.38806
F2: 0.38922

Total predictions: 1200
True positives:   39
False positives:   62
False negatives:   61
True negatives: 1038

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x1059bce18>

Accuracy: 0.91583
Precision: 0.49485
Recall: 0.48000
F1: 0.48731
F2: 0.48290

Total predictions: 1200
True positives:   48
False positives:   49
False negatives:   52
True negatives: 1051

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x1059bde18>

Accuracy: 0.91333
Precision: 0.48039
Recall: 0.49000
F1: 0.48515
F2: 0.48805

Total predictions: 1200
True positives:   49
False positives:   53
False negatives:   51
True negatives: 1047

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x1059c1e18>

Accuracy: 0.91583
Precision: 0.49485
Recall: 0.48000
F1: 0.48731
F2: 0.48290

Total predictions: 1200
True positives:   48
False positives:   49
False negatives:   52
True negatives: 1051

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x10586cf38>

Accuracy: 0.91192
Precision: 0.47118
Recall: 0.46600
F1: 0.46858
F2: 0.46703

Total predictions: 12000
True positives:  466
False positives:  523
False negatives:  534
True negatives: 10477

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x105863f38>

Accuracy: 0.91358
Precision: 0.47983
Recall: 0.44000
F1: 0.45905
F2: 0.44743

Total predictions: 12000
True positives:  440
False positives:  477
False negatives:  560
True negatives: 10523

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x105972f38>

Accuracy: 0.91358
Precision: 0.47983
Recall: 0.44000
F1: 0.45905
F2: 0.44743

Total predictions: 12000
True positives:  440
False positives:  477
False negatives:  560
True negatives: 10523

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x105863f38>

Accuracy: 0.91192
Precision: 0.47118
Recall: 0.46600
F1: 0.46858
F2: 0.46703

Total predictions: 12000
True positives:  466
False positives:  523
False negatives:  534
True negatives: 10477

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x105867f38>

Accuracy: 0.91358
Precision: 0.47983
Recall: 0.44000
F1: 0.45905
F2: 0.44743

Total predictions: 12000
True positives:  440
False positives:  477
False negatives:  560
True negatives: 10523

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x105879f38>

Accuracy: 0.88767
Precision: 0.36996
Recall: 0.49500
F1: 0.42344
F2: 0.46366

Total predictions: 12000
True positives:  495
False positives:  843
False negatives:  505
True negatives: 10157

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x105864f38>

Accuracy: 0.88767
Precision: 0.36996
Recall: 0.49500
F1: 0.42344
F2: 0.46366

Total predictions: 12000
True positives:  495
False positives:  843
False negatives:  505
True negatives: 10157

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x105971f38>

Accuracy: 0.91192
Precision: 0.47118
Recall: 0.46600
F1: 0.46858
F2: 0.46703

Total predictions: 12000
True positives:  466
False positives:  523
False negatives:  534
True negatives: 10477

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x105868f38>

Accuracy: 0.91192
Precision: 0.47118
Recall: 0.46600
F1: 0.46858
F2: 0.46703

Total predictions: 12000
True positives:  466
False positives:  523
False negatives:  534
True negatives: 10477

-------------------------

Replicator params:
dominant_class_prevalence: 2
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 5, 'weights': 'uniform'}

Pipeline(steps=[('scaler', Normalizer(copy=True, norm='l2')), ('kbest', SelectKBest(k='all', score_func=<function f_classif at 0x10532e5f0>)), ('clf', <custom_classifiers.replicator instance at 0x105ac5d40>)])

Accuracy: 0.68083
Precision: 0.05079
Recall: 0.16000
F1: 0.07711
F2: 0.11189

Total predictions: 1200
True positives:   16
False positives:  299
False negatives:   84
True negatives:  801

-------------------------

Replicator params:
dominant_class_prevalence: 2
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 5, 'weights': 'uniform'}

Pipeline(steps=[('scaler', Normalizer(copy=True, norm='l2')), ('clf', <custom_classifiers.replicator instance at 0x105ac6d40>)])

Accuracy: 0.68083
Precision: 0.05079
Recall: 0.16000
F1: 0.07711
F2: 0.11189

Total predictions: 1200
True positives:   16
False positives:  299
False negatives:   84
True negatives:  801

-------------------------

Replicator params:
dominant_class_prevalence: 2
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 5, 'weights': 'uniform'}

Pipeline(steps=[('clf', <custom_classifiers.replicator instance at 0x1059bcd40>)])

Accuracy: 0.79417
Precision: 0.23273
Recall: 0.64000
F1: 0.34133
F2: 0.47407

Total predictions: 1200
True positives:   64
False positives:  211
False negatives:   36
True negatives:  889

-------------------------

Replicator params:
dominant_class_prevalence: 2
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 5, 'weights': 'uniform'}

Pipeline(steps=[('scaler', Normalizer(copy=True, norm='l2')), ('clf', <custom_classifiers.replicator instance at 0x1059bdd40>)])

Accuracy: 0.68083
Precision: 0.05079
Recall: 0.16000
F1: 0.07711
F2: 0.11189

Total predictions: 1200
True positives:   16
False positives:  299
False negatives:   84
True negatives:  801

-------------------------

Replicator params:
dominant_class_prevalence: 2
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 5, 'weights': 'uniform'}

Pipeline(steps=[('scaler', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', <custom_classifiers.replicator instance at 0x105abfd40>)])

Accuracy: 0.81167
Precision: 0.19712
Recall: 0.41000
F1: 0.26623
F2: 0.33717

Total predictions: 1200
True positives:   41
False positives:  167
False negatives:   59
True negatives:  933

-------------------------

Replicator params:
dominant_class_prevalence: 2
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 5, 'weights': 'uniform'}

Pipeline(steps=[('scaler', MinMaxScaler(copy=True, feature_range=(0, 1))), ('clf', <custom_classifiers.replicator instance at 0x1059bdd40>)])

Accuracy: 0.81083
Precision: 0.21525
Recall: 0.48000
F1: 0.29721
F2: 0.38523

Total predictions: 1200
True positives:   48
False positives:  175
False negatives:   52
True negatives:  925

-------------------------

Replicator params:
dominant_class_prevalence: 2
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 5, 'weights': 'uniform'}

Pipeline(steps=[('clf', <custom_classifiers.replicator instance at 0x1059bdd40>)])

Accuracy: 0.79417
Precision: 0.23273
Recall: 0.64000
F1: 0.34133
F2: 0.47407

Total predictions: 1200
True positives:   64
False positives:  211
False negatives:   36
True negatives:  889

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

Pipeline(steps=[('scaler', MinMaxScaler(copy=True, feature_range=(0, 1))), ('clf', <custom_classifiers.weighted_knn instance at 0x105864f38>)])

Accuracy: 0.85158
Precision: 0.17267
Recall: 0.20600
F1: 0.18787
F2: 0.19834

Total predictions: 12000
True positives:  206
False positives:  987
False negatives:  794
True negatives: 10013

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

Pipeline(steps=[('scaler', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', <custom_classifiers.weighted_knn instance at 0x105868f38>)])

Accuracy: 0.84925
Precision: 0.15633
Recall: 0.18400
F1: 0.16904
F2: 0.17771

Total predictions: 12000
True positives:  184
False positives:  993
False negatives:  816
True negatives: 10007

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

Pipeline(steps=[('scaler', Normalizer(copy=True, norm='l2')), ('clf', <custom_classifiers.weighted_knn instance at 0x10586cf38>)])

Accuracy: 0.86158
Precision: 0.10795
Recall: 0.09100
F1: 0.09875
F2: 0.09395

Total predictions: 12000
True positives:   91
False positives:  752
False negatives:  909
True negatives: 10248

-------------------------

Replicator params:
dominant_class_prevalence: 2
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 12, 'weights': 'uniform'}

Pipeline(steps=[('scaler', MinMaxScaler(copy=True, feature_range=(0, 1))), ('clf', <custom_classifiers.replicator instance at 0x10586eea8>)])

Accuracy: 0.85833
Precision: 0.22222
Recall: 0.28000
F1: 0.24779
F2: 0.26616

Total predictions: 1200
True positives:   28
False positives:   98
False negatives:   72
True negatives: 1002

-------------------------

Replicator params:
dominant_class_prevalence: 2
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 12, 'weights': 'uniform'}

Pipeline(steps=[('scaler', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', <custom_classifiers.replicator instance at 0x105863ea8>)])

Accuracy: 0.84750
Precision: 0.20567
Recall: 0.29000
F1: 0.24066
F2: 0.26802

Total predictions: 1200
True positives:   29
False positives:  112
False negatives:   71
True negatives:  988

-------------------------

Replicator params:
dominant_class_prevalence: 2
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 12, 'weights': 'uniform'}

Pipeline(steps=[('scaler', Normalizer(copy=True, norm='l2')), ('clf', <custom_classifiers.replicator instance at 0x10596dea8>)])

Accuracy: 0.79583
Precision: 0.02614
Recall: 0.04000
F1: 0.03162
F2: 0.03617

Total predictions: 1200
True positives:    4
False positives:  149
False negatives:   96
True negatives:  951

-------------------------

Replicator params:
dominant_class_prevalence: 2
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 12, 'weights': 'uniform'}

Pipeline(steps=[('clf', <custom_classifiers.replicator instance at 0x105563ea8>)])

Accuracy: 0.88750
Precision: 0.39766
Recall: 0.68000
F1: 0.50185
F2: 0.59545

Total predictions: 1200
True positives:   68
False positives:  103
False negatives:   32
True negatives:  997

-------------------------

SplitterS params:
certainty: 0.6
max_imbalance: 2
clf_mode: 0
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 3, 'weights': 'uniform'}

Pipeline(steps=[('scaler', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', <custom_classifiers.splitter instance at 0x10515c518>)])

Accuracy: 0.85000
Precision: 0.18254
Recall: 0.23000
F1: 0.20354
F2: 0.21863

Total predictions: 1200
True positives:   23
False positives:  103
False negatives:   77
True negatives:  997

-------------------------

SplitterS params:
certainty: 0.6
max_imbalance: 2
clf_mode: 0
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 3, 'weights': 'uniform'}

Pipeline(steps=[('scaler', MinMaxScaler(copy=True, feature_range=(0, 1))), ('clf', <custom_classifiers.splitter instance at 0x10515d518>)])

Accuracy: 0.85417
Precision: 0.20472
Recall: 0.26000
F1: 0.22907
F2: 0.24668

Total predictions: 1200
True positives:   26
False positives:  101
False negatives:   74
True negatives:  999

-------------------------

SplitterS params:
certainty: 0.6
max_imbalance: 2
clf_mode: 0
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 3, 'weights': 'uniform'}

Pipeline(steps=[('scaler', Normalizer(copy=True, norm='l2')), ('clf', <custom_classifiers.splitter instance at 0x105162518>)])

Accuracy: 0.80917
Precision: 0.05517
Recall: 0.08000
F1: 0.06531
F2: 0.07339

Total predictions: 1200
True positives:    8
False positives:  137
False negatives:   92
True negatives:  963

-------------------------

SplitterS params:
certainty: 0.6
max_imbalance: 2
clf_mode: 0
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 3, 'weights': 'uniform'}

Pipeline(steps=[('scaler', MaxAbsScaler(copy=True)), ('clf', <custom_classifiers.splitter instance at 0x10528a518>)])

Accuracy: 0.85417
Precision: 0.20472
Recall: 0.26000
F1: 0.22907
F2: 0.24668

Total predictions: 1200
True positives:   26
False positives:  101
False negatives:   74
True negatives:  999

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

SplitterS params:
certainty: 0.6
max_imbalance: 2
clf_mode: 0
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 3, 'weights': 'uniform'}

<custom_classifiers.splitter instance at 0x105212518>

Accuracy: 0.87842
Precision: 0.35842
Recall: 0.58100
F1: 0.44334
F2: 0.51681

Total predictions: 12000
True positives:  581
False positives: 1040
False negatives:  419
True negatives: 9960

-------------------------

Replicator params:
dominant_class_prevalence: 2
clf_class: <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
clf_params: {'n_neighbors': 12, 'weights': 'uniform'}

<custom_classifiers.replicator instance at 0x10591aea8>

Accuracy: 0.87733
Precision: 0.36483
Recall: 0.63700
F1: 0.46395
F2: 0.55430

Total predictions: 12000
True positives:  637
False positives: 1109
False negatives:  363
True negatives: 9891

-------------------------

weighted_knn params:
n_neighbors: 6
class_weights: {0: 1, 1: 5}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x10591bef0>

Accuracy: 0.88983
Precision: 0.38484
Recall: 0.53800
F1: 0.44871
F2: 0.49833

Total predictions: 12000
True positives:  538
False positives:  860
False negatives:  462
True negatives: 10140

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x10591ef38>

Accuracy: 0.91192
Precision: 0.47118
Recall: 0.46600
F1: 0.46858
F2: 0.46703

Total predictions: 12000
True positives:  466
False positives:  523
False negatives:  534
True negatives: 10477

-------------------------

weighted_knn params:
n_neighbors: 10
class_weights: {0: 1, 1: 3}
distance_weights: uniform

<custom_classifiers.weighted_knn instance at 0x105220f38>

Accuracy: 0.91192
Precision: 0.47118
Recall: 0.46600
F1: 0.46858
F2: 0.46703

Total predictions: 12000
True positives:  466
False positives:  523
False negatives:  534
True negatives: 10477

-------------------------

<custom_classifiers.weighted_knn instance at 0x10502a830>

Accuracy: 0.91192
Precision: 0.47118
Recall: 0.46600
F1: 0.46858
F2: 0.46703

Total predictions: 12000
True positives:  466
False positives:  523
False negatives:  534
True negatives: 10477

-------------------------

